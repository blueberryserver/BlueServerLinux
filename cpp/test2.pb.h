// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test2.proto

#ifndef PROTOBUF_test2_2eproto__INCLUDED
#define PROTOBUF_test2_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "test.pb.h"
// @@protoc_insertion_point(includes)

namespace BLUE_BERRY {
namespace Test {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_test2_2eproto();
void protobuf_AssignDesc_test2_2eproto();
void protobuf_ShutdownFile_test2_2eproto();

class PingReq;
class PongAns;

// ===================================================================

class PingReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BLUE_BERRY.Test.PingReq) */ {
 public:
  PingReq();
  virtual ~PingReq();

  PingReq(const PingReq& from);

  inline PingReq& operator=(const PingReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PingReq& default_instance();

  void Swap(PingReq* other);

  // implements Message ----------------------------------------------

  inline PingReq* New() const { return New(NULL); }

  PingReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PingReq& from);
  void MergeFrom(const PingReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PingReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dummy = 1;
  bool has_dummy() const;
  void clear_dummy();
  static const int kDummyFieldNumber = 1;
  ::google::protobuf::uint32 dummy() const;
  void set_dummy(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BLUE_BERRY.Test.PingReq)
 private:
  inline void set_has_dummy();
  inline void clear_has_dummy();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 dummy_;
  friend void  protobuf_AddDesc_test2_2eproto();
  friend void protobuf_AssignDesc_test2_2eproto();
  friend void protobuf_ShutdownFile_test2_2eproto();

  void InitAsDefaultInstance();
  static PingReq* default_instance_;
};
// -------------------------------------------------------------------

class PongAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BLUE_BERRY.Test.PongAns) */ {
 public:
  PongAns();
  virtual ~PongAns();

  PongAns(const PongAns& from);

  inline PongAns& operator=(const PongAns& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PongAns& default_instance();

  void Swap(PongAns* other);

  // implements Message ----------------------------------------------

  inline PongAns* New() const { return New(NULL); }

  PongAns* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PongAns& from);
  void MergeFrom(const PongAns& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PongAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .BLUE_BERRY.Test.ErrorCode err = 1;
  bool has_err() const;
  void clear_err();
  static const int kErrFieldNumber = 1;
  ::BLUE_BERRY::Test::ErrorCode err() const;
  void set_err(::BLUE_BERRY::Test::ErrorCode value);

  // @@protoc_insertion_point(class_scope:BLUE_BERRY.Test.PongAns)
 private:
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int err_;
  friend void  protobuf_AddDesc_test2_2eproto();
  friend void protobuf_AssignDesc_test2_2eproto();
  friend void protobuf_ShutdownFile_test2_2eproto();

  void InitAsDefaultInstance();
  static PongAns* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PingReq

// required uint32 dummy = 1;
inline bool PingReq::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PingReq::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PingReq::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PingReq::clear_dummy() {
  dummy_ = 0u;
  clear_has_dummy();
}
inline ::google::protobuf::uint32 PingReq::dummy() const {
  // @@protoc_insertion_point(field_get:BLUE_BERRY.Test.PingReq.dummy)
  return dummy_;
}
inline void PingReq::set_dummy(::google::protobuf::uint32 value) {
  set_has_dummy();
  dummy_ = value;
  // @@protoc_insertion_point(field_set:BLUE_BERRY.Test.PingReq.dummy)
}

// -------------------------------------------------------------------

// PongAns

// required .BLUE_BERRY.Test.ErrorCode err = 1;
inline bool PongAns::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PongAns::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PongAns::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PongAns::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::BLUE_BERRY::Test::ErrorCode PongAns::err() const {
  // @@protoc_insertion_point(field_get:BLUE_BERRY.Test.PongAns.err)
  return static_cast< ::BLUE_BERRY::Test::ErrorCode >(err_);
}
inline void PongAns::set_err(::BLUE_BERRY::Test::ErrorCode value) {
  assert(::BLUE_BERRY::Test::ErrorCode_IsValid(value));
  set_has_err();
  err_ = value;
  // @@protoc_insertion_point(field_set:BLUE_BERRY.Test.PongAns.err)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Test
}  // namespace BLUE_BERRY

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_test2_2eproto__INCLUDED
