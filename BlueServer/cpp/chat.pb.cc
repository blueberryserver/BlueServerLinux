// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chat.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "chat.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MSG {

namespace {

const ::google::protobuf::Descriptor* ChatReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChatReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChatAns_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChatAns_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChatNot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChatNot_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateChatRoomReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateChatRoomReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateChatRoomAns_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateChatRoomAns_reflection_ = NULL;
const ::google::protobuf::Descriptor* InviteChatRoomReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InviteChatRoomReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* InviteChatRoomAns_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InviteChatRoomAns_reflection_ = NULL;
const ::google::protobuf::Descriptor* InviteChatRoomNot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InviteChatRoomNot_reflection_ = NULL;
const ::google::protobuf::Descriptor* EnterChatRoomReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnterChatRoomReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* EnterChatRoomAns_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnterChatRoomAns_reflection_ = NULL;
const ::google::protobuf::Descriptor* EnterChatRoomNot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnterChatRoomNot_reflection_ = NULL;
const ::google::protobuf::Descriptor* LeaveChatRoomReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LeaveChatRoomReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LeaveChatRoomAns_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LeaveChatRoomAns_reflection_ = NULL;
const ::google::protobuf::Descriptor* LeaveChatRoomNot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LeaveChatRoomNot_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_chat_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_chat_2eproto() {
  protobuf_AddDesc_chat_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "chat.proto");
  GOOGLE_CHECK(file != NULL);
  ChatReq_descriptor_ = file->message_type(0);
  static const int ChatReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatReq, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatReq, type_),
  };
  ChatReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChatReq_descriptor_,
      ChatReq::default_instance_,
      ChatReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(ChatReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatReq, _internal_metadata_),
      -1);
  ChatAns_descriptor_ = file->message_type(1);
  static const int ChatAns_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatAns, err_),
  };
  ChatAns_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChatAns_descriptor_,
      ChatAns::default_instance_,
      ChatAns_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatAns, _has_bits_[0]),
      -1,
      -1,
      sizeof(ChatAns),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatAns, _internal_metadata_),
      -1);
  ChatNot_descriptor_ = file->message_type(2);
  static const int ChatNot_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatNot, chats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatNot, type_),
  };
  ChatNot_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChatNot_descriptor_,
      ChatNot::default_instance_,
      ChatNot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatNot, _has_bits_[0]),
      -1,
      -1,
      sizeof(ChatNot),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatNot, _internal_metadata_),
      -1);
  CreateChatRoomReq_descriptor_ = file->message_type(3);
  static const int CreateChatRoomReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatRoomReq, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatRoomReq, greeting_),
  };
  CreateChatRoomReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateChatRoomReq_descriptor_,
      CreateChatRoomReq::default_instance_,
      CreateChatRoomReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatRoomReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(CreateChatRoomReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatRoomReq, _internal_metadata_),
      -1);
  CreateChatRoomAns_descriptor_ = file->message_type(4);
  static const int CreateChatRoomAns_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatRoomAns, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatRoomAns, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatRoomAns, rkey_),
  };
  CreateChatRoomAns_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateChatRoomAns_descriptor_,
      CreateChatRoomAns::default_instance_,
      CreateChatRoomAns_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatRoomAns, _has_bits_[0]),
      -1,
      -1,
      sizeof(CreateChatRoomAns),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatRoomAns, _internal_metadata_),
      -1);
  InviteChatRoomReq_descriptor_ = file->message_type(5);
  static const int InviteChatRoomReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteChatRoomReq, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteChatRoomReq, rkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteChatRoomReq, targetuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteChatRoomReq, targetname_),
  };
  InviteChatRoomReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InviteChatRoomReq_descriptor_,
      InviteChatRoomReq::default_instance_,
      InviteChatRoomReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteChatRoomReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(InviteChatRoomReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteChatRoomReq, _internal_metadata_),
      -1);
  InviteChatRoomAns_descriptor_ = file->message_type(6);
  static const int InviteChatRoomAns_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteChatRoomAns, err_),
  };
  InviteChatRoomAns_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InviteChatRoomAns_descriptor_,
      InviteChatRoomAns::default_instance_,
      InviteChatRoomAns_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteChatRoomAns, _has_bits_[0]),
      -1,
      -1,
      sizeof(InviteChatRoomAns),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteChatRoomAns, _internal_metadata_),
      -1);
  InviteChatRoomNot_descriptor_ = file->message_type(7);
  static const int InviteChatRoomNot_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteChatRoomNot, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteChatRoomNot, rkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteChatRoomNot, owneruid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteChatRoomNot, ownername_),
  };
  InviteChatRoomNot_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InviteChatRoomNot_descriptor_,
      InviteChatRoomNot::default_instance_,
      InviteChatRoomNot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteChatRoomNot, _has_bits_[0]),
      -1,
      -1,
      sizeof(InviteChatRoomNot),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteChatRoomNot, _internal_metadata_),
      -1);
  EnterChatRoomReq_descriptor_ = file->message_type(8);
  static const int EnterChatRoomReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterChatRoomReq, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterChatRoomReq, rkey_),
  };
  EnterChatRoomReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EnterChatRoomReq_descriptor_,
      EnterChatRoomReq::default_instance_,
      EnterChatRoomReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterChatRoomReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(EnterChatRoomReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterChatRoomReq, _internal_metadata_),
      -1);
  EnterChatRoomAns_descriptor_ = file->message_type(9);
  static const int EnterChatRoomAns_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterChatRoomAns, err_),
  };
  EnterChatRoomAns_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EnterChatRoomAns_descriptor_,
      EnterChatRoomAns::default_instance_,
      EnterChatRoomAns_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterChatRoomAns, _has_bits_[0]),
      -1,
      -1,
      sizeof(EnterChatRoomAns),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterChatRoomAns, _internal_metadata_),
      -1);
  EnterChatRoomNot_descriptor_ = file->message_type(10);
  static const int EnterChatRoomNot_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterChatRoomNot, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterChatRoomNot, name_),
  };
  EnterChatRoomNot_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EnterChatRoomNot_descriptor_,
      EnterChatRoomNot::default_instance_,
      EnterChatRoomNot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterChatRoomNot, _has_bits_[0]),
      -1,
      -1,
      sizeof(EnterChatRoomNot),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterChatRoomNot, _internal_metadata_),
      -1);
  LeaveChatRoomReq_descriptor_ = file->message_type(11);
  static const int LeaveChatRoomReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveChatRoomReq, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveChatRoomReq, rkey_),
  };
  LeaveChatRoomReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LeaveChatRoomReq_descriptor_,
      LeaveChatRoomReq::default_instance_,
      LeaveChatRoomReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveChatRoomReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(LeaveChatRoomReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveChatRoomReq, _internal_metadata_),
      -1);
  LeaveChatRoomAns_descriptor_ = file->message_type(12);
  static const int LeaveChatRoomAns_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveChatRoomAns, err_),
  };
  LeaveChatRoomAns_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LeaveChatRoomAns_descriptor_,
      LeaveChatRoomAns::default_instance_,
      LeaveChatRoomAns_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveChatRoomAns, _has_bits_[0]),
      -1,
      -1,
      sizeof(LeaveChatRoomAns),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveChatRoomAns, _internal_metadata_),
      -1);
  LeaveChatRoomNot_descriptor_ = file->message_type(13);
  static const int LeaveChatRoomNot_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveChatRoomNot, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveChatRoomNot, name_),
  };
  LeaveChatRoomNot_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LeaveChatRoomNot_descriptor_,
      LeaveChatRoomNot::default_instance_,
      LeaveChatRoomNot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveChatRoomNot, _has_bits_[0]),
      -1,
      -1,
      sizeof(LeaveChatRoomNot),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveChatRoomNot, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_chat_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChatReq_descriptor_, &ChatReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChatAns_descriptor_, &ChatAns::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChatNot_descriptor_, &ChatNot::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateChatRoomReq_descriptor_, &CreateChatRoomReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateChatRoomAns_descriptor_, &CreateChatRoomAns::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InviteChatRoomReq_descriptor_, &InviteChatRoomReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InviteChatRoomAns_descriptor_, &InviteChatRoomAns::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InviteChatRoomNot_descriptor_, &InviteChatRoomNot::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EnterChatRoomReq_descriptor_, &EnterChatRoomReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EnterChatRoomAns_descriptor_, &EnterChatRoomAns::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EnterChatRoomNot_descriptor_, &EnterChatRoomNot::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LeaveChatRoomReq_descriptor_, &LeaveChatRoomReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LeaveChatRoomAns_descriptor_, &LeaveChatRoomAns::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LeaveChatRoomNot_descriptor_, &LeaveChatRoomNot::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_chat_2eproto() {
  delete ChatReq::default_instance_;
  delete ChatReq_reflection_;
  delete ChatAns::default_instance_;
  delete ChatAns_reflection_;
  delete ChatNot::default_instance_;
  delete ChatNot_reflection_;
  delete CreateChatRoomReq::default_instance_;
  delete CreateChatRoomReq_reflection_;
  delete CreateChatRoomAns::default_instance_;
  delete CreateChatRoomAns_reflection_;
  delete InviteChatRoomReq::default_instance_;
  delete InviteChatRoomReq_reflection_;
  delete InviteChatRoomAns::default_instance_;
  delete InviteChatRoomAns_reflection_;
  delete InviteChatRoomNot::default_instance_;
  delete InviteChatRoomNot_reflection_;
  delete EnterChatRoomReq::default_instance_;
  delete EnterChatRoomReq_reflection_;
  delete EnterChatRoomAns::default_instance_;
  delete EnterChatRoomAns_reflection_;
  delete EnterChatRoomNot::default_instance_;
  delete EnterChatRoomNot_reflection_;
  delete LeaveChatRoomReq::default_instance_;
  delete LeaveChatRoomReq_reflection_;
  delete LeaveChatRoomAns::default_instance_;
  delete LeaveChatRoomAns_reflection_;
  delete LeaveChatRoomNot::default_instance_;
  delete LeaveChatRoomNot_reflection_;
}

void protobuf_AddDesc_chat_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_chat_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::MSG::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nchat.proto\022\003MSG\032\014common.proto\"3\n\007ChatR"
    "eq\022\013\n\003msg\030\001 \002(\t\022\033\n\004type\030\002 \002(\0162\r.MSG.Chat"
    "Type\"&\n\007ChatAns\022\033\n\003err\030\001 \002(\0162\016.MSG.Error"
    "Code\"E\n\007ChatNot\022\035\n\005chats\030\001 \002(\0132\016.MSG.Cha"
    "tData_\022\033\n\004type\030\002 \002(\0162\r.MSG.ChatType\"3\n\021C"
    "reateChatRoomReq\022\014\n\004name\030\001 \002(\t\022\020\n\010greeti"
    "ng\030\002 \002(\t\"K\n\021CreateChatRoomAns\022\033\n\003err\030\001 \002"
    "(\0162\016.MSG.ErrorCode\022\013\n\003rid\030\002 \001(\004\022\014\n\004rkey\030"
    "\003 \001(\t\"U\n\021InviteChatRoomReq\022\013\n\003rid\030\001 \002(\004\022"
    "\014\n\004rkey\030\002 \002(\t\022\021\n\ttargetUid\030\003 \002(\004\022\022\n\ntarg"
    "etName\030\004 \002(\t\"0\n\021InviteChatRoomAns\022\033\n\003err"
    "\030\001 \002(\0162\016.MSG.ErrorCode\"S\n\021InviteChatRoom"
    "Not\022\013\n\003rid\030\001 \002(\004\022\014\n\004rkey\030\002 \002(\t\022\020\n\010ownerU"
    "id\030\003 \002(\004\022\021\n\townerName\030\004 \002(\t\"-\n\020EnterChat"
    "RoomReq\022\013\n\003rid\030\001 \002(\004\022\014\n\004rkey\030\002 \002(\t\"/\n\020En"
    "terChatRoomAns\022\033\n\003err\030\001 \002(\0162\016.MSG.ErrorC"
    "ode\"-\n\020EnterChatRoomNot\022\013\n\003uid\030\001 \002(\004\022\014\n\004"
    "name\030\002 \002(\t\"-\n\020LeaveChatRoomReq\022\013\n\003rid\030\001 "
    "\002(\004\022\014\n\004rkey\030\002 \002(\t\"/\n\020LeaveChatRoomAns\022\033\n"
    "\003err\030\001 \002(\0162\016.MSG.ErrorCode\"-\n\020LeaveChatR"
    "oomNot\022\013\n\003uid\030\001 \002(\004\022\014\n\004name\030\002 \002(\t", 833);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "chat.proto", &protobuf_RegisterTypes);
  ChatReq::default_instance_ = new ChatReq();
  ChatAns::default_instance_ = new ChatAns();
  ChatNot::default_instance_ = new ChatNot();
  CreateChatRoomReq::default_instance_ = new CreateChatRoomReq();
  CreateChatRoomAns::default_instance_ = new CreateChatRoomAns();
  InviteChatRoomReq::default_instance_ = new InviteChatRoomReq();
  InviteChatRoomAns::default_instance_ = new InviteChatRoomAns();
  InviteChatRoomNot::default_instance_ = new InviteChatRoomNot();
  EnterChatRoomReq::default_instance_ = new EnterChatRoomReq();
  EnterChatRoomAns::default_instance_ = new EnterChatRoomAns();
  EnterChatRoomNot::default_instance_ = new EnterChatRoomNot();
  LeaveChatRoomReq::default_instance_ = new LeaveChatRoomReq();
  LeaveChatRoomAns::default_instance_ = new LeaveChatRoomAns();
  LeaveChatRoomNot::default_instance_ = new LeaveChatRoomNot();
  ChatReq::default_instance_->InitAsDefaultInstance();
  ChatAns::default_instance_->InitAsDefaultInstance();
  ChatNot::default_instance_->InitAsDefaultInstance();
  CreateChatRoomReq::default_instance_->InitAsDefaultInstance();
  CreateChatRoomAns::default_instance_->InitAsDefaultInstance();
  InviteChatRoomReq::default_instance_->InitAsDefaultInstance();
  InviteChatRoomAns::default_instance_->InitAsDefaultInstance();
  InviteChatRoomNot::default_instance_->InitAsDefaultInstance();
  EnterChatRoomReq::default_instance_->InitAsDefaultInstance();
  EnterChatRoomAns::default_instance_->InitAsDefaultInstance();
  EnterChatRoomNot::default_instance_->InitAsDefaultInstance();
  LeaveChatRoomReq::default_instance_->InitAsDefaultInstance();
  LeaveChatRoomAns::default_instance_->InitAsDefaultInstance();
  LeaveChatRoomNot::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_chat_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_chat_2eproto {
  StaticDescriptorInitializer_chat_2eproto() {
    protobuf_AddDesc_chat_2eproto();
  }
} static_descriptor_initializer_chat_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatReq::kMsgFieldNumber;
const int ChatReq::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatReq::ChatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.ChatReq)
}

void ChatReq::InitAsDefaultInstance() {
}

ChatReq::ChatReq(const ChatReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.ChatReq)
}

void ChatReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChatReq::~ChatReq() {
  // @@protoc_insertion_point(destructor:MSG.ChatReq)
  SharedDtor();
}

void ChatReq::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ChatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatReq_descriptor_;
}

const ChatReq& ChatReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chat_2eproto();
  return *default_instance_;
}

ChatReq* ChatReq::default_instance_ = NULL;

ChatReq* ChatReq::New(::google::protobuf::Arena* arena) const {
  ChatReq* n = new ChatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.ChatReq)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ChatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.ChatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string msg = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.ChatReq.msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required .MSG.ChatType type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MSG::ChatType_IsValid(value)) {
            set_type(static_cast< ::MSG::ChatType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.ChatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.ChatReq)
  return false;
#undef DO_
}

void ChatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.ChatReq)
  // required string msg = 1;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.ChatReq.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  // required .MSG.ChatType type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.ChatReq)
}

::google::protobuf::uint8* ChatReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.ChatReq)
  // required string msg = 1;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.ChatReq.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  // required .MSG.ChatType type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.ChatReq)
  return target;
}

int ChatReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.ChatReq)
  int total_size = 0;

  if (has_msg()) {
    // required string msg = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  if (has_type()) {
    // required .MSG.ChatType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
int ChatReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.ChatReq)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string msg = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

    // required .MSG.ChatType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.ChatReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ChatReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.ChatReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.ChatReq)
    MergeFrom(*source);
  }
}

void ChatReq::MergeFrom(const ChatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.ChatReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ChatReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.ChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatReq::CopyFrom(const ChatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.ChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ChatReq::Swap(ChatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatReq::InternalSwap(ChatReq* other) {
  msg_.Swap(&other->msg_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChatReq_descriptor_;
  metadata.reflection = ChatReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatReq

// required string msg = 1;
bool ChatReq::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ChatReq::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
void ChatReq::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
void ChatReq::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
 const ::std::string& ChatReq::msg() const {
  // @@protoc_insertion_point(field_get:MSG.ChatReq.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatReq::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.ChatReq.msg)
}
 void ChatReq::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.ChatReq.msg)
}
 void ChatReq::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.ChatReq.msg)
}
 ::std::string* ChatReq::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:MSG.ChatReq.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ChatReq::release_msg() {
  // @@protoc_insertion_point(field_release:MSG.ChatReq.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatReq::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:MSG.ChatReq.msg)
}

// required .MSG.ChatType type = 2;
bool ChatReq::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ChatReq::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void ChatReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void ChatReq::clear_type() {
  type_ = 1;
  clear_has_type();
}
 ::MSG::ChatType ChatReq::type() const {
  // @@protoc_insertion_point(field_get:MSG.ChatReq.type)
  return static_cast< ::MSG::ChatType >(type_);
}
 void ChatReq::set_type(::MSG::ChatType value) {
  assert(::MSG::ChatType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:MSG.ChatReq.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatAns::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatAns::ChatAns()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.ChatAns)
}

void ChatAns::InitAsDefaultInstance() {
}

ChatAns::ChatAns(const ChatAns& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.ChatAns)
}

void ChatAns::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChatAns::~ChatAns() {
  // @@protoc_insertion_point(destructor:MSG.ChatAns)
  SharedDtor();
}

void ChatAns::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ChatAns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatAns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatAns_descriptor_;
}

const ChatAns& ChatAns::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chat_2eproto();
  return *default_instance_;
}

ChatAns* ChatAns::default_instance_ = NULL;

ChatAns* ChatAns::New(::google::protobuf::Arena* arena) const {
  ChatAns* n = new ChatAns;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatAns::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.ChatAns)
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ChatAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.ChatAns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MSG.ErrorCode err = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MSG::ErrorCode_IsValid(value)) {
            set_err(static_cast< ::MSG::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.ChatAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.ChatAns)
  return false;
#undef DO_
}

void ChatAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.ChatAns)
  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.ChatAns)
}

::google::protobuf::uint8* ChatAns::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.ChatAns)
  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.ChatAns)
  return target;
}

int ChatAns::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.ChatAns)
  int total_size = 0;

  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->err());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatAns::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.ChatAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ChatAns* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatAns>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.ChatAns)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.ChatAns)
    MergeFrom(*source);
  }
}

void ChatAns::MergeFrom(const ChatAns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.ChatAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ChatAns::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.ChatAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatAns::CopyFrom(const ChatAns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.ChatAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatAns::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ChatAns::Swap(ChatAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatAns::InternalSwap(ChatAns* other) {
  std::swap(err_, other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatAns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChatAns_descriptor_;
  metadata.reflection = ChatAns_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatAns

// required .MSG.ErrorCode err = 1;
bool ChatAns::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ChatAns::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
void ChatAns::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
void ChatAns::clear_err() {
  err_ = 0;
  clear_has_err();
}
 ::MSG::ErrorCode ChatAns::err() const {
  // @@protoc_insertion_point(field_get:MSG.ChatAns.err)
  return static_cast< ::MSG::ErrorCode >(err_);
}
 void ChatAns::set_err(::MSG::ErrorCode value) {
  assert(::MSG::ErrorCode_IsValid(value));
  set_has_err();
  err_ = value;
  // @@protoc_insertion_point(field_set:MSG.ChatAns.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatNot::kChatsFieldNumber;
const int ChatNot::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatNot::ChatNot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.ChatNot)
}

void ChatNot::InitAsDefaultInstance() {
  chats_ = const_cast< ::MSG::ChatData_*>(&::MSG::ChatData_::default_instance());
}

ChatNot::ChatNot(const ChatNot& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.ChatNot)
}

void ChatNot::SharedCtor() {
  _cached_size_ = 0;
  chats_ = NULL;
  type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChatNot::~ChatNot() {
  // @@protoc_insertion_point(destructor:MSG.ChatNot)
  SharedDtor();
}

void ChatNot::SharedDtor() {
  if (this != default_instance_) {
    delete chats_;
  }
}

void ChatNot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatNot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatNot_descriptor_;
}

const ChatNot& ChatNot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chat_2eproto();
  return *default_instance_;
}

ChatNot* ChatNot::default_instance_ = NULL;

ChatNot* ChatNot::New(::google::protobuf::Arena* arena) const {
  ChatNot* n = new ChatNot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatNot::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.ChatNot)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_chats()) {
      if (chats_ != NULL) chats_->::MSG::ChatData_::Clear();
    }
    type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ChatNot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.ChatNot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MSG.ChatData_ chats = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required .MSG.ChatType type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MSG::ChatType_IsValid(value)) {
            set_type(static_cast< ::MSG::ChatType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.ChatNot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.ChatNot)
  return false;
#undef DO_
}

void ChatNot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.ChatNot)
  // required .MSG.ChatData_ chats = 1;
  if (has_chats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->chats_, output);
  }

  // required .MSG.ChatType type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.ChatNot)
}

::google::protobuf::uint8* ChatNot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.ChatNot)
  // required .MSG.ChatData_ chats = 1;
  if (has_chats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->chats_, false, target);
  }

  // required .MSG.ChatType type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.ChatNot)
  return target;
}

int ChatNot::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.ChatNot)
  int total_size = 0;

  if (has_chats()) {
    // required .MSG.ChatData_ chats = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->chats_);
  }

  if (has_type()) {
    // required .MSG.ChatType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
int ChatNot::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.ChatNot)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .MSG.ChatData_ chats = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->chats_);

    // required .MSG.ChatType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatNot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.ChatNot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ChatNot* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatNot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.ChatNot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.ChatNot)
    MergeFrom(*source);
  }
}

void ChatNot::MergeFrom(const ChatNot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.ChatNot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chats()) {
      mutable_chats()->::MSG::ChatData_::MergeFrom(from.chats());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ChatNot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.ChatNot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatNot::CopyFrom(const ChatNot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.ChatNot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatNot::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_chats()) {
    if (!this->chats_->IsInitialized()) return false;
  }
  return true;
}

void ChatNot::Swap(ChatNot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatNot::InternalSwap(ChatNot* other) {
  std::swap(chats_, other->chats_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatNot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChatNot_descriptor_;
  metadata.reflection = ChatNot_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatNot

// required .MSG.ChatData_ chats = 1;
bool ChatNot::has_chats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ChatNot::set_has_chats() {
  _has_bits_[0] |= 0x00000001u;
}
void ChatNot::clear_has_chats() {
  _has_bits_[0] &= ~0x00000001u;
}
void ChatNot::clear_chats() {
  if (chats_ != NULL) chats_->::MSG::ChatData_::Clear();
  clear_has_chats();
}
const ::MSG::ChatData_& ChatNot::chats() const {
  // @@protoc_insertion_point(field_get:MSG.ChatNot.chats)
  return chats_ != NULL ? *chats_ : *default_instance_->chats_;
}
::MSG::ChatData_* ChatNot::mutable_chats() {
  set_has_chats();
  if (chats_ == NULL) {
    chats_ = new ::MSG::ChatData_;
  }
  // @@protoc_insertion_point(field_mutable:MSG.ChatNot.chats)
  return chats_;
}
::MSG::ChatData_* ChatNot::release_chats() {
  // @@protoc_insertion_point(field_release:MSG.ChatNot.chats)
  clear_has_chats();
  ::MSG::ChatData_* temp = chats_;
  chats_ = NULL;
  return temp;
}
void ChatNot::set_allocated_chats(::MSG::ChatData_* chats) {
  delete chats_;
  chats_ = chats;
  if (chats) {
    set_has_chats();
  } else {
    clear_has_chats();
  }
  // @@protoc_insertion_point(field_set_allocated:MSG.ChatNot.chats)
}

// required .MSG.ChatType type = 2;
bool ChatNot::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ChatNot::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void ChatNot::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void ChatNot::clear_type() {
  type_ = 1;
  clear_has_type();
}
 ::MSG::ChatType ChatNot::type() const {
  // @@protoc_insertion_point(field_get:MSG.ChatNot.type)
  return static_cast< ::MSG::ChatType >(type_);
}
 void ChatNot::set_type(::MSG::ChatType value) {
  assert(::MSG::ChatType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:MSG.ChatNot.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateChatRoomReq::kNameFieldNumber;
const int CreateChatRoomReq::kGreetingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateChatRoomReq::CreateChatRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.CreateChatRoomReq)
}

void CreateChatRoomReq::InitAsDefaultInstance() {
}

CreateChatRoomReq::CreateChatRoomReq(const CreateChatRoomReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.CreateChatRoomReq)
}

void CreateChatRoomReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  greeting_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateChatRoomReq::~CreateChatRoomReq() {
  // @@protoc_insertion_point(destructor:MSG.CreateChatRoomReq)
  SharedDtor();
}

void CreateChatRoomReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  greeting_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CreateChatRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateChatRoomReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateChatRoomReq_descriptor_;
}

const CreateChatRoomReq& CreateChatRoomReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chat_2eproto();
  return *default_instance_;
}

CreateChatRoomReq* CreateChatRoomReq::default_instance_ = NULL;

CreateChatRoomReq* CreateChatRoomReq::New(::google::protobuf::Arena* arena) const {
  CreateChatRoomReq* n = new CreateChatRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateChatRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.CreateChatRoomReq)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_greeting()) {
      greeting_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CreateChatRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.CreateChatRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.CreateChatRoomReq.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_greeting;
        break;
      }

      // required string greeting = 2;
      case 2: {
        if (tag == 18) {
         parse_greeting:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_greeting()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->greeting().data(), this->greeting().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.CreateChatRoomReq.greeting");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.CreateChatRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.CreateChatRoomReq)
  return false;
#undef DO_
}

void CreateChatRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.CreateChatRoomReq)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.CreateChatRoomReq.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string greeting = 2;
  if (has_greeting()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->greeting().data(), this->greeting().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.CreateChatRoomReq.greeting");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->greeting(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.CreateChatRoomReq)
}

::google::protobuf::uint8* CreateChatRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.CreateChatRoomReq)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.CreateChatRoomReq.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string greeting = 2;
  if (has_greeting()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->greeting().data(), this->greeting().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.CreateChatRoomReq.greeting");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->greeting(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.CreateChatRoomReq)
  return target;
}

int CreateChatRoomReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.CreateChatRoomReq)
  int total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_greeting()) {
    // required string greeting = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->greeting());
  }

  return total_size;
}
int CreateChatRoomReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.CreateChatRoomReq)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string greeting = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->greeting());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateChatRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.CreateChatRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CreateChatRoomReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateChatRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.CreateChatRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.CreateChatRoomReq)
    MergeFrom(*source);
  }
}

void CreateChatRoomReq::MergeFrom(const CreateChatRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.CreateChatRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_greeting()) {
      set_has_greeting();
      greeting_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.greeting_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CreateChatRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.CreateChatRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateChatRoomReq::CopyFrom(const CreateChatRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.CreateChatRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateChatRoomReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CreateChatRoomReq::Swap(CreateChatRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateChatRoomReq::InternalSwap(CreateChatRoomReq* other) {
  name_.Swap(&other->name_);
  greeting_.Swap(&other->greeting_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateChatRoomReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateChatRoomReq_descriptor_;
  metadata.reflection = CreateChatRoomReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateChatRoomReq

// required string name = 1;
bool CreateChatRoomReq::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateChatRoomReq::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateChatRoomReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateChatRoomReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& CreateChatRoomReq::name() const {
  // @@protoc_insertion_point(field_get:MSG.CreateChatRoomReq.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateChatRoomReq::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.CreateChatRoomReq.name)
}
 void CreateChatRoomReq::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.CreateChatRoomReq.name)
}
 void CreateChatRoomReq::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.CreateChatRoomReq.name)
}
 ::std::string* CreateChatRoomReq::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MSG.CreateChatRoomReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CreateChatRoomReq::release_name() {
  // @@protoc_insertion_point(field_release:MSG.CreateChatRoomReq.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateChatRoomReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.CreateChatRoomReq.name)
}

// required string greeting = 2;
bool CreateChatRoomReq::has_greeting() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CreateChatRoomReq::set_has_greeting() {
  _has_bits_[0] |= 0x00000002u;
}
void CreateChatRoomReq::clear_has_greeting() {
  _has_bits_[0] &= ~0x00000002u;
}
void CreateChatRoomReq::clear_greeting() {
  greeting_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_greeting();
}
 const ::std::string& CreateChatRoomReq::greeting() const {
  // @@protoc_insertion_point(field_get:MSG.CreateChatRoomReq.greeting)
  return greeting_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateChatRoomReq::set_greeting(const ::std::string& value) {
  set_has_greeting();
  greeting_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.CreateChatRoomReq.greeting)
}
 void CreateChatRoomReq::set_greeting(const char* value) {
  set_has_greeting();
  greeting_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.CreateChatRoomReq.greeting)
}
 void CreateChatRoomReq::set_greeting(const char* value, size_t size) {
  set_has_greeting();
  greeting_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.CreateChatRoomReq.greeting)
}
 ::std::string* CreateChatRoomReq::mutable_greeting() {
  set_has_greeting();
  // @@protoc_insertion_point(field_mutable:MSG.CreateChatRoomReq.greeting)
  return greeting_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CreateChatRoomReq::release_greeting() {
  // @@protoc_insertion_point(field_release:MSG.CreateChatRoomReq.greeting)
  clear_has_greeting();
  return greeting_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateChatRoomReq::set_allocated_greeting(::std::string* greeting) {
  if (greeting != NULL) {
    set_has_greeting();
  } else {
    clear_has_greeting();
  }
  greeting_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), greeting);
  // @@protoc_insertion_point(field_set_allocated:MSG.CreateChatRoomReq.greeting)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateChatRoomAns::kErrFieldNumber;
const int CreateChatRoomAns::kRidFieldNumber;
const int CreateChatRoomAns::kRkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateChatRoomAns::CreateChatRoomAns()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.CreateChatRoomAns)
}

void CreateChatRoomAns::InitAsDefaultInstance() {
}

CreateChatRoomAns::CreateChatRoomAns(const CreateChatRoomAns& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.CreateChatRoomAns)
}

void CreateChatRoomAns::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  err_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
  rkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateChatRoomAns::~CreateChatRoomAns() {
  // @@protoc_insertion_point(destructor:MSG.CreateChatRoomAns)
  SharedDtor();
}

void CreateChatRoomAns::SharedDtor() {
  rkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CreateChatRoomAns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateChatRoomAns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateChatRoomAns_descriptor_;
}

const CreateChatRoomAns& CreateChatRoomAns::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chat_2eproto();
  return *default_instance_;
}

CreateChatRoomAns* CreateChatRoomAns::default_instance_ = NULL;

CreateChatRoomAns* CreateChatRoomAns::New(::google::protobuf::Arena* arena) const {
  CreateChatRoomAns* n = new CreateChatRoomAns;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateChatRoomAns::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.CreateChatRoomAns)
  if (_has_bits_[0 / 32] & 7u) {
    err_ = 0;
    rid_ = GOOGLE_ULONGLONG(0);
    if (has_rkey()) {
      rkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CreateChatRoomAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.CreateChatRoomAns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MSG.ErrorCode err = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MSG::ErrorCode_IsValid(value)) {
            set_err(static_cast< ::MSG::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rid;
        break;
      }

      // optional uint64 rid = 2;
      case 2: {
        if (tag == 16) {
         parse_rid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));
          set_has_rid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_rkey;
        break;
      }

      // optional string rkey = 3;
      case 3: {
        if (tag == 26) {
         parse_rkey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rkey().data(), this->rkey().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.CreateChatRoomAns.rkey");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.CreateChatRoomAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.CreateChatRoomAns)
  return false;
#undef DO_
}

void CreateChatRoomAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.CreateChatRoomAns)
  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->err(), output);
  }

  // optional uint64 rid = 2;
  if (has_rid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->rid(), output);
  }

  // optional string rkey = 3;
  if (has_rkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rkey().data(), this->rkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.CreateChatRoomAns.rkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->rkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.CreateChatRoomAns)
}

::google::protobuf::uint8* CreateChatRoomAns::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.CreateChatRoomAns)
  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->err(), target);
  }

  // optional uint64 rid = 2;
  if (has_rid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->rid(), target);
  }

  // optional string rkey = 3;
  if (has_rkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rkey().data(), this->rkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.CreateChatRoomAns.rkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->rkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.CreateChatRoomAns)
  return target;
}

int CreateChatRoomAns::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.CreateChatRoomAns)
  int total_size = 0;

  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->err());
  }
  if (_has_bits_[1 / 32] & 6u) {
    // optional uint64 rid = 2;
    if (has_rid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->rid());
    }

    // optional string rkey = 3;
    if (has_rkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rkey());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateChatRoomAns::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.CreateChatRoomAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CreateChatRoomAns* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateChatRoomAns>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.CreateChatRoomAns)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.CreateChatRoomAns)
    MergeFrom(*source);
  }
}

void CreateChatRoomAns::MergeFrom(const CreateChatRoomAns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.CreateChatRoomAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
    if (from.has_rid()) {
      set_rid(from.rid());
    }
    if (from.has_rkey()) {
      set_has_rkey();
      rkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rkey_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CreateChatRoomAns::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.CreateChatRoomAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateChatRoomAns::CopyFrom(const CreateChatRoomAns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.CreateChatRoomAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateChatRoomAns::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CreateChatRoomAns::Swap(CreateChatRoomAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateChatRoomAns::InternalSwap(CreateChatRoomAns* other) {
  std::swap(err_, other->err_);
  std::swap(rid_, other->rid_);
  rkey_.Swap(&other->rkey_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateChatRoomAns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateChatRoomAns_descriptor_;
  metadata.reflection = CreateChatRoomAns_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateChatRoomAns

// required .MSG.ErrorCode err = 1;
bool CreateChatRoomAns::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateChatRoomAns::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateChatRoomAns::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateChatRoomAns::clear_err() {
  err_ = 0;
  clear_has_err();
}
 ::MSG::ErrorCode CreateChatRoomAns::err() const {
  // @@protoc_insertion_point(field_get:MSG.CreateChatRoomAns.err)
  return static_cast< ::MSG::ErrorCode >(err_);
}
 void CreateChatRoomAns::set_err(::MSG::ErrorCode value) {
  assert(::MSG::ErrorCode_IsValid(value));
  set_has_err();
  err_ = value;
  // @@protoc_insertion_point(field_set:MSG.CreateChatRoomAns.err)
}

// optional uint64 rid = 2;
bool CreateChatRoomAns::has_rid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CreateChatRoomAns::set_has_rid() {
  _has_bits_[0] |= 0x00000002u;
}
void CreateChatRoomAns::clear_has_rid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CreateChatRoomAns::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
  clear_has_rid();
}
 ::google::protobuf::uint64 CreateChatRoomAns::rid() const {
  // @@protoc_insertion_point(field_get:MSG.CreateChatRoomAns.rid)
  return rid_;
}
 void CreateChatRoomAns::set_rid(::google::protobuf::uint64 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:MSG.CreateChatRoomAns.rid)
}

// optional string rkey = 3;
bool CreateChatRoomAns::has_rkey() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CreateChatRoomAns::set_has_rkey() {
  _has_bits_[0] |= 0x00000004u;
}
void CreateChatRoomAns::clear_has_rkey() {
  _has_bits_[0] &= ~0x00000004u;
}
void CreateChatRoomAns::clear_rkey() {
  rkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rkey();
}
 const ::std::string& CreateChatRoomAns::rkey() const {
  // @@protoc_insertion_point(field_get:MSG.CreateChatRoomAns.rkey)
  return rkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateChatRoomAns::set_rkey(const ::std::string& value) {
  set_has_rkey();
  rkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.CreateChatRoomAns.rkey)
}
 void CreateChatRoomAns::set_rkey(const char* value) {
  set_has_rkey();
  rkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.CreateChatRoomAns.rkey)
}
 void CreateChatRoomAns::set_rkey(const char* value, size_t size) {
  set_has_rkey();
  rkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.CreateChatRoomAns.rkey)
}
 ::std::string* CreateChatRoomAns::mutable_rkey() {
  set_has_rkey();
  // @@protoc_insertion_point(field_mutable:MSG.CreateChatRoomAns.rkey)
  return rkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CreateChatRoomAns::release_rkey() {
  // @@protoc_insertion_point(field_release:MSG.CreateChatRoomAns.rkey)
  clear_has_rkey();
  return rkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateChatRoomAns::set_allocated_rkey(::std::string* rkey) {
  if (rkey != NULL) {
    set_has_rkey();
  } else {
    clear_has_rkey();
  }
  rkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rkey);
  // @@protoc_insertion_point(field_set_allocated:MSG.CreateChatRoomAns.rkey)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InviteChatRoomReq::kRidFieldNumber;
const int InviteChatRoomReq::kRkeyFieldNumber;
const int InviteChatRoomReq::kTargetUidFieldNumber;
const int InviteChatRoomReq::kTargetNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InviteChatRoomReq::InviteChatRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.InviteChatRoomReq)
}

void InviteChatRoomReq::InitAsDefaultInstance() {
}

InviteChatRoomReq::InviteChatRoomReq(const InviteChatRoomReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.InviteChatRoomReq)
}

void InviteChatRoomReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
  rkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetuid_ = GOOGLE_ULONGLONG(0);
  targetname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InviteChatRoomReq::~InviteChatRoomReq() {
  // @@protoc_insertion_point(destructor:MSG.InviteChatRoomReq)
  SharedDtor();
}

void InviteChatRoomReq::SharedDtor() {
  rkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void InviteChatRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InviteChatRoomReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InviteChatRoomReq_descriptor_;
}

const InviteChatRoomReq& InviteChatRoomReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chat_2eproto();
  return *default_instance_;
}

InviteChatRoomReq* InviteChatRoomReq::default_instance_ = NULL;

InviteChatRoomReq* InviteChatRoomReq::New(::google::protobuf::Arena* arena) const {
  InviteChatRoomReq* n = new InviteChatRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InviteChatRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.InviteChatRoomReq)
  if (_has_bits_[0 / 32] & 15u) {
    rid_ = GOOGLE_ULONGLONG(0);
    if (has_rkey()) {
      rkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    targetuid_ = GOOGLE_ULONGLONG(0);
    if (has_targetname()) {
      targetname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool InviteChatRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.InviteChatRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));
          set_has_rid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_rkey;
        break;
      }

      // required string rkey = 2;
      case 2: {
        if (tag == 18) {
         parse_rkey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rkey().data(), this->rkey().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.InviteChatRoomReq.rkey");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_targetUid;
        break;
      }

      // required uint64 targetUid = 3;
      case 3: {
        if (tag == 24) {
         parse_targetUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetuid_)));
          set_has_targetuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_targetName;
        break;
      }

      // required string targetName = 4;
      case 4: {
        if (tag == 34) {
         parse_targetName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_targetname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->targetname().data(), this->targetname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.InviteChatRoomReq.targetName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.InviteChatRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.InviteChatRoomReq)
  return false;
#undef DO_
}

void InviteChatRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.InviteChatRoomReq)
  // required uint64 rid = 1;
  if (has_rid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // required string rkey = 2;
  if (has_rkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rkey().data(), this->rkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.InviteChatRoomReq.rkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rkey(), output);
  }

  // required uint64 targetUid = 3;
  if (has_targetuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->targetuid(), output);
  }

  // required string targetName = 4;
  if (has_targetname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->targetname().data(), this->targetname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.InviteChatRoomReq.targetName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->targetname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.InviteChatRoomReq)
}

::google::protobuf::uint8* InviteChatRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.InviteChatRoomReq)
  // required uint64 rid = 1;
  if (has_rid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // required string rkey = 2;
  if (has_rkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rkey().data(), this->rkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.InviteChatRoomReq.rkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rkey(), target);
  }

  // required uint64 targetUid = 3;
  if (has_targetuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->targetuid(), target);
  }

  // required string targetName = 4;
  if (has_targetname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->targetname().data(), this->targetname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.InviteChatRoomReq.targetName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->targetname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.InviteChatRoomReq)
  return target;
}

int InviteChatRoomReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.InviteChatRoomReq)
  int total_size = 0;

  if (has_rid()) {
    // required uint64 rid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  if (has_rkey()) {
    // required string rkey = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rkey());
  }

  if (has_targetuid()) {
    // required uint64 targetUid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetuid());
  }

  if (has_targetname()) {
    // required string targetName = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->targetname());
  }

  return total_size;
}
int InviteChatRoomReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.InviteChatRoomReq)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required uint64 rid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());

    // required string rkey = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rkey());

    // required uint64 targetUid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetuid());

    // required string targetName = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->targetname());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InviteChatRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.InviteChatRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InviteChatRoomReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InviteChatRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.InviteChatRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.InviteChatRoomReq)
    MergeFrom(*source);
  }
}

void InviteChatRoomReq::MergeFrom(const InviteChatRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.InviteChatRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rid()) {
      set_rid(from.rid());
    }
    if (from.has_rkey()) {
      set_has_rkey();
      rkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rkey_);
    }
    if (from.has_targetuid()) {
      set_targetuid(from.targetuid());
    }
    if (from.has_targetname()) {
      set_has_targetname();
      targetname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetname_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void InviteChatRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.InviteChatRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InviteChatRoomReq::CopyFrom(const InviteChatRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.InviteChatRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InviteChatRoomReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void InviteChatRoomReq::Swap(InviteChatRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InviteChatRoomReq::InternalSwap(InviteChatRoomReq* other) {
  std::swap(rid_, other->rid_);
  rkey_.Swap(&other->rkey_);
  std::swap(targetuid_, other->targetuid_);
  targetname_.Swap(&other->targetname_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InviteChatRoomReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InviteChatRoomReq_descriptor_;
  metadata.reflection = InviteChatRoomReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InviteChatRoomReq

// required uint64 rid = 1;
bool InviteChatRoomReq::has_rid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InviteChatRoomReq::set_has_rid() {
  _has_bits_[0] |= 0x00000001u;
}
void InviteChatRoomReq::clear_has_rid() {
  _has_bits_[0] &= ~0x00000001u;
}
void InviteChatRoomReq::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
  clear_has_rid();
}
 ::google::protobuf::uint64 InviteChatRoomReq::rid() const {
  // @@protoc_insertion_point(field_get:MSG.InviteChatRoomReq.rid)
  return rid_;
}
 void InviteChatRoomReq::set_rid(::google::protobuf::uint64 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:MSG.InviteChatRoomReq.rid)
}

// required string rkey = 2;
bool InviteChatRoomReq::has_rkey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InviteChatRoomReq::set_has_rkey() {
  _has_bits_[0] |= 0x00000002u;
}
void InviteChatRoomReq::clear_has_rkey() {
  _has_bits_[0] &= ~0x00000002u;
}
void InviteChatRoomReq::clear_rkey() {
  rkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rkey();
}
 const ::std::string& InviteChatRoomReq::rkey() const {
  // @@protoc_insertion_point(field_get:MSG.InviteChatRoomReq.rkey)
  return rkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InviteChatRoomReq::set_rkey(const ::std::string& value) {
  set_has_rkey();
  rkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.InviteChatRoomReq.rkey)
}
 void InviteChatRoomReq::set_rkey(const char* value) {
  set_has_rkey();
  rkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.InviteChatRoomReq.rkey)
}
 void InviteChatRoomReq::set_rkey(const char* value, size_t size) {
  set_has_rkey();
  rkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.InviteChatRoomReq.rkey)
}
 ::std::string* InviteChatRoomReq::mutable_rkey() {
  set_has_rkey();
  // @@protoc_insertion_point(field_mutable:MSG.InviteChatRoomReq.rkey)
  return rkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InviteChatRoomReq::release_rkey() {
  // @@protoc_insertion_point(field_release:MSG.InviteChatRoomReq.rkey)
  clear_has_rkey();
  return rkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InviteChatRoomReq::set_allocated_rkey(::std::string* rkey) {
  if (rkey != NULL) {
    set_has_rkey();
  } else {
    clear_has_rkey();
  }
  rkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rkey);
  // @@protoc_insertion_point(field_set_allocated:MSG.InviteChatRoomReq.rkey)
}

// required uint64 targetUid = 3;
bool InviteChatRoomReq::has_targetuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void InviteChatRoomReq::set_has_targetuid() {
  _has_bits_[0] |= 0x00000004u;
}
void InviteChatRoomReq::clear_has_targetuid() {
  _has_bits_[0] &= ~0x00000004u;
}
void InviteChatRoomReq::clear_targetuid() {
  targetuid_ = GOOGLE_ULONGLONG(0);
  clear_has_targetuid();
}
 ::google::protobuf::uint64 InviteChatRoomReq::targetuid() const {
  // @@protoc_insertion_point(field_get:MSG.InviteChatRoomReq.targetUid)
  return targetuid_;
}
 void InviteChatRoomReq::set_targetuid(::google::protobuf::uint64 value) {
  set_has_targetuid();
  targetuid_ = value;
  // @@protoc_insertion_point(field_set:MSG.InviteChatRoomReq.targetUid)
}

// required string targetName = 4;
bool InviteChatRoomReq::has_targetname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void InviteChatRoomReq::set_has_targetname() {
  _has_bits_[0] |= 0x00000008u;
}
void InviteChatRoomReq::clear_has_targetname() {
  _has_bits_[0] &= ~0x00000008u;
}
void InviteChatRoomReq::clear_targetname() {
  targetname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_targetname();
}
 const ::std::string& InviteChatRoomReq::targetname() const {
  // @@protoc_insertion_point(field_get:MSG.InviteChatRoomReq.targetName)
  return targetname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InviteChatRoomReq::set_targetname(const ::std::string& value) {
  set_has_targetname();
  targetname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.InviteChatRoomReq.targetName)
}
 void InviteChatRoomReq::set_targetname(const char* value) {
  set_has_targetname();
  targetname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.InviteChatRoomReq.targetName)
}
 void InviteChatRoomReq::set_targetname(const char* value, size_t size) {
  set_has_targetname();
  targetname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.InviteChatRoomReq.targetName)
}
 ::std::string* InviteChatRoomReq::mutable_targetname() {
  set_has_targetname();
  // @@protoc_insertion_point(field_mutable:MSG.InviteChatRoomReq.targetName)
  return targetname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InviteChatRoomReq::release_targetname() {
  // @@protoc_insertion_point(field_release:MSG.InviteChatRoomReq.targetName)
  clear_has_targetname();
  return targetname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InviteChatRoomReq::set_allocated_targetname(::std::string* targetname) {
  if (targetname != NULL) {
    set_has_targetname();
  } else {
    clear_has_targetname();
  }
  targetname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), targetname);
  // @@protoc_insertion_point(field_set_allocated:MSG.InviteChatRoomReq.targetName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InviteChatRoomAns::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InviteChatRoomAns::InviteChatRoomAns()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.InviteChatRoomAns)
}

void InviteChatRoomAns::InitAsDefaultInstance() {
}

InviteChatRoomAns::InviteChatRoomAns(const InviteChatRoomAns& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.InviteChatRoomAns)
}

void InviteChatRoomAns::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InviteChatRoomAns::~InviteChatRoomAns() {
  // @@protoc_insertion_point(destructor:MSG.InviteChatRoomAns)
  SharedDtor();
}

void InviteChatRoomAns::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InviteChatRoomAns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InviteChatRoomAns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InviteChatRoomAns_descriptor_;
}

const InviteChatRoomAns& InviteChatRoomAns::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chat_2eproto();
  return *default_instance_;
}

InviteChatRoomAns* InviteChatRoomAns::default_instance_ = NULL;

InviteChatRoomAns* InviteChatRoomAns::New(::google::protobuf::Arena* arena) const {
  InviteChatRoomAns* n = new InviteChatRoomAns;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InviteChatRoomAns::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.InviteChatRoomAns)
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool InviteChatRoomAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.InviteChatRoomAns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MSG.ErrorCode err = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MSG::ErrorCode_IsValid(value)) {
            set_err(static_cast< ::MSG::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.InviteChatRoomAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.InviteChatRoomAns)
  return false;
#undef DO_
}

void InviteChatRoomAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.InviteChatRoomAns)
  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.InviteChatRoomAns)
}

::google::protobuf::uint8* InviteChatRoomAns::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.InviteChatRoomAns)
  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.InviteChatRoomAns)
  return target;
}

int InviteChatRoomAns::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.InviteChatRoomAns)
  int total_size = 0;

  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->err());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InviteChatRoomAns::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.InviteChatRoomAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InviteChatRoomAns* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InviteChatRoomAns>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.InviteChatRoomAns)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.InviteChatRoomAns)
    MergeFrom(*source);
  }
}

void InviteChatRoomAns::MergeFrom(const InviteChatRoomAns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.InviteChatRoomAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void InviteChatRoomAns::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.InviteChatRoomAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InviteChatRoomAns::CopyFrom(const InviteChatRoomAns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.InviteChatRoomAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InviteChatRoomAns::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void InviteChatRoomAns::Swap(InviteChatRoomAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InviteChatRoomAns::InternalSwap(InviteChatRoomAns* other) {
  std::swap(err_, other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InviteChatRoomAns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InviteChatRoomAns_descriptor_;
  metadata.reflection = InviteChatRoomAns_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InviteChatRoomAns

// required .MSG.ErrorCode err = 1;
bool InviteChatRoomAns::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InviteChatRoomAns::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
void InviteChatRoomAns::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
void InviteChatRoomAns::clear_err() {
  err_ = 0;
  clear_has_err();
}
 ::MSG::ErrorCode InviteChatRoomAns::err() const {
  // @@protoc_insertion_point(field_get:MSG.InviteChatRoomAns.err)
  return static_cast< ::MSG::ErrorCode >(err_);
}
 void InviteChatRoomAns::set_err(::MSG::ErrorCode value) {
  assert(::MSG::ErrorCode_IsValid(value));
  set_has_err();
  err_ = value;
  // @@protoc_insertion_point(field_set:MSG.InviteChatRoomAns.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InviteChatRoomNot::kRidFieldNumber;
const int InviteChatRoomNot::kRkeyFieldNumber;
const int InviteChatRoomNot::kOwnerUidFieldNumber;
const int InviteChatRoomNot::kOwnerNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InviteChatRoomNot::InviteChatRoomNot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.InviteChatRoomNot)
}

void InviteChatRoomNot::InitAsDefaultInstance() {
}

InviteChatRoomNot::InviteChatRoomNot(const InviteChatRoomNot& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.InviteChatRoomNot)
}

void InviteChatRoomNot::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
  rkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owneruid_ = GOOGLE_ULONGLONG(0);
  ownername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InviteChatRoomNot::~InviteChatRoomNot() {
  // @@protoc_insertion_point(destructor:MSG.InviteChatRoomNot)
  SharedDtor();
}

void InviteChatRoomNot::SharedDtor() {
  rkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ownername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void InviteChatRoomNot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InviteChatRoomNot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InviteChatRoomNot_descriptor_;
}

const InviteChatRoomNot& InviteChatRoomNot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chat_2eproto();
  return *default_instance_;
}

InviteChatRoomNot* InviteChatRoomNot::default_instance_ = NULL;

InviteChatRoomNot* InviteChatRoomNot::New(::google::protobuf::Arena* arena) const {
  InviteChatRoomNot* n = new InviteChatRoomNot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InviteChatRoomNot::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.InviteChatRoomNot)
  if (_has_bits_[0 / 32] & 15u) {
    rid_ = GOOGLE_ULONGLONG(0);
    if (has_rkey()) {
      rkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    owneruid_ = GOOGLE_ULONGLONG(0);
    if (has_ownername()) {
      ownername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool InviteChatRoomNot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.InviteChatRoomNot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));
          set_has_rid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_rkey;
        break;
      }

      // required string rkey = 2;
      case 2: {
        if (tag == 18) {
         parse_rkey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rkey().data(), this->rkey().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.InviteChatRoomNot.rkey");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ownerUid;
        break;
      }

      // required uint64 ownerUid = 3;
      case 3: {
        if (tag == 24) {
         parse_ownerUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &owneruid_)));
          set_has_owneruid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ownerName;
        break;
      }

      // required string ownerName = 4;
      case 4: {
        if (tag == 34) {
         parse_ownerName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ownername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ownername().data(), this->ownername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.InviteChatRoomNot.ownerName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.InviteChatRoomNot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.InviteChatRoomNot)
  return false;
#undef DO_
}

void InviteChatRoomNot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.InviteChatRoomNot)
  // required uint64 rid = 1;
  if (has_rid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // required string rkey = 2;
  if (has_rkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rkey().data(), this->rkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.InviteChatRoomNot.rkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rkey(), output);
  }

  // required uint64 ownerUid = 3;
  if (has_owneruid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->owneruid(), output);
  }

  // required string ownerName = 4;
  if (has_ownername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ownername().data(), this->ownername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.InviteChatRoomNot.ownerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ownername(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.InviteChatRoomNot)
}

::google::protobuf::uint8* InviteChatRoomNot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.InviteChatRoomNot)
  // required uint64 rid = 1;
  if (has_rid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // required string rkey = 2;
  if (has_rkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rkey().data(), this->rkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.InviteChatRoomNot.rkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rkey(), target);
  }

  // required uint64 ownerUid = 3;
  if (has_owneruid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->owneruid(), target);
  }

  // required string ownerName = 4;
  if (has_ownername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ownername().data(), this->ownername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.InviteChatRoomNot.ownerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ownername(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.InviteChatRoomNot)
  return target;
}

int InviteChatRoomNot::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.InviteChatRoomNot)
  int total_size = 0;

  if (has_rid()) {
    // required uint64 rid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  if (has_rkey()) {
    // required string rkey = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rkey());
  }

  if (has_owneruid()) {
    // required uint64 ownerUid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->owneruid());
  }

  if (has_ownername()) {
    // required string ownerName = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ownername());
  }

  return total_size;
}
int InviteChatRoomNot::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.InviteChatRoomNot)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required uint64 rid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());

    // required string rkey = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rkey());

    // required uint64 ownerUid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->owneruid());

    // required string ownerName = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ownername());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InviteChatRoomNot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.InviteChatRoomNot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InviteChatRoomNot* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InviteChatRoomNot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.InviteChatRoomNot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.InviteChatRoomNot)
    MergeFrom(*source);
  }
}

void InviteChatRoomNot::MergeFrom(const InviteChatRoomNot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.InviteChatRoomNot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rid()) {
      set_rid(from.rid());
    }
    if (from.has_rkey()) {
      set_has_rkey();
      rkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rkey_);
    }
    if (from.has_owneruid()) {
      set_owneruid(from.owneruid());
    }
    if (from.has_ownername()) {
      set_has_ownername();
      ownername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ownername_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void InviteChatRoomNot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.InviteChatRoomNot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InviteChatRoomNot::CopyFrom(const InviteChatRoomNot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.InviteChatRoomNot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InviteChatRoomNot::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void InviteChatRoomNot::Swap(InviteChatRoomNot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InviteChatRoomNot::InternalSwap(InviteChatRoomNot* other) {
  std::swap(rid_, other->rid_);
  rkey_.Swap(&other->rkey_);
  std::swap(owneruid_, other->owneruid_);
  ownername_.Swap(&other->ownername_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InviteChatRoomNot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InviteChatRoomNot_descriptor_;
  metadata.reflection = InviteChatRoomNot_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InviteChatRoomNot

// required uint64 rid = 1;
bool InviteChatRoomNot::has_rid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InviteChatRoomNot::set_has_rid() {
  _has_bits_[0] |= 0x00000001u;
}
void InviteChatRoomNot::clear_has_rid() {
  _has_bits_[0] &= ~0x00000001u;
}
void InviteChatRoomNot::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
  clear_has_rid();
}
 ::google::protobuf::uint64 InviteChatRoomNot::rid() const {
  // @@protoc_insertion_point(field_get:MSG.InviteChatRoomNot.rid)
  return rid_;
}
 void InviteChatRoomNot::set_rid(::google::protobuf::uint64 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:MSG.InviteChatRoomNot.rid)
}

// required string rkey = 2;
bool InviteChatRoomNot::has_rkey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InviteChatRoomNot::set_has_rkey() {
  _has_bits_[0] |= 0x00000002u;
}
void InviteChatRoomNot::clear_has_rkey() {
  _has_bits_[0] &= ~0x00000002u;
}
void InviteChatRoomNot::clear_rkey() {
  rkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rkey();
}
 const ::std::string& InviteChatRoomNot::rkey() const {
  // @@protoc_insertion_point(field_get:MSG.InviteChatRoomNot.rkey)
  return rkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InviteChatRoomNot::set_rkey(const ::std::string& value) {
  set_has_rkey();
  rkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.InviteChatRoomNot.rkey)
}
 void InviteChatRoomNot::set_rkey(const char* value) {
  set_has_rkey();
  rkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.InviteChatRoomNot.rkey)
}
 void InviteChatRoomNot::set_rkey(const char* value, size_t size) {
  set_has_rkey();
  rkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.InviteChatRoomNot.rkey)
}
 ::std::string* InviteChatRoomNot::mutable_rkey() {
  set_has_rkey();
  // @@protoc_insertion_point(field_mutable:MSG.InviteChatRoomNot.rkey)
  return rkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InviteChatRoomNot::release_rkey() {
  // @@protoc_insertion_point(field_release:MSG.InviteChatRoomNot.rkey)
  clear_has_rkey();
  return rkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InviteChatRoomNot::set_allocated_rkey(::std::string* rkey) {
  if (rkey != NULL) {
    set_has_rkey();
  } else {
    clear_has_rkey();
  }
  rkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rkey);
  // @@protoc_insertion_point(field_set_allocated:MSG.InviteChatRoomNot.rkey)
}

// required uint64 ownerUid = 3;
bool InviteChatRoomNot::has_owneruid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void InviteChatRoomNot::set_has_owneruid() {
  _has_bits_[0] |= 0x00000004u;
}
void InviteChatRoomNot::clear_has_owneruid() {
  _has_bits_[0] &= ~0x00000004u;
}
void InviteChatRoomNot::clear_owneruid() {
  owneruid_ = GOOGLE_ULONGLONG(0);
  clear_has_owneruid();
}
 ::google::protobuf::uint64 InviteChatRoomNot::owneruid() const {
  // @@protoc_insertion_point(field_get:MSG.InviteChatRoomNot.ownerUid)
  return owneruid_;
}
 void InviteChatRoomNot::set_owneruid(::google::protobuf::uint64 value) {
  set_has_owneruid();
  owneruid_ = value;
  // @@protoc_insertion_point(field_set:MSG.InviteChatRoomNot.ownerUid)
}

// required string ownerName = 4;
bool InviteChatRoomNot::has_ownername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void InviteChatRoomNot::set_has_ownername() {
  _has_bits_[0] |= 0x00000008u;
}
void InviteChatRoomNot::clear_has_ownername() {
  _has_bits_[0] &= ~0x00000008u;
}
void InviteChatRoomNot::clear_ownername() {
  ownername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ownername();
}
 const ::std::string& InviteChatRoomNot::ownername() const {
  // @@protoc_insertion_point(field_get:MSG.InviteChatRoomNot.ownerName)
  return ownername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InviteChatRoomNot::set_ownername(const ::std::string& value) {
  set_has_ownername();
  ownername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.InviteChatRoomNot.ownerName)
}
 void InviteChatRoomNot::set_ownername(const char* value) {
  set_has_ownername();
  ownername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.InviteChatRoomNot.ownerName)
}
 void InviteChatRoomNot::set_ownername(const char* value, size_t size) {
  set_has_ownername();
  ownername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.InviteChatRoomNot.ownerName)
}
 ::std::string* InviteChatRoomNot::mutable_ownername() {
  set_has_ownername();
  // @@protoc_insertion_point(field_mutable:MSG.InviteChatRoomNot.ownerName)
  return ownername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InviteChatRoomNot::release_ownername() {
  // @@protoc_insertion_point(field_release:MSG.InviteChatRoomNot.ownerName)
  clear_has_ownername();
  return ownername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InviteChatRoomNot::set_allocated_ownername(::std::string* ownername) {
  if (ownername != NULL) {
    set_has_ownername();
  } else {
    clear_has_ownername();
  }
  ownername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ownername);
  // @@protoc_insertion_point(field_set_allocated:MSG.InviteChatRoomNot.ownerName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterChatRoomReq::kRidFieldNumber;
const int EnterChatRoomReq::kRkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterChatRoomReq::EnterChatRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.EnterChatRoomReq)
}

void EnterChatRoomReq::InitAsDefaultInstance() {
}

EnterChatRoomReq::EnterChatRoomReq(const EnterChatRoomReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.EnterChatRoomReq)
}

void EnterChatRoomReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
  rkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EnterChatRoomReq::~EnterChatRoomReq() {
  // @@protoc_insertion_point(destructor:MSG.EnterChatRoomReq)
  SharedDtor();
}

void EnterChatRoomReq::SharedDtor() {
  rkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void EnterChatRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterChatRoomReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnterChatRoomReq_descriptor_;
}

const EnterChatRoomReq& EnterChatRoomReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chat_2eproto();
  return *default_instance_;
}

EnterChatRoomReq* EnterChatRoomReq::default_instance_ = NULL;

EnterChatRoomReq* EnterChatRoomReq::New(::google::protobuf::Arena* arena) const {
  EnterChatRoomReq* n = new EnterChatRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterChatRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.EnterChatRoomReq)
  if (_has_bits_[0 / 32] & 3u) {
    rid_ = GOOGLE_ULONGLONG(0);
    if (has_rkey()) {
      rkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EnterChatRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.EnterChatRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));
          set_has_rid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_rkey;
        break;
      }

      // required string rkey = 2;
      case 2: {
        if (tag == 18) {
         parse_rkey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rkey().data(), this->rkey().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.EnterChatRoomReq.rkey");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.EnterChatRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.EnterChatRoomReq)
  return false;
#undef DO_
}

void EnterChatRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.EnterChatRoomReq)
  // required uint64 rid = 1;
  if (has_rid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // required string rkey = 2;
  if (has_rkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rkey().data(), this->rkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.EnterChatRoomReq.rkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.EnterChatRoomReq)
}

::google::protobuf::uint8* EnterChatRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.EnterChatRoomReq)
  // required uint64 rid = 1;
  if (has_rid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // required string rkey = 2;
  if (has_rkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rkey().data(), this->rkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.EnterChatRoomReq.rkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.EnterChatRoomReq)
  return target;
}

int EnterChatRoomReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.EnterChatRoomReq)
  int total_size = 0;

  if (has_rid()) {
    // required uint64 rid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  if (has_rkey()) {
    // required string rkey = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rkey());
  }

  return total_size;
}
int EnterChatRoomReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.EnterChatRoomReq)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 rid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());

    // required string rkey = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rkey());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterChatRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.EnterChatRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EnterChatRoomReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterChatRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.EnterChatRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.EnterChatRoomReq)
    MergeFrom(*source);
  }
}

void EnterChatRoomReq::MergeFrom(const EnterChatRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.EnterChatRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rid()) {
      set_rid(from.rid());
    }
    if (from.has_rkey()) {
      set_has_rkey();
      rkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rkey_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EnterChatRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.EnterChatRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterChatRoomReq::CopyFrom(const EnterChatRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.EnterChatRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterChatRoomReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void EnterChatRoomReq::Swap(EnterChatRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterChatRoomReq::InternalSwap(EnterChatRoomReq* other) {
  std::swap(rid_, other->rid_);
  rkey_.Swap(&other->rkey_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterChatRoomReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnterChatRoomReq_descriptor_;
  metadata.reflection = EnterChatRoomReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterChatRoomReq

// required uint64 rid = 1;
bool EnterChatRoomReq::has_rid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnterChatRoomReq::set_has_rid() {
  _has_bits_[0] |= 0x00000001u;
}
void EnterChatRoomReq::clear_has_rid() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnterChatRoomReq::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
  clear_has_rid();
}
 ::google::protobuf::uint64 EnterChatRoomReq::rid() const {
  // @@protoc_insertion_point(field_get:MSG.EnterChatRoomReq.rid)
  return rid_;
}
 void EnterChatRoomReq::set_rid(::google::protobuf::uint64 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:MSG.EnterChatRoomReq.rid)
}

// required string rkey = 2;
bool EnterChatRoomReq::has_rkey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EnterChatRoomReq::set_has_rkey() {
  _has_bits_[0] |= 0x00000002u;
}
void EnterChatRoomReq::clear_has_rkey() {
  _has_bits_[0] &= ~0x00000002u;
}
void EnterChatRoomReq::clear_rkey() {
  rkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rkey();
}
 const ::std::string& EnterChatRoomReq::rkey() const {
  // @@protoc_insertion_point(field_get:MSG.EnterChatRoomReq.rkey)
  return rkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EnterChatRoomReq::set_rkey(const ::std::string& value) {
  set_has_rkey();
  rkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.EnterChatRoomReq.rkey)
}
 void EnterChatRoomReq::set_rkey(const char* value) {
  set_has_rkey();
  rkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.EnterChatRoomReq.rkey)
}
 void EnterChatRoomReq::set_rkey(const char* value, size_t size) {
  set_has_rkey();
  rkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.EnterChatRoomReq.rkey)
}
 ::std::string* EnterChatRoomReq::mutable_rkey() {
  set_has_rkey();
  // @@protoc_insertion_point(field_mutable:MSG.EnterChatRoomReq.rkey)
  return rkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EnterChatRoomReq::release_rkey() {
  // @@protoc_insertion_point(field_release:MSG.EnterChatRoomReq.rkey)
  clear_has_rkey();
  return rkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EnterChatRoomReq::set_allocated_rkey(::std::string* rkey) {
  if (rkey != NULL) {
    set_has_rkey();
  } else {
    clear_has_rkey();
  }
  rkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rkey);
  // @@protoc_insertion_point(field_set_allocated:MSG.EnterChatRoomReq.rkey)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterChatRoomAns::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterChatRoomAns::EnterChatRoomAns()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.EnterChatRoomAns)
}

void EnterChatRoomAns::InitAsDefaultInstance() {
}

EnterChatRoomAns::EnterChatRoomAns(const EnterChatRoomAns& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.EnterChatRoomAns)
}

void EnterChatRoomAns::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EnterChatRoomAns::~EnterChatRoomAns() {
  // @@protoc_insertion_point(destructor:MSG.EnterChatRoomAns)
  SharedDtor();
}

void EnterChatRoomAns::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EnterChatRoomAns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterChatRoomAns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnterChatRoomAns_descriptor_;
}

const EnterChatRoomAns& EnterChatRoomAns::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chat_2eproto();
  return *default_instance_;
}

EnterChatRoomAns* EnterChatRoomAns::default_instance_ = NULL;

EnterChatRoomAns* EnterChatRoomAns::New(::google::protobuf::Arena* arena) const {
  EnterChatRoomAns* n = new EnterChatRoomAns;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterChatRoomAns::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.EnterChatRoomAns)
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EnterChatRoomAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.EnterChatRoomAns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MSG.ErrorCode err = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MSG::ErrorCode_IsValid(value)) {
            set_err(static_cast< ::MSG::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.EnterChatRoomAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.EnterChatRoomAns)
  return false;
#undef DO_
}

void EnterChatRoomAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.EnterChatRoomAns)
  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.EnterChatRoomAns)
}

::google::protobuf::uint8* EnterChatRoomAns::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.EnterChatRoomAns)
  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.EnterChatRoomAns)
  return target;
}

int EnterChatRoomAns::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.EnterChatRoomAns)
  int total_size = 0;

  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->err());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterChatRoomAns::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.EnterChatRoomAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EnterChatRoomAns* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterChatRoomAns>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.EnterChatRoomAns)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.EnterChatRoomAns)
    MergeFrom(*source);
  }
}

void EnterChatRoomAns::MergeFrom(const EnterChatRoomAns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.EnterChatRoomAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EnterChatRoomAns::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.EnterChatRoomAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterChatRoomAns::CopyFrom(const EnterChatRoomAns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.EnterChatRoomAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterChatRoomAns::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void EnterChatRoomAns::Swap(EnterChatRoomAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterChatRoomAns::InternalSwap(EnterChatRoomAns* other) {
  std::swap(err_, other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterChatRoomAns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnterChatRoomAns_descriptor_;
  metadata.reflection = EnterChatRoomAns_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterChatRoomAns

// required .MSG.ErrorCode err = 1;
bool EnterChatRoomAns::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnterChatRoomAns::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
void EnterChatRoomAns::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnterChatRoomAns::clear_err() {
  err_ = 0;
  clear_has_err();
}
 ::MSG::ErrorCode EnterChatRoomAns::err() const {
  // @@protoc_insertion_point(field_get:MSG.EnterChatRoomAns.err)
  return static_cast< ::MSG::ErrorCode >(err_);
}
 void EnterChatRoomAns::set_err(::MSG::ErrorCode value) {
  assert(::MSG::ErrorCode_IsValid(value));
  set_has_err();
  err_ = value;
  // @@protoc_insertion_point(field_set:MSG.EnterChatRoomAns.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterChatRoomNot::kUidFieldNumber;
const int EnterChatRoomNot::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterChatRoomNot::EnterChatRoomNot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.EnterChatRoomNot)
}

void EnterChatRoomNot::InitAsDefaultInstance() {
}

EnterChatRoomNot::EnterChatRoomNot(const EnterChatRoomNot& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.EnterChatRoomNot)
}

void EnterChatRoomNot::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EnterChatRoomNot::~EnterChatRoomNot() {
  // @@protoc_insertion_point(destructor:MSG.EnterChatRoomNot)
  SharedDtor();
}

void EnterChatRoomNot::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void EnterChatRoomNot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterChatRoomNot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnterChatRoomNot_descriptor_;
}

const EnterChatRoomNot& EnterChatRoomNot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chat_2eproto();
  return *default_instance_;
}

EnterChatRoomNot* EnterChatRoomNot::default_instance_ = NULL;

EnterChatRoomNot* EnterChatRoomNot::New(::google::protobuf::Arena* arena) const {
  EnterChatRoomNot* n = new EnterChatRoomNot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterChatRoomNot::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.EnterChatRoomNot)
  if (_has_bits_[0 / 32] & 3u) {
    uid_ = GOOGLE_ULONGLONG(0);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EnterChatRoomNot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.EnterChatRoomNot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.EnterChatRoomNot.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.EnterChatRoomNot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.EnterChatRoomNot)
  return false;
#undef DO_
}

void EnterChatRoomNot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.EnterChatRoomNot)
  // required uint64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.EnterChatRoomNot.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.EnterChatRoomNot)
}

::google::protobuf::uint8* EnterChatRoomNot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.EnterChatRoomNot)
  // required uint64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.EnterChatRoomNot.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.EnterChatRoomNot)
  return target;
}

int EnterChatRoomNot::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.EnterChatRoomNot)
  int total_size = 0;

  if (has_uid()) {
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
int EnterChatRoomNot::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.EnterChatRoomNot)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterChatRoomNot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.EnterChatRoomNot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EnterChatRoomNot* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterChatRoomNot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.EnterChatRoomNot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.EnterChatRoomNot)
    MergeFrom(*source);
  }
}

void EnterChatRoomNot::MergeFrom(const EnterChatRoomNot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.EnterChatRoomNot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EnterChatRoomNot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.EnterChatRoomNot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterChatRoomNot::CopyFrom(const EnterChatRoomNot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.EnterChatRoomNot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterChatRoomNot::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void EnterChatRoomNot::Swap(EnterChatRoomNot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterChatRoomNot::InternalSwap(EnterChatRoomNot* other) {
  std::swap(uid_, other->uid_);
  name_.Swap(&other->name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterChatRoomNot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnterChatRoomNot_descriptor_;
  metadata.reflection = EnterChatRoomNot_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterChatRoomNot

// required uint64 uid = 1;
bool EnterChatRoomNot::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnterChatRoomNot::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void EnterChatRoomNot::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnterChatRoomNot::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
 ::google::protobuf::uint64 EnterChatRoomNot::uid() const {
  // @@protoc_insertion_point(field_get:MSG.EnterChatRoomNot.uid)
  return uid_;
}
 void EnterChatRoomNot::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:MSG.EnterChatRoomNot.uid)
}

// required string name = 2;
bool EnterChatRoomNot::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EnterChatRoomNot::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void EnterChatRoomNot::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void EnterChatRoomNot::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& EnterChatRoomNot::name() const {
  // @@protoc_insertion_point(field_get:MSG.EnterChatRoomNot.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EnterChatRoomNot::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.EnterChatRoomNot.name)
}
 void EnterChatRoomNot::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.EnterChatRoomNot.name)
}
 void EnterChatRoomNot::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.EnterChatRoomNot.name)
}
 ::std::string* EnterChatRoomNot::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MSG.EnterChatRoomNot.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EnterChatRoomNot::release_name() {
  // @@protoc_insertion_point(field_release:MSG.EnterChatRoomNot.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EnterChatRoomNot::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.EnterChatRoomNot.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaveChatRoomReq::kRidFieldNumber;
const int LeaveChatRoomReq::kRkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveChatRoomReq::LeaveChatRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.LeaveChatRoomReq)
}

void LeaveChatRoomReq::InitAsDefaultInstance() {
}

LeaveChatRoomReq::LeaveChatRoomReq(const LeaveChatRoomReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.LeaveChatRoomReq)
}

void LeaveChatRoomReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
  rkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LeaveChatRoomReq::~LeaveChatRoomReq() {
  // @@protoc_insertion_point(destructor:MSG.LeaveChatRoomReq)
  SharedDtor();
}

void LeaveChatRoomReq::SharedDtor() {
  rkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LeaveChatRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaveChatRoomReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LeaveChatRoomReq_descriptor_;
}

const LeaveChatRoomReq& LeaveChatRoomReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chat_2eproto();
  return *default_instance_;
}

LeaveChatRoomReq* LeaveChatRoomReq::default_instance_ = NULL;

LeaveChatRoomReq* LeaveChatRoomReq::New(::google::protobuf::Arena* arena) const {
  LeaveChatRoomReq* n = new LeaveChatRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaveChatRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.LeaveChatRoomReq)
  if (_has_bits_[0 / 32] & 3u) {
    rid_ = GOOGLE_ULONGLONG(0);
    if (has_rkey()) {
      rkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LeaveChatRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.LeaveChatRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));
          set_has_rid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_rkey;
        break;
      }

      // required string rkey = 2;
      case 2: {
        if (tag == 18) {
         parse_rkey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rkey().data(), this->rkey().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.LeaveChatRoomReq.rkey");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.LeaveChatRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.LeaveChatRoomReq)
  return false;
#undef DO_
}

void LeaveChatRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.LeaveChatRoomReq)
  // required uint64 rid = 1;
  if (has_rid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // required string rkey = 2;
  if (has_rkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rkey().data(), this->rkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.LeaveChatRoomReq.rkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.LeaveChatRoomReq)
}

::google::protobuf::uint8* LeaveChatRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.LeaveChatRoomReq)
  // required uint64 rid = 1;
  if (has_rid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // required string rkey = 2;
  if (has_rkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rkey().data(), this->rkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.LeaveChatRoomReq.rkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.LeaveChatRoomReq)
  return target;
}

int LeaveChatRoomReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.LeaveChatRoomReq)
  int total_size = 0;

  if (has_rid()) {
    // required uint64 rid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  if (has_rkey()) {
    // required string rkey = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rkey());
  }

  return total_size;
}
int LeaveChatRoomReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.LeaveChatRoomReq)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 rid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());

    // required string rkey = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rkey());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaveChatRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.LeaveChatRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LeaveChatRoomReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaveChatRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.LeaveChatRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.LeaveChatRoomReq)
    MergeFrom(*source);
  }
}

void LeaveChatRoomReq::MergeFrom(const LeaveChatRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.LeaveChatRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rid()) {
      set_rid(from.rid());
    }
    if (from.has_rkey()) {
      set_has_rkey();
      rkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rkey_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LeaveChatRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.LeaveChatRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveChatRoomReq::CopyFrom(const LeaveChatRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.LeaveChatRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveChatRoomReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void LeaveChatRoomReq::Swap(LeaveChatRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveChatRoomReq::InternalSwap(LeaveChatRoomReq* other) {
  std::swap(rid_, other->rid_);
  rkey_.Swap(&other->rkey_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaveChatRoomReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LeaveChatRoomReq_descriptor_;
  metadata.reflection = LeaveChatRoomReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LeaveChatRoomReq

// required uint64 rid = 1;
bool LeaveChatRoomReq::has_rid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LeaveChatRoomReq::set_has_rid() {
  _has_bits_[0] |= 0x00000001u;
}
void LeaveChatRoomReq::clear_has_rid() {
  _has_bits_[0] &= ~0x00000001u;
}
void LeaveChatRoomReq::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
  clear_has_rid();
}
 ::google::protobuf::uint64 LeaveChatRoomReq::rid() const {
  // @@protoc_insertion_point(field_get:MSG.LeaveChatRoomReq.rid)
  return rid_;
}
 void LeaveChatRoomReq::set_rid(::google::protobuf::uint64 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:MSG.LeaveChatRoomReq.rid)
}

// required string rkey = 2;
bool LeaveChatRoomReq::has_rkey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LeaveChatRoomReq::set_has_rkey() {
  _has_bits_[0] |= 0x00000002u;
}
void LeaveChatRoomReq::clear_has_rkey() {
  _has_bits_[0] &= ~0x00000002u;
}
void LeaveChatRoomReq::clear_rkey() {
  rkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rkey();
}
 const ::std::string& LeaveChatRoomReq::rkey() const {
  // @@protoc_insertion_point(field_get:MSG.LeaveChatRoomReq.rkey)
  return rkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LeaveChatRoomReq::set_rkey(const ::std::string& value) {
  set_has_rkey();
  rkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.LeaveChatRoomReq.rkey)
}
 void LeaveChatRoomReq::set_rkey(const char* value) {
  set_has_rkey();
  rkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.LeaveChatRoomReq.rkey)
}
 void LeaveChatRoomReq::set_rkey(const char* value, size_t size) {
  set_has_rkey();
  rkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.LeaveChatRoomReq.rkey)
}
 ::std::string* LeaveChatRoomReq::mutable_rkey() {
  set_has_rkey();
  // @@protoc_insertion_point(field_mutable:MSG.LeaveChatRoomReq.rkey)
  return rkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LeaveChatRoomReq::release_rkey() {
  // @@protoc_insertion_point(field_release:MSG.LeaveChatRoomReq.rkey)
  clear_has_rkey();
  return rkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LeaveChatRoomReq::set_allocated_rkey(::std::string* rkey) {
  if (rkey != NULL) {
    set_has_rkey();
  } else {
    clear_has_rkey();
  }
  rkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rkey);
  // @@protoc_insertion_point(field_set_allocated:MSG.LeaveChatRoomReq.rkey)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaveChatRoomAns::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveChatRoomAns::LeaveChatRoomAns()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.LeaveChatRoomAns)
}

void LeaveChatRoomAns::InitAsDefaultInstance() {
}

LeaveChatRoomAns::LeaveChatRoomAns(const LeaveChatRoomAns& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.LeaveChatRoomAns)
}

void LeaveChatRoomAns::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LeaveChatRoomAns::~LeaveChatRoomAns() {
  // @@protoc_insertion_point(destructor:MSG.LeaveChatRoomAns)
  SharedDtor();
}

void LeaveChatRoomAns::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LeaveChatRoomAns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaveChatRoomAns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LeaveChatRoomAns_descriptor_;
}

const LeaveChatRoomAns& LeaveChatRoomAns::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chat_2eproto();
  return *default_instance_;
}

LeaveChatRoomAns* LeaveChatRoomAns::default_instance_ = NULL;

LeaveChatRoomAns* LeaveChatRoomAns::New(::google::protobuf::Arena* arena) const {
  LeaveChatRoomAns* n = new LeaveChatRoomAns;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaveChatRoomAns::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.LeaveChatRoomAns)
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LeaveChatRoomAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.LeaveChatRoomAns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MSG.ErrorCode err = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MSG::ErrorCode_IsValid(value)) {
            set_err(static_cast< ::MSG::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.LeaveChatRoomAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.LeaveChatRoomAns)
  return false;
#undef DO_
}

void LeaveChatRoomAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.LeaveChatRoomAns)
  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.LeaveChatRoomAns)
}

::google::protobuf::uint8* LeaveChatRoomAns::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.LeaveChatRoomAns)
  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.LeaveChatRoomAns)
  return target;
}

int LeaveChatRoomAns::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.LeaveChatRoomAns)
  int total_size = 0;

  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->err());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaveChatRoomAns::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.LeaveChatRoomAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LeaveChatRoomAns* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaveChatRoomAns>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.LeaveChatRoomAns)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.LeaveChatRoomAns)
    MergeFrom(*source);
  }
}

void LeaveChatRoomAns::MergeFrom(const LeaveChatRoomAns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.LeaveChatRoomAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LeaveChatRoomAns::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.LeaveChatRoomAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveChatRoomAns::CopyFrom(const LeaveChatRoomAns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.LeaveChatRoomAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveChatRoomAns::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void LeaveChatRoomAns::Swap(LeaveChatRoomAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveChatRoomAns::InternalSwap(LeaveChatRoomAns* other) {
  std::swap(err_, other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaveChatRoomAns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LeaveChatRoomAns_descriptor_;
  metadata.reflection = LeaveChatRoomAns_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LeaveChatRoomAns

// required .MSG.ErrorCode err = 1;
bool LeaveChatRoomAns::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LeaveChatRoomAns::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
void LeaveChatRoomAns::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
void LeaveChatRoomAns::clear_err() {
  err_ = 0;
  clear_has_err();
}
 ::MSG::ErrorCode LeaveChatRoomAns::err() const {
  // @@protoc_insertion_point(field_get:MSG.LeaveChatRoomAns.err)
  return static_cast< ::MSG::ErrorCode >(err_);
}
 void LeaveChatRoomAns::set_err(::MSG::ErrorCode value) {
  assert(::MSG::ErrorCode_IsValid(value));
  set_has_err();
  err_ = value;
  // @@protoc_insertion_point(field_set:MSG.LeaveChatRoomAns.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaveChatRoomNot::kUidFieldNumber;
const int LeaveChatRoomNot::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveChatRoomNot::LeaveChatRoomNot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.LeaveChatRoomNot)
}

void LeaveChatRoomNot::InitAsDefaultInstance() {
}

LeaveChatRoomNot::LeaveChatRoomNot(const LeaveChatRoomNot& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.LeaveChatRoomNot)
}

void LeaveChatRoomNot::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LeaveChatRoomNot::~LeaveChatRoomNot() {
  // @@protoc_insertion_point(destructor:MSG.LeaveChatRoomNot)
  SharedDtor();
}

void LeaveChatRoomNot::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LeaveChatRoomNot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaveChatRoomNot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LeaveChatRoomNot_descriptor_;
}

const LeaveChatRoomNot& LeaveChatRoomNot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chat_2eproto();
  return *default_instance_;
}

LeaveChatRoomNot* LeaveChatRoomNot::default_instance_ = NULL;

LeaveChatRoomNot* LeaveChatRoomNot::New(::google::protobuf::Arena* arena) const {
  LeaveChatRoomNot* n = new LeaveChatRoomNot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaveChatRoomNot::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.LeaveChatRoomNot)
  if (_has_bits_[0 / 32] & 3u) {
    uid_ = GOOGLE_ULONGLONG(0);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LeaveChatRoomNot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.LeaveChatRoomNot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.LeaveChatRoomNot.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.LeaveChatRoomNot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.LeaveChatRoomNot)
  return false;
#undef DO_
}

void LeaveChatRoomNot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.LeaveChatRoomNot)
  // required uint64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.LeaveChatRoomNot.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.LeaveChatRoomNot)
}

::google::protobuf::uint8* LeaveChatRoomNot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.LeaveChatRoomNot)
  // required uint64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.LeaveChatRoomNot.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.LeaveChatRoomNot)
  return target;
}

int LeaveChatRoomNot::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.LeaveChatRoomNot)
  int total_size = 0;

  if (has_uid()) {
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
int LeaveChatRoomNot::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.LeaveChatRoomNot)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaveChatRoomNot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.LeaveChatRoomNot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LeaveChatRoomNot* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaveChatRoomNot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.LeaveChatRoomNot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.LeaveChatRoomNot)
    MergeFrom(*source);
  }
}

void LeaveChatRoomNot::MergeFrom(const LeaveChatRoomNot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.LeaveChatRoomNot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LeaveChatRoomNot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.LeaveChatRoomNot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveChatRoomNot::CopyFrom(const LeaveChatRoomNot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.LeaveChatRoomNot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveChatRoomNot::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void LeaveChatRoomNot::Swap(LeaveChatRoomNot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveChatRoomNot::InternalSwap(LeaveChatRoomNot* other) {
  std::swap(uid_, other->uid_);
  name_.Swap(&other->name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaveChatRoomNot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LeaveChatRoomNot_descriptor_;
  metadata.reflection = LeaveChatRoomNot_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LeaveChatRoomNot

// required uint64 uid = 1;
bool LeaveChatRoomNot::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LeaveChatRoomNot::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void LeaveChatRoomNot::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void LeaveChatRoomNot::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
 ::google::protobuf::uint64 LeaveChatRoomNot::uid() const {
  // @@protoc_insertion_point(field_get:MSG.LeaveChatRoomNot.uid)
  return uid_;
}
 void LeaveChatRoomNot::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:MSG.LeaveChatRoomNot.uid)
}

// required string name = 2;
bool LeaveChatRoomNot::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LeaveChatRoomNot::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void LeaveChatRoomNot::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void LeaveChatRoomNot::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& LeaveChatRoomNot::name() const {
  // @@protoc_insertion_point(field_get:MSG.LeaveChatRoomNot.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LeaveChatRoomNot::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.LeaveChatRoomNot.name)
}
 void LeaveChatRoomNot::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.LeaveChatRoomNot.name)
}
 void LeaveChatRoomNot::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.LeaveChatRoomNot.name)
}
 ::std::string* LeaveChatRoomNot::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MSG.LeaveChatRoomNot.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LeaveChatRoomNot::release_name() {
  // @@protoc_insertion_point(field_release:MSG.LeaveChatRoomNot.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LeaveChatRoomNot::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.LeaveChatRoomNot.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace MSG

// @@protoc_insertion_point(global_scope)
