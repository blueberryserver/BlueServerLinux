// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MSG {

namespace {

const ::google::protobuf::Descriptor* UserData__descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserData__reflection_ = NULL;
const ::google::protobuf::Descriptor* Contents__descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Contents__reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Contents__ContentType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* GMember__descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GMember__reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* GMember__GradeType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Group__descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Group__reflection_ = NULL;
const ::google::protobuf::Descriptor* ChatData__descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChatData__reflection_ = NULL;
const ::google::protobuf::Descriptor* ChatRoom__descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChatRoom__reflection_ = NULL;
const ::google::protobuf::Descriptor* ChatChannel__descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChatChannel__reflection_ = NULL;
const ::google::protobuf::Descriptor* CharData__descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CharData__reflection_ = NULL;
const ::google::protobuf::Descriptor* DungeonData__descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DungeonData__reflection_ = NULL;
const ::google::protobuf::Descriptor* BattleData__descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BattleData__reflection_ = NULL;
const ::google::protobuf::Descriptor* BattleData__Attack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BattleData__Attack_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BattleData__AttackResult_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* BattleData__Team_descriptor_ = NULL;
const ::google::protobuf::Descriptor* DungeonPlayData__descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DungeonPlayData__reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgId_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PlatForm_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ChatType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_common_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_common_2eproto() {
  protobuf_AddDesc_common_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "common.proto");
  GOOGLE_CHECK(file != NULL);
  UserData__descriptor_ = file->message_type(0);
  static const int UserData__offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData_, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData_, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData_, did_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData_, platform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData_, logindate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData_, logoutdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData_, regdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData_, vc1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData_, vc2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData_, vc3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData_, groupname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData_, language_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData_, chars_),
  };
  UserData__reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserData__descriptor_,
      UserData_::default_instance_,
      UserData__offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData_, _has_bits_[0]),
      -1,
      -1,
      sizeof(UserData_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData_, _internal_metadata_),
      -1);
  Contents__descriptor_ = file->message_type(1);
  static const int Contents__offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contents_, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contents_, name_),
  };
  Contents__reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Contents__descriptor_,
      Contents_::default_instance_,
      Contents__offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contents_, _has_bits_[0]),
      -1,
      -1,
      sizeof(Contents_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contents_, _internal_metadata_),
      -1);
  Contents__ContentType_descriptor_ = Contents__descriptor_->enum_type(0);
  GMember__descriptor_ = file->message_type(2);
  static const int GMember__offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GMember_, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GMember_, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GMember_, grade_),
  };
  GMember__reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GMember__descriptor_,
      GMember_::default_instance_,
      GMember__offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GMember_, _has_bits_[0]),
      -1,
      -1,
      sizeof(GMember_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GMember_, _internal_metadata_),
      -1);
  GMember__GradeType_descriptor_ = GMember__descriptor_->enum_type(0);
  Group__descriptor_ = file->message_type(3);
  static const int Group__offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group_, gid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group_, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group_, country_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group_, leader_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group_, limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group_, members_),
  };
  Group__reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Group__descriptor_,
      Group_::default_instance_,
      Group__offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group_, _has_bits_[0]),
      -1,
      -1,
      sizeof(Group_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group_, _internal_metadata_),
      -1);
  ChatData__descriptor_ = file->message_type(4);
  static const int ChatData__offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatData_, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatData_, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatData_, groupname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatData_, language_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatData_, chat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatData_, regdate_),
  };
  ChatData__reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChatData__descriptor_,
      ChatData_::default_instance_,
      ChatData__offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatData_, _has_bits_[0]),
      -1,
      -1,
      sizeof(ChatData_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatData_, _internal_metadata_),
      -1);
  ChatRoom__descriptor_ = file->message_type(5);
  static const int ChatRoom__offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRoom_, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRoom_, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRoom_, chats_),
  };
  ChatRoom__reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChatRoom__descriptor_,
      ChatRoom_::default_instance_,
      ChatRoom__offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRoom_, _has_bits_[0]),
      -1,
      -1,
      sizeof(ChatRoom_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRoom_, _internal_metadata_),
      -1);
  ChatChannel__descriptor_ = file->message_type(6);
  static const int ChatChannel__offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatChannel_, cid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatChannel_, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatChannel_, chats_),
  };
  ChatChannel__reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChatChannel__descriptor_,
      ChatChannel_::default_instance_,
      ChatChannel__offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatChannel_, _has_bits_[0]),
      -1,
      -1,
      sizeof(ChatChannel_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatChannel_, _internal_metadata_),
      -1);
  CharData__descriptor_ = file->message_type(7);
  static const int CharData__offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharData_, cid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharData_, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharData_, slotno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharData_, typeno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharData_, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharData_, tier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharData_, regdate_),
  };
  CharData__reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CharData__descriptor_,
      CharData_::default_instance_,
      CharData__offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharData_, _has_bits_[0]),
      -1,
      -1,
      sizeof(CharData_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharData_, _internal_metadata_),
      -1);
  DungeonData__descriptor_ = file->message_type(8);
  static const int DungeonData__offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonData_, no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonData_, tier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonData_, monsters_),
  };
  DungeonData__reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DungeonData__descriptor_,
      DungeonData_::default_instance_,
      DungeonData__offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonData_, _has_bits_[0]),
      -1,
      -1,
      sizeof(DungeonData_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonData_, _internal_metadata_),
      -1);
  BattleData__descriptor_ = file->message_type(9);
  static const int BattleData__offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleData_, srcno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleData_, targets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleData_, team_),
  };
  BattleData__reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BattleData__descriptor_,
      BattleData_::default_instance_,
      BattleData__offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleData_, _has_bits_[0]),
      -1,
      -1,
      sizeof(BattleData_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleData_, _internal_metadata_),
      -1);
  BattleData__Attack_descriptor_ = BattleData__descriptor_->nested_type(0);
  static const int BattleData__Attack_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleData__Attack, no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleData__Attack, damage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleData__Attack, result_),
  };
  BattleData__Attack_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BattleData__Attack_descriptor_,
      BattleData__Attack::default_instance_,
      BattleData__Attack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleData__Attack, _has_bits_[0]),
      -1,
      -1,
      sizeof(BattleData__Attack),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleData__Attack, _internal_metadata_),
      -1);
  BattleData__AttackResult_descriptor_ = BattleData__descriptor_->enum_type(0);
  BattleData__Team_descriptor_ = BattleData__descriptor_->enum_type(1);
  DungeonPlayData__descriptor_ = file->message_type(10);
  static const int DungeonPlayData__offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonPlayData_, lid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonPlayData_, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonPlayData_, battles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonPlayData_, chars_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonPlayData_, mobs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonPlayData_, regdate_),
  };
  DungeonPlayData__reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DungeonPlayData__descriptor_,
      DungeonPlayData_::default_instance_,
      DungeonPlayData__offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonPlayData_, _has_bits_[0]),
      -1,
      -1,
      sizeof(DungeonPlayData_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonPlayData_, _internal_metadata_),
      -1);
  MsgId_descriptor_ = file->enum_type(0);
  ErrorCode_descriptor_ = file->enum_type(1);
  PlatForm_descriptor_ = file->enum_type(2);
  ChatType_descriptor_ = file->enum_type(3);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_common_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserData__descriptor_, &UserData_::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Contents__descriptor_, &Contents_::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GMember__descriptor_, &GMember_::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Group__descriptor_, &Group_::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChatData__descriptor_, &ChatData_::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChatRoom__descriptor_, &ChatRoom_::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChatChannel__descriptor_, &ChatChannel_::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CharData__descriptor_, &CharData_::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DungeonData__descriptor_, &DungeonData_::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BattleData__descriptor_, &BattleData_::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BattleData__Attack_descriptor_, &BattleData__Attack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DungeonPlayData__descriptor_, &DungeonPlayData_::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_common_2eproto() {
  delete UserData_::default_instance_;
  delete UserData__reflection_;
  delete Contents_::default_instance_;
  delete Contents__reflection_;
  delete GMember_::default_instance_;
  delete GMember__reflection_;
  delete Group_::default_instance_;
  delete Group__reflection_;
  delete ChatData_::default_instance_;
  delete ChatData__reflection_;
  delete ChatRoom_::default_instance_;
  delete ChatRoom__reflection_;
  delete ChatChannel_::default_instance_;
  delete ChatChannel__reflection_;
  delete CharData_::default_instance_;
  delete CharData__reflection_;
  delete DungeonData_::default_instance_;
  delete DungeonData__reflection_;
  delete BattleData_::default_instance_;
  delete BattleData__reflection_;
  delete BattleData__Attack::default_instance_;
  delete BattleData__Attack_reflection_;
  delete DungeonPlayData_::default_instance_;
  delete DungeonPlayData__reflection_;
}

void protobuf_AddDesc_common_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_common_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014common.proto\022\003MSG\"\367\001\n\tUserData_\022\013\n\003uid"
    "\030\001 \002(\004\022\014\n\004name\030\002 \002(\t\022\013\n\003did\030\003 \001(\t\022\037\n\010pla"
    "tform\030\004 \001(\0162\r.MSG.PlatForm\022\021\n\tloginDate\030"
    "\005 \001(\t\022\022\n\nlogoutDate\030\006 \001(\t\022\017\n\007regDate\030\007 \001"
    "(\t\022\013\n\003vc1\030\010 \001(\r\022\013\n\003vc2\030\t \001(\r\022\013\n\003vc3\030\n \001("
    "\r\022\021\n\tgroupName\030\013 \001(\t\022\020\n\010language\030\014 \001(\t\022\035"
    "\n\005chars\030\r \003(\0132\016.MSG.CharData_\"\202\001\n\tConten"
    "ts_\022(\n\004type\030\001 \002(\0162\032.MSG.Contents_.Conten"
    "tType\022\014\n\004name\030\002 \002(\t\"=\n\013ContentType\022\r\n\tCT"
    "_INGAME\020\001\022\016\n\nCT_OUTGAME\020\002\022\017\n\013CT_INAPPBUY"
    "\020\003\"\233\001\n\010GMember_\022\013\n\003uid\030\001 \002(\004\022\014\n\004name\030\002 \002"
    "(\t\022&\n\005grade\030\003 \002(\0162\027.MSG.GMember_.GradeTy"
    "pe\"L\n\tGradeType\022\013\n\007Grade_1\020\001\022\013\n\007Grade_2\020"
    "\002\022\013\n\007Grade_3\020\003\022\013\n\007Grade_4\020\004\022\013\n\007Grade_5\020\005"
    "\"s\n\006Group_\022\013\n\003gid\030\001 \002(\004\022\014\n\004name\030\002 \002(\t\022\017\n"
    "\007country\030\003 \002(\t\022\016\n\006leader\030\004 \002(\004\022\r\n\005limit\030"
    "\005 \002(\r\022\036\n\007members\030\006 \003(\0132\r.MSG.GMember_\"j\n"
    "\tChatData_\022\013\n\003uid\030\001 \002(\004\022\014\n\004name\030\002 \002(\t\022\021\n"
    "\tgroupName\030\003 \002(\t\022\020\n\010language\030\004 \002(\t\022\014\n\004ch"
    "at\030\005 \002(\t\022\017\n\007regDate\030\006 \002(\004\"E\n\tChatRoom_\022\013"
    "\n\003rid\030\001 \002(\004\022\014\n\004name\030\002 \002(\t\022\035\n\005chats\030\003 \003(\013"
    "2\016.MSG.ChatData_\"H\n\014ChatChannel_\022\013\n\003cid\030"
    "\001 \002(\004\022\014\n\004name\030\002 \002(\t\022\035\n\005chats\030\003 \003(\0132\016.MSG"
    ".ChatData_\"s\n\tCharData_\022\013\n\003cid\030\001 \002(\004\022\013\n\003"
    "uid\030\002 \002(\004\022\016\n\006slotNo\030\003 \001(\r\022\016\n\006typeNo\030\004 \001("
    "\r\022\r\n\005level\030\005 \001(\r\022\014\n\004tier\030\006 \001(\r\022\017\n\007regDat"
    "e\030\007 \001(\t\"J\n\014DungeonData_\022\n\n\002no\030\001 \002(\r\022\014\n\004t"
    "ier\030\002 \002(\r\022 \n\010monsters\030\003 \003(\0132\016.MSG.CharDa"
    "ta_\"\202\002\n\013BattleData_\022\r\n\005srcNo\030\001 \002(\r\022(\n\007ta"
    "rgets\030\002 \003(\0132\027.MSG.BattleData_.Attack\022#\n\004"
    "team\030\003 \002(\0162\025.MSG.BattleData_.Team\032S\n\006Att"
    "ack\022\n\n\002no\030\001 \002(\r\022\016\n\006damage\030\002 \002(\r\022-\n\006resul"
    "t\030\003 \002(\0162\035.MSG.BattleData_.AttackResult\"#"
    "\n\014AttackResult\022\t\n\005ALIVE\020\000\022\010\n\004DEAD\020\001\"\033\n\004T"
    "eam\022\010\n\004ALLY\020\000\022\t\n\005ENEMY\020\001\"\235\001\n\020DungeonPlay"
    "Data_\022\013\n\003lid\030\001 \002(\004\022\013\n\003uid\030\002 \002(\004\022!\n\007battl"
    "es\030\003 \003(\0132\020.MSG.BattleData_\022\035\n\005chars\030\004 \003("
    "\0132\016.MSG.CharData_\022\034\n\004mobs\030\005 \003(\0132\016.MSG.Ch"
    "arData_\022\017\n\007regDate\030\006 \002(\t*\227\006\n\005MsgId\022\013\n\006CL"
    "OSED\020\220N\022\016\n\tLOGIN_REQ\020\365N\022\016\n\tLOGIN_ANS\020\366N\022"
    "\r\n\010PING_REQ\020\367N\022\r\n\010PONG_ANS\020\370N\022\017\n\nREGIST_"
    "REQ\020\371N\022\017\n\nREGIST_ANS\020\372N\022\020\n\013VERSION_REQ\020\373"
    "N\022\020\n\013VERSION_ANS\020\374N\022\016\n\010CHAT_REQ\020\205\235\001\022\016\n\010C"
    "HAT_ANS\020\206\235\001\022\016\n\010CHAT_NOT\020\207\235\001\022\030\n\022CREATECHA"
    "TROOM_REQ\020\217\235\001\022\030\n\022CREATECHATROOM_ANS\020\220\235\001\022"
    "\030\n\022CREATECHATROOM_NOT\020\221\235\001\022\030\n\022INVITECHATR"
    "OOM_REQ\020\231\235\001\022\030\n\022INVITECHATROOM_ANS\020\232\235\001\022\030\n"
    "\022INVITECHATROOM_NOT\020\233\235\001\022\027\n\021ENTERCHATROOM"
    "_REQ\020\243\235\001\022\027\n\021ENTERCHATROOM_ANS\020\244\235\001\022\027\n\021ENT"
    "ERCHATROOM_NOT\020\245\235\001\022\027\n\021LEAVECHATROOM_REQ\020"
    "\255\235\001\022\027\n\021LEAVECHATROOM_ANS\020\256\235\001\022\027\n\021LEAVECHA"
    "TROOM_NOT\020\257\235\001\022\024\n\016CREATECHAR_REQ\020\267\235\001\022\024\n\016C"
    "REATECHAR_ANS\020\270\235\001\022\022\n\014CONTENTS_NOT\020\301\235\001\022\022\n"
    "\014CURRENCY_NOT\020\303\235\001\022\025\n\017PLAYDUNGEON_REQ\020\313\235\001"
    "\022\025\n\017PLAYDUNGEON_ANS\020\314\235\001\022\025\n\017PLAYDUNGEON_N"
    "OT\020\315\235\001\022\025\n\017LEVELUPCHAR_REQ\020\325\235\001\022\025\n\017LEVELUP"
    "CHAR_ANS\020\326\235\001\022\024\n\016TIERUPCHAR_REQ\020\337\235\001\022\024\n\016TI"
    "ERUPCHAR_ANS\020\340\235\001\022\023\n\rBATTLELOG_REQ\020\351\235\001\022\023\n"
    "\rBATTLELOG_ANS\020\352\235\001*x\n\tErrorCode\022\017\n\013ERR_S"
    "UCCESS\020\000\022\022\n\016ERR_LOGIN_FAIL\020\001\022\025\n\021ERR_ARGU"
    "MENT_FAIL\020\002\022\026\n\022ERR_AUTHORITY_FAIL\020\003\022\027\n\023E"
    "RR_SESSIONKEY_FAIL\020\004* \n\010PlatForm\022\007\n\003IOS\020"
    "\000\022\013\n\007ANDROID\020\001*;\n\010ChatType\022\020\n\014CHAT_CHANN"
    "EL\020\001\022\016\n\nCHAT_GROUP\020\002\022\r\n\tCHAT_ROOM\020\003", 2555);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common.proto", &protobuf_RegisterTypes);
  UserData_::default_instance_ = new UserData_();
  Contents_::default_instance_ = new Contents_();
  GMember_::default_instance_ = new GMember_();
  Group_::default_instance_ = new Group_();
  ChatData_::default_instance_ = new ChatData_();
  ChatRoom_::default_instance_ = new ChatRoom_();
  ChatChannel_::default_instance_ = new ChatChannel_();
  CharData_::default_instance_ = new CharData_();
  DungeonData_::default_instance_ = new DungeonData_();
  BattleData_::default_instance_ = new BattleData_();
  BattleData__Attack::default_instance_ = new BattleData__Attack();
  DungeonPlayData_::default_instance_ = new DungeonPlayData_();
  UserData_::default_instance_->InitAsDefaultInstance();
  Contents_::default_instance_->InitAsDefaultInstance();
  GMember_::default_instance_->InitAsDefaultInstance();
  Group_::default_instance_->InitAsDefaultInstance();
  ChatData_::default_instance_->InitAsDefaultInstance();
  ChatRoom_::default_instance_->InitAsDefaultInstance();
  ChatChannel_::default_instance_->InitAsDefaultInstance();
  CharData_::default_instance_->InitAsDefaultInstance();
  DungeonData_::default_instance_->InitAsDefaultInstance();
  BattleData_::default_instance_->InitAsDefaultInstance();
  BattleData__Attack::default_instance_->InitAsDefaultInstance();
  DungeonPlayData_::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_common_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_common_2eproto {
  StaticDescriptorInitializer_common_2eproto() {
    protobuf_AddDesc_common_2eproto();
  }
} static_descriptor_initializer_common_2eproto_;
const ::google::protobuf::EnumDescriptor* MsgId_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgId_descriptor_;
}
bool MsgId_IsValid(int value) {
  switch(value) {
    case 10000:
    case 10101:
    case 10102:
    case 10103:
    case 10104:
    case 10105:
    case 10106:
    case 10107:
    case 10108:
    case 20101:
    case 20102:
    case 20103:
    case 20111:
    case 20112:
    case 20113:
    case 20121:
    case 20122:
    case 20123:
    case 20131:
    case 20132:
    case 20133:
    case 20141:
    case 20142:
    case 20143:
    case 20151:
    case 20152:
    case 20161:
    case 20163:
    case 20171:
    case 20172:
    case 20173:
    case 20181:
    case 20182:
    case 20191:
    case 20192:
    case 20201:
    case 20202:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorCode_descriptor_;
}
bool ErrorCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PlatForm_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlatForm_descriptor_;
}
bool PlatForm_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ChatType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatType_descriptor_;
}
bool ChatType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserData_::kUidFieldNumber;
const int UserData_::kNameFieldNumber;
const int UserData_::kDidFieldNumber;
const int UserData_::kPlatformFieldNumber;
const int UserData_::kLoginDateFieldNumber;
const int UserData_::kLogoutDateFieldNumber;
const int UserData_::kRegDateFieldNumber;
const int UserData_::kVc1FieldNumber;
const int UserData_::kVc2FieldNumber;
const int UserData_::kVc3FieldNumber;
const int UserData_::kGroupNameFieldNumber;
const int UserData_::kLanguageFieldNumber;
const int UserData_::kCharsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserData_::UserData_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.UserData_)
}

void UserData_::InitAsDefaultInstance() {
}

UserData_::UserData_(const UserData_& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.UserData_)
}

void UserData_::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_ = 0;
  logindate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logoutdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vc1_ = 0u;
  vc2_ = 0u;
  vc3_ = 0u;
  groupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserData_::~UserData_() {
  // @@protoc_insertion_point(destructor:MSG.UserData_)
  SharedDtor();
}

void UserData_::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logindate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logoutdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void UserData_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserData_::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserData__descriptor_;
}

const UserData_& UserData_::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

UserData_* UserData_::default_instance_ = NULL;

UserData_* UserData_::New(::google::protobuf::Arena* arena) const {
  UserData_* n = new UserData_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserData_::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.UserData_)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UserData_, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UserData_*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(platform_, vc1_);
    uid_ = GOOGLE_ULONGLONG(0);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_did()) {
      did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_logindate()) {
      logindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_logoutdate()) {
      logoutdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_regdate()) {
      regdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 3840u) {
    ZR_(vc2_, vc3_);
    if (has_groupname()) {
      groupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_language()) {
      language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  chars_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UserData_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.UserData_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.UserData_.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_did;
        break;
      }

      // optional string did = 3;
      case 3: {
        if (tag == 26) {
         parse_did:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_did()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->did().data(), this->did().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.UserData_.did");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_platform;
        break;
      }

      // optional .MSG.PlatForm platform = 4;
      case 4: {
        if (tag == 32) {
         parse_platform:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MSG::PlatForm_IsValid(value)) {
            set_platform(static_cast< ::MSG::PlatForm >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loginDate;
        break;
      }

      // optional string loginDate = 5;
      case 5: {
        if (tag == 42) {
         parse_loginDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logindate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->logindate().data(), this->logindate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.UserData_.loginDate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_logoutDate;
        break;
      }

      // optional string logoutDate = 6;
      case 6: {
        if (tag == 50) {
         parse_logoutDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logoutdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->logoutdate().data(), this->logoutdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.UserData_.logoutDate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_regDate;
        break;
      }

      // optional string regDate = 7;
      case 7: {
        if (tag == 58) {
         parse_regDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->regdate().data(), this->regdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.UserData_.regDate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_vc1;
        break;
      }

      // optional uint32 vc1 = 8;
      case 8: {
        if (tag == 64) {
         parse_vc1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vc1_)));
          set_has_vc1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_vc2;
        break;
      }

      // optional uint32 vc2 = 9;
      case 9: {
        if (tag == 72) {
         parse_vc2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vc2_)));
          set_has_vc2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_vc3;
        break;
      }

      // optional uint32 vc3 = 10;
      case 10: {
        if (tag == 80) {
         parse_vc3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vc3_)));
          set_has_vc3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_groupName;
        break;
      }

      // optional string groupName = 11;
      case 11: {
        if (tag == 90) {
         parse_groupName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->groupname().data(), this->groupname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.UserData_.groupName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_language;
        break;
      }

      // optional string language = 12;
      case 12: {
        if (tag == 98) {
         parse_language:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->language().data(), this->language().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.UserData_.language");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_chars;
        break;
      }

      // repeated .MSG.CharData_ chars = 13;
      case 13: {
        if (tag == 106) {
         parse_chars:
          DO_(input->IncrementRecursionDepth());
         parse_loop_chars:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_chars()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_loop_chars;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.UserData_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.UserData_)
  return false;
#undef DO_
}

void UserData_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.UserData_)
  // required uint64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.UserData_.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string did = 3;
  if (has_did()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->did().data(), this->did().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.UserData_.did");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->did(), output);
  }

  // optional .MSG.PlatForm platform = 4;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->platform(), output);
  }

  // optional string loginDate = 5;
  if (has_logindate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->logindate().data(), this->logindate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.UserData_.loginDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->logindate(), output);
  }

  // optional string logoutDate = 6;
  if (has_logoutdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->logoutdate().data(), this->logoutdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.UserData_.logoutDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->logoutdate(), output);
  }

  // optional string regDate = 7;
  if (has_regdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regdate().data(), this->regdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.UserData_.regDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->regdate(), output);
  }

  // optional uint32 vc1 = 8;
  if (has_vc1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->vc1(), output);
  }

  // optional uint32 vc2 = 9;
  if (has_vc2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->vc2(), output);
  }

  // optional uint32 vc3 = 10;
  if (has_vc3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->vc3(), output);
  }

  // optional string groupName = 11;
  if (has_groupname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->groupname().data(), this->groupname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.UserData_.groupName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->groupname(), output);
  }

  // optional string language = 12;
  if (has_language()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), this->language().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.UserData_.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->language(), output);
  }

  // repeated .MSG.CharData_ chars = 13;
  for (unsigned int i = 0, n = this->chars_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->chars(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.UserData_)
}

::google::protobuf::uint8* UserData_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.UserData_)
  // required uint64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.UserData_.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string did = 3;
  if (has_did()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->did().data(), this->did().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.UserData_.did");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->did(), target);
  }

  // optional .MSG.PlatForm platform = 4;
  if (has_platform()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->platform(), target);
  }

  // optional string loginDate = 5;
  if (has_logindate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->logindate().data(), this->logindate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.UserData_.loginDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->logindate(), target);
  }

  // optional string logoutDate = 6;
  if (has_logoutdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->logoutdate().data(), this->logoutdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.UserData_.logoutDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->logoutdate(), target);
  }

  // optional string regDate = 7;
  if (has_regdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regdate().data(), this->regdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.UserData_.regDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->regdate(), target);
  }

  // optional uint32 vc1 = 8;
  if (has_vc1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->vc1(), target);
  }

  // optional uint32 vc2 = 9;
  if (has_vc2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->vc2(), target);
  }

  // optional uint32 vc3 = 10;
  if (has_vc3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->vc3(), target);
  }

  // optional string groupName = 11;
  if (has_groupname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->groupname().data(), this->groupname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.UserData_.groupName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->groupname(), target);
  }

  // optional string language = 12;
  if (has_language()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), this->language().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.UserData_.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->language(), target);
  }

  // repeated .MSG.CharData_ chars = 13;
  for (unsigned int i = 0, n = this->chars_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->chars(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.UserData_)
  return target;
}

int UserData_::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.UserData_)
  int total_size = 0;

  if (has_uid()) {
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
int UserData_::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.UserData_)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 252u) {
    // optional string did = 3;
    if (has_did()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->did());
    }

    // optional .MSG.PlatForm platform = 4;
    if (has_platform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->platform());
    }

    // optional string loginDate = 5;
    if (has_logindate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->logindate());
    }

    // optional string logoutDate = 6;
    if (has_logoutdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->logoutdate());
    }

    // optional string regDate = 7;
    if (has_regdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->regdate());
    }

    // optional uint32 vc1 = 8;
    if (has_vc1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->vc1());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional uint32 vc2 = 9;
    if (has_vc2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->vc2());
    }

    // optional uint32 vc3 = 10;
    if (has_vc3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->vc3());
    }

    // optional string groupName = 11;
    if (has_groupname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->groupname());
    }

    // optional string language = 12;
    if (has_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->language());
    }

  }
  // repeated .MSG.CharData_ chars = 13;
  total_size += 1 * this->chars_size();
  for (int i = 0; i < this->chars_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->chars(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserData_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.UserData_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UserData_* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UserData_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.UserData_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.UserData_)
    MergeFrom(*source);
  }
}

void UserData_::MergeFrom(const UserData_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.UserData_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  chars_.MergeFrom(from.chars_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_did()) {
      set_has_did();
      did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
    }
    if (from.has_platform()) {
      set_platform(from.platform());
    }
    if (from.has_logindate()) {
      set_has_logindate();
      logindate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logindate_);
    }
    if (from.has_logoutdate()) {
      set_has_logoutdate();
      logoutdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logoutdate_);
    }
    if (from.has_regdate()) {
      set_has_regdate();
      regdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regdate_);
    }
    if (from.has_vc1()) {
      set_vc1(from.vc1());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_vc2()) {
      set_vc2(from.vc2());
    }
    if (from.has_vc3()) {
      set_vc3(from.vc3());
    }
    if (from.has_groupname()) {
      set_has_groupname();
      groupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupname_);
    }
    if (from.has_language()) {
      set_has_language();
      language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UserData_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.UserData_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserData_::CopyFrom(const UserData_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.UserData_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserData_::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->chars())) return false;
  return true;
}

void UserData_::Swap(UserData_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserData_::InternalSwap(UserData_* other) {
  std::swap(uid_, other->uid_);
  name_.Swap(&other->name_);
  did_.Swap(&other->did_);
  std::swap(platform_, other->platform_);
  logindate_.Swap(&other->logindate_);
  logoutdate_.Swap(&other->logoutdate_);
  regdate_.Swap(&other->regdate_);
  std::swap(vc1_, other->vc1_);
  std::swap(vc2_, other->vc2_);
  std::swap(vc3_, other->vc3_);
  groupname_.Swap(&other->groupname_);
  language_.Swap(&other->language_);
  chars_.UnsafeArenaSwap(&other->chars_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserData_::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserData__descriptor_;
  metadata.reflection = UserData__reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserData_

// required uint64 uid = 1;
bool UserData_::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UserData_::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void UserData_::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void UserData_::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
 ::google::protobuf::uint64 UserData_::uid() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.uid)
  return uid_;
}
 void UserData_::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:MSG.UserData_.uid)
}

// required string name = 2;
bool UserData_::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UserData_::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void UserData_::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void UserData_::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& UserData_::name() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserData_::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.UserData_.name)
}
 void UserData_::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.UserData_.name)
}
 void UserData_::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.UserData_.name)
}
 ::std::string* UserData_::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MSG.UserData_.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserData_::release_name() {
  // @@protoc_insertion_point(field_release:MSG.UserData_.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserData_::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.UserData_.name)
}

// optional string did = 3;
bool UserData_::has_did() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UserData_::set_has_did() {
  _has_bits_[0] |= 0x00000004u;
}
void UserData_::clear_has_did() {
  _has_bits_[0] &= ~0x00000004u;
}
void UserData_::clear_did() {
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_did();
}
 const ::std::string& UserData_::did() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.did)
  return did_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserData_::set_did(const ::std::string& value) {
  set_has_did();
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.UserData_.did)
}
 void UserData_::set_did(const char* value) {
  set_has_did();
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.UserData_.did)
}
 void UserData_::set_did(const char* value, size_t size) {
  set_has_did();
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.UserData_.did)
}
 ::std::string* UserData_::mutable_did() {
  set_has_did();
  // @@protoc_insertion_point(field_mutable:MSG.UserData_.did)
  return did_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserData_::release_did() {
  // @@protoc_insertion_point(field_release:MSG.UserData_.did)
  clear_has_did();
  return did_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserData_::set_allocated_did(::std::string* did) {
  if (did != NULL) {
    set_has_did();
  } else {
    clear_has_did();
  }
  did_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), did);
  // @@protoc_insertion_point(field_set_allocated:MSG.UserData_.did)
}

// optional .MSG.PlatForm platform = 4;
bool UserData_::has_platform() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void UserData_::set_has_platform() {
  _has_bits_[0] |= 0x00000008u;
}
void UserData_::clear_has_platform() {
  _has_bits_[0] &= ~0x00000008u;
}
void UserData_::clear_platform() {
  platform_ = 0;
  clear_has_platform();
}
 ::MSG::PlatForm UserData_::platform() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.platform)
  return static_cast< ::MSG::PlatForm >(platform_);
}
 void UserData_::set_platform(::MSG::PlatForm value) {
  assert(::MSG::PlatForm_IsValid(value));
  set_has_platform();
  platform_ = value;
  // @@protoc_insertion_point(field_set:MSG.UserData_.platform)
}

// optional string loginDate = 5;
bool UserData_::has_logindate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void UserData_::set_has_logindate() {
  _has_bits_[0] |= 0x00000010u;
}
void UserData_::clear_has_logindate() {
  _has_bits_[0] &= ~0x00000010u;
}
void UserData_::clear_logindate() {
  logindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_logindate();
}
 const ::std::string& UserData_::logindate() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.loginDate)
  return logindate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserData_::set_logindate(const ::std::string& value) {
  set_has_logindate();
  logindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.UserData_.loginDate)
}
 void UserData_::set_logindate(const char* value) {
  set_has_logindate();
  logindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.UserData_.loginDate)
}
 void UserData_::set_logindate(const char* value, size_t size) {
  set_has_logindate();
  logindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.UserData_.loginDate)
}
 ::std::string* UserData_::mutable_logindate() {
  set_has_logindate();
  // @@protoc_insertion_point(field_mutable:MSG.UserData_.loginDate)
  return logindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserData_::release_logindate() {
  // @@protoc_insertion_point(field_release:MSG.UserData_.loginDate)
  clear_has_logindate();
  return logindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserData_::set_allocated_logindate(::std::string* logindate) {
  if (logindate != NULL) {
    set_has_logindate();
  } else {
    clear_has_logindate();
  }
  logindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logindate);
  // @@protoc_insertion_point(field_set_allocated:MSG.UserData_.loginDate)
}

// optional string logoutDate = 6;
bool UserData_::has_logoutdate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void UserData_::set_has_logoutdate() {
  _has_bits_[0] |= 0x00000020u;
}
void UserData_::clear_has_logoutdate() {
  _has_bits_[0] &= ~0x00000020u;
}
void UserData_::clear_logoutdate() {
  logoutdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_logoutdate();
}
 const ::std::string& UserData_::logoutdate() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.logoutDate)
  return logoutdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserData_::set_logoutdate(const ::std::string& value) {
  set_has_logoutdate();
  logoutdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.UserData_.logoutDate)
}
 void UserData_::set_logoutdate(const char* value) {
  set_has_logoutdate();
  logoutdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.UserData_.logoutDate)
}
 void UserData_::set_logoutdate(const char* value, size_t size) {
  set_has_logoutdate();
  logoutdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.UserData_.logoutDate)
}
 ::std::string* UserData_::mutable_logoutdate() {
  set_has_logoutdate();
  // @@protoc_insertion_point(field_mutable:MSG.UserData_.logoutDate)
  return logoutdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserData_::release_logoutdate() {
  // @@protoc_insertion_point(field_release:MSG.UserData_.logoutDate)
  clear_has_logoutdate();
  return logoutdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserData_::set_allocated_logoutdate(::std::string* logoutdate) {
  if (logoutdate != NULL) {
    set_has_logoutdate();
  } else {
    clear_has_logoutdate();
  }
  logoutdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logoutdate);
  // @@protoc_insertion_point(field_set_allocated:MSG.UserData_.logoutDate)
}

// optional string regDate = 7;
bool UserData_::has_regdate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void UserData_::set_has_regdate() {
  _has_bits_[0] |= 0x00000040u;
}
void UserData_::clear_has_regdate() {
  _has_bits_[0] &= ~0x00000040u;
}
void UserData_::clear_regdate() {
  regdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_regdate();
}
 const ::std::string& UserData_::regdate() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.regDate)
  return regdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserData_::set_regdate(const ::std::string& value) {
  set_has_regdate();
  regdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.UserData_.regDate)
}
 void UserData_::set_regdate(const char* value) {
  set_has_regdate();
  regdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.UserData_.regDate)
}
 void UserData_::set_regdate(const char* value, size_t size) {
  set_has_regdate();
  regdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.UserData_.regDate)
}
 ::std::string* UserData_::mutable_regdate() {
  set_has_regdate();
  // @@protoc_insertion_point(field_mutable:MSG.UserData_.regDate)
  return regdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserData_::release_regdate() {
  // @@protoc_insertion_point(field_release:MSG.UserData_.regDate)
  clear_has_regdate();
  return regdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserData_::set_allocated_regdate(::std::string* regdate) {
  if (regdate != NULL) {
    set_has_regdate();
  } else {
    clear_has_regdate();
  }
  regdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regdate);
  // @@protoc_insertion_point(field_set_allocated:MSG.UserData_.regDate)
}

// optional uint32 vc1 = 8;
bool UserData_::has_vc1() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void UserData_::set_has_vc1() {
  _has_bits_[0] |= 0x00000080u;
}
void UserData_::clear_has_vc1() {
  _has_bits_[0] &= ~0x00000080u;
}
void UserData_::clear_vc1() {
  vc1_ = 0u;
  clear_has_vc1();
}
 ::google::protobuf::uint32 UserData_::vc1() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.vc1)
  return vc1_;
}
 void UserData_::set_vc1(::google::protobuf::uint32 value) {
  set_has_vc1();
  vc1_ = value;
  // @@protoc_insertion_point(field_set:MSG.UserData_.vc1)
}

// optional uint32 vc2 = 9;
bool UserData_::has_vc2() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void UserData_::set_has_vc2() {
  _has_bits_[0] |= 0x00000100u;
}
void UserData_::clear_has_vc2() {
  _has_bits_[0] &= ~0x00000100u;
}
void UserData_::clear_vc2() {
  vc2_ = 0u;
  clear_has_vc2();
}
 ::google::protobuf::uint32 UserData_::vc2() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.vc2)
  return vc2_;
}
 void UserData_::set_vc2(::google::protobuf::uint32 value) {
  set_has_vc2();
  vc2_ = value;
  // @@protoc_insertion_point(field_set:MSG.UserData_.vc2)
}

// optional uint32 vc3 = 10;
bool UserData_::has_vc3() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void UserData_::set_has_vc3() {
  _has_bits_[0] |= 0x00000200u;
}
void UserData_::clear_has_vc3() {
  _has_bits_[0] &= ~0x00000200u;
}
void UserData_::clear_vc3() {
  vc3_ = 0u;
  clear_has_vc3();
}
 ::google::protobuf::uint32 UserData_::vc3() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.vc3)
  return vc3_;
}
 void UserData_::set_vc3(::google::protobuf::uint32 value) {
  set_has_vc3();
  vc3_ = value;
  // @@protoc_insertion_point(field_set:MSG.UserData_.vc3)
}

// optional string groupName = 11;
bool UserData_::has_groupname() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void UserData_::set_has_groupname() {
  _has_bits_[0] |= 0x00000400u;
}
void UserData_::clear_has_groupname() {
  _has_bits_[0] &= ~0x00000400u;
}
void UserData_::clear_groupname() {
  groupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupname();
}
 const ::std::string& UserData_::groupname() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.groupName)
  return groupname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserData_::set_groupname(const ::std::string& value) {
  set_has_groupname();
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.UserData_.groupName)
}
 void UserData_::set_groupname(const char* value) {
  set_has_groupname();
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.UserData_.groupName)
}
 void UserData_::set_groupname(const char* value, size_t size) {
  set_has_groupname();
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.UserData_.groupName)
}
 ::std::string* UserData_::mutable_groupname() {
  set_has_groupname();
  // @@protoc_insertion_point(field_mutable:MSG.UserData_.groupName)
  return groupname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserData_::release_groupname() {
  // @@protoc_insertion_point(field_release:MSG.UserData_.groupName)
  clear_has_groupname();
  return groupname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserData_::set_allocated_groupname(::std::string* groupname) {
  if (groupname != NULL) {
    set_has_groupname();
  } else {
    clear_has_groupname();
  }
  groupname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), groupname);
  // @@protoc_insertion_point(field_set_allocated:MSG.UserData_.groupName)
}

// optional string language = 12;
bool UserData_::has_language() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void UserData_::set_has_language() {
  _has_bits_[0] |= 0x00000800u;
}
void UserData_::clear_has_language() {
  _has_bits_[0] &= ~0x00000800u;
}
void UserData_::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_language();
}
 const ::std::string& UserData_::language() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.language)
  return language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserData_::set_language(const ::std::string& value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.UserData_.language)
}
 void UserData_::set_language(const char* value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.UserData_.language)
}
 void UserData_::set_language(const char* value, size_t size) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.UserData_.language)
}
 ::std::string* UserData_::mutable_language() {
  set_has_language();
  // @@protoc_insertion_point(field_mutable:MSG.UserData_.language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserData_::release_language() {
  // @@protoc_insertion_point(field_release:MSG.UserData_.language)
  clear_has_language();
  return language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserData_::set_allocated_language(::std::string* language) {
  if (language != NULL) {
    set_has_language();
  } else {
    clear_has_language();
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:MSG.UserData_.language)
}

// repeated .MSG.CharData_ chars = 13;
int UserData_::chars_size() const {
  return chars_.size();
}
void UserData_::clear_chars() {
  chars_.Clear();
}
const ::MSG::CharData_& UserData_::chars(int index) const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.chars)
  return chars_.Get(index);
}
::MSG::CharData_* UserData_::mutable_chars(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.UserData_.chars)
  return chars_.Mutable(index);
}
::MSG::CharData_* UserData_::add_chars() {
  // @@protoc_insertion_point(field_add:MSG.UserData_.chars)
  return chars_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::CharData_ >*
UserData_::mutable_chars() {
  // @@protoc_insertion_point(field_mutable_list:MSG.UserData_.chars)
  return &chars_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::CharData_ >&
UserData_::chars() const {
  // @@protoc_insertion_point(field_list:MSG.UserData_.chars)
  return chars_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Contents__ContentType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Contents__ContentType_descriptor_;
}
bool Contents__ContentType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Contents__ContentType Contents_::CT_INGAME;
const Contents__ContentType Contents_::CT_OUTGAME;
const Contents__ContentType Contents_::CT_INAPPBUY;
const Contents__ContentType Contents_::ContentType_MIN;
const Contents__ContentType Contents_::ContentType_MAX;
const int Contents_::ContentType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Contents_::kTypeFieldNumber;
const int Contents_::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Contents_::Contents_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.Contents_)
}

void Contents_::InitAsDefaultInstance() {
}

Contents_::Contents_(const Contents_& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.Contents_)
}

void Contents_::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 1;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Contents_::~Contents_() {
  // @@protoc_insertion_point(destructor:MSG.Contents_)
  SharedDtor();
}

void Contents_::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Contents_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Contents_::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Contents__descriptor_;
}

const Contents_& Contents_::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

Contents_* Contents_::default_instance_ = NULL;

Contents_* Contents_::New(::google::protobuf::Arena* arena) const {
  Contents_* n = new Contents_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Contents_::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.Contents_)
  if (_has_bits_[0 / 32] & 3u) {
    type_ = 1;
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Contents_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.Contents_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MSG.Contents_.ContentType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MSG::Contents__ContentType_IsValid(value)) {
            set_type(static_cast< ::MSG::Contents__ContentType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.Contents_.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.Contents_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.Contents_)
  return false;
#undef DO_
}

void Contents_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.Contents_)
  // required .MSG.Contents_.ContentType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.Contents_.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.Contents_)
}

::google::protobuf::uint8* Contents_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.Contents_)
  // required .MSG.Contents_.ContentType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.Contents_.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.Contents_)
  return target;
}

int Contents_::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.Contents_)
  int total_size = 0;

  if (has_type()) {
    // required .MSG.Contents_.ContentType type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
int Contents_::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.Contents_)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .MSG.Contents_.ContentType type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Contents_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.Contents_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Contents_* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Contents_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.Contents_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.Contents_)
    MergeFrom(*source);
  }
}

void Contents_::MergeFrom(const Contents_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.Contents_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Contents_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.Contents_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Contents_::CopyFrom(const Contents_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.Contents_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Contents_::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Contents_::Swap(Contents_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Contents_::InternalSwap(Contents_* other) {
  std::swap(type_, other->type_);
  name_.Swap(&other->name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Contents_::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Contents__descriptor_;
  metadata.reflection = Contents__reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Contents_

// required .MSG.Contents_.ContentType type = 1;
bool Contents_::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Contents_::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void Contents_::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void Contents_::clear_type() {
  type_ = 1;
  clear_has_type();
}
 ::MSG::Contents__ContentType Contents_::type() const {
  // @@protoc_insertion_point(field_get:MSG.Contents_.type)
  return static_cast< ::MSG::Contents__ContentType >(type_);
}
 void Contents_::set_type(::MSG::Contents__ContentType value) {
  assert(::MSG::Contents__ContentType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:MSG.Contents_.type)
}

// required string name = 2;
bool Contents_::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Contents_::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void Contents_::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void Contents_::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& Contents_::name() const {
  // @@protoc_insertion_point(field_get:MSG.Contents_.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Contents_::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Contents_.name)
}
 void Contents_::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Contents_.name)
}
 void Contents_::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Contents_.name)
}
 ::std::string* Contents_::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MSG.Contents_.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Contents_::release_name() {
  // @@protoc_insertion_point(field_release:MSG.Contents_.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Contents_::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.Contents_.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* GMember__GradeType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GMember__GradeType_descriptor_;
}
bool GMember__GradeType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GMember__GradeType GMember_::Grade_1;
const GMember__GradeType GMember_::Grade_2;
const GMember__GradeType GMember_::Grade_3;
const GMember__GradeType GMember_::Grade_4;
const GMember__GradeType GMember_::Grade_5;
const GMember__GradeType GMember_::GradeType_MIN;
const GMember__GradeType GMember_::GradeType_MAX;
const int GMember_::GradeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GMember_::kUidFieldNumber;
const int GMember_::kNameFieldNumber;
const int GMember_::kGradeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GMember_::GMember_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.GMember_)
}

void GMember_::InitAsDefaultInstance() {
}

GMember_::GMember_(const GMember_& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.GMember_)
}

void GMember_::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grade_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GMember_::~GMember_() {
  // @@protoc_insertion_point(destructor:MSG.GMember_)
  SharedDtor();
}

void GMember_::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GMember_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GMember_::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GMember__descriptor_;
}

const GMember_& GMember_::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

GMember_* GMember_::default_instance_ = NULL;

GMember_* GMember_::New(::google::protobuf::Arena* arena) const {
  GMember_* n = new GMember_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GMember_::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.GMember_)
  if (_has_bits_[0 / 32] & 7u) {
    uid_ = GOOGLE_ULONGLONG(0);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    grade_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GMember_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.GMember_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.GMember_.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_grade;
        break;
      }

      // required .MSG.GMember_.GradeType grade = 3;
      case 3: {
        if (tag == 24) {
         parse_grade:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MSG::GMember__GradeType_IsValid(value)) {
            set_grade(static_cast< ::MSG::GMember__GradeType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.GMember_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.GMember_)
  return false;
#undef DO_
}

void GMember_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.GMember_)
  // required uint64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.GMember_.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required .MSG.GMember_.GradeType grade = 3;
  if (has_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->grade(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.GMember_)
}

::google::protobuf::uint8* GMember_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.GMember_)
  // required uint64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.GMember_.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required .MSG.GMember_.GradeType grade = 3;
  if (has_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->grade(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.GMember_)
  return target;
}

int GMember_::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.GMember_)
  int total_size = 0;

  if (has_uid()) {
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_grade()) {
    // required .MSG.GMember_.GradeType grade = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->grade());
  }

  return total_size;
}
int GMember_::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.GMember_)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required .MSG.GMember_.GradeType grade = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->grade());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GMember_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.GMember_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GMember_* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GMember_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.GMember_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.GMember_)
    MergeFrom(*source);
  }
}

void GMember_::MergeFrom(const GMember_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.GMember_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_grade()) {
      set_grade(from.grade());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GMember_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.GMember_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GMember_::CopyFrom(const GMember_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.GMember_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GMember_::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void GMember_::Swap(GMember_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GMember_::InternalSwap(GMember_* other) {
  std::swap(uid_, other->uid_);
  name_.Swap(&other->name_);
  std::swap(grade_, other->grade_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GMember_::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GMember__descriptor_;
  metadata.reflection = GMember__reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GMember_

// required uint64 uid = 1;
bool GMember_::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GMember_::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void GMember_::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GMember_::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
 ::google::protobuf::uint64 GMember_::uid() const {
  // @@protoc_insertion_point(field_get:MSG.GMember_.uid)
  return uid_;
}
 void GMember_::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:MSG.GMember_.uid)
}

// required string name = 2;
bool GMember_::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GMember_::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void GMember_::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void GMember_::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& GMember_::name() const {
  // @@protoc_insertion_point(field_get:MSG.GMember_.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GMember_::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.GMember_.name)
}
 void GMember_::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.GMember_.name)
}
 void GMember_::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.GMember_.name)
}
 ::std::string* GMember_::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MSG.GMember_.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GMember_::release_name() {
  // @@protoc_insertion_point(field_release:MSG.GMember_.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GMember_::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.GMember_.name)
}

// required .MSG.GMember_.GradeType grade = 3;
bool GMember_::has_grade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GMember_::set_has_grade() {
  _has_bits_[0] |= 0x00000004u;
}
void GMember_::clear_has_grade() {
  _has_bits_[0] &= ~0x00000004u;
}
void GMember_::clear_grade() {
  grade_ = 1;
  clear_has_grade();
}
 ::MSG::GMember__GradeType GMember_::grade() const {
  // @@protoc_insertion_point(field_get:MSG.GMember_.grade)
  return static_cast< ::MSG::GMember__GradeType >(grade_);
}
 void GMember_::set_grade(::MSG::GMember__GradeType value) {
  assert(::MSG::GMember__GradeType_IsValid(value));
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:MSG.GMember_.grade)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Group_::kGidFieldNumber;
const int Group_::kNameFieldNumber;
const int Group_::kCountryFieldNumber;
const int Group_::kLeaderFieldNumber;
const int Group_::kLimitFieldNumber;
const int Group_::kMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Group_::Group_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.Group_)
}

void Group_::InitAsDefaultInstance() {
}

Group_::Group_(const Group_& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.Group_)
}

void Group_::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  gid_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_ = GOOGLE_ULONGLONG(0);
  limit_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Group_::~Group_() {
  // @@protoc_insertion_point(destructor:MSG.Group_)
  SharedDtor();
}

void Group_::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Group_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Group_::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Group__descriptor_;
}

const Group_& Group_::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

Group_* Group_::default_instance_ = NULL;

Group_* Group_::New(::google::protobuf::Arena* arena) const {
  Group_* n = new Group_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Group_::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.Group_)
  if (_has_bits_[0 / 32] & 31u) {
    gid_ = GOOGLE_ULONGLONG(0);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_country()) {
      country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    leader_ = GOOGLE_ULONGLONG(0);
    limit_ = 0u;
  }
  members_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Group_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.Group_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 gid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gid_)));
          set_has_gid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.Group_.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_country;
        break;
      }

      // required string country = 3;
      case 3: {
        if (tag == 26) {
         parse_country:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country().data(), this->country().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.Group_.country");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_leader;
        break;
      }

      // required uint64 leader = 4;
      case 4: {
        if (tag == 32) {
         parse_leader:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &leader_)));
          set_has_leader();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_limit;
        break;
      }

      // required uint32 limit = 5;
      case 5: {
        if (tag == 40) {
         parse_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
          set_has_limit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_members;
        break;
      }

      // repeated .MSG.GMember_ members = 6;
      case 6: {
        if (tag == 50) {
         parse_members:
          DO_(input->IncrementRecursionDepth());
         parse_loop_members:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_members;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.Group_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.Group_)
  return false;
#undef DO_
}

void Group_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.Group_)
  // required uint64 gid = 1;
  if (has_gid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gid(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.Group_.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required string country = 3;
  if (has_country()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.Group_.country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->country(), output);
  }

  // required uint64 leader = 4;
  if (has_leader()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->leader(), output);
  }

  // required uint32 limit = 5;
  if (has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->limit(), output);
  }

  // repeated .MSG.GMember_ members = 6;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->members(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.Group_)
}

::google::protobuf::uint8* Group_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.Group_)
  // required uint64 gid = 1;
  if (has_gid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gid(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.Group_.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required string country = 3;
  if (has_country()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.Group_.country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->country(), target);
  }

  // required uint64 leader = 4;
  if (has_leader()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->leader(), target);
  }

  // required uint32 limit = 5;
  if (has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->limit(), target);
  }

  // repeated .MSG.GMember_ members = 6;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->members(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.Group_)
  return target;
}

int Group_::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.Group_)
  int total_size = 0;

  if (has_gid()) {
    // required uint64 gid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gid());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_country()) {
    // required string country = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->country());
  }

  if (has_leader()) {
    // required uint64 leader = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->leader());
  }

  if (has_limit()) {
    // required uint32 limit = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limit());
  }

  return total_size;
}
int Group_::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.Group_)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required uint64 gid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gid());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string country = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->country());

    // required uint64 leader = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->leader());

    // required uint32 limit = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limit());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .MSG.GMember_ members = 6;
  total_size += 1 * this->members_size();
  for (int i = 0; i < this->members_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->members(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Group_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.Group_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Group_* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Group_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.Group_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.Group_)
    MergeFrom(*source);
  }
}

void Group_::MergeFrom(const Group_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.Group_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  members_.MergeFrom(from.members_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gid()) {
      set_gid(from.gid());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_country()) {
      set_has_country();
      country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
    }
    if (from.has_leader()) {
      set_leader(from.leader());
    }
    if (from.has_limit()) {
      set_limit(from.limit());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Group_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.Group_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Group_::CopyFrom(const Group_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.Group_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Group_::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->members())) return false;
  return true;
}

void Group_::Swap(Group_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Group_::InternalSwap(Group_* other) {
  std::swap(gid_, other->gid_);
  name_.Swap(&other->name_);
  country_.Swap(&other->country_);
  std::swap(leader_, other->leader_);
  std::swap(limit_, other->limit_);
  members_.UnsafeArenaSwap(&other->members_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Group_::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Group__descriptor_;
  metadata.reflection = Group__reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Group_

// required uint64 gid = 1;
bool Group_::has_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Group_::set_has_gid() {
  _has_bits_[0] |= 0x00000001u;
}
void Group_::clear_has_gid() {
  _has_bits_[0] &= ~0x00000001u;
}
void Group_::clear_gid() {
  gid_ = GOOGLE_ULONGLONG(0);
  clear_has_gid();
}
 ::google::protobuf::uint64 Group_::gid() const {
  // @@protoc_insertion_point(field_get:MSG.Group_.gid)
  return gid_;
}
 void Group_::set_gid(::google::protobuf::uint64 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:MSG.Group_.gid)
}

// required string name = 2;
bool Group_::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Group_::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void Group_::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void Group_::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& Group_::name() const {
  // @@protoc_insertion_point(field_get:MSG.Group_.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Group_::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Group_.name)
}
 void Group_::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Group_.name)
}
 void Group_::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Group_.name)
}
 ::std::string* Group_::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MSG.Group_.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Group_::release_name() {
  // @@protoc_insertion_point(field_release:MSG.Group_.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Group_::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.Group_.name)
}

// required string country = 3;
bool Group_::has_country() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Group_::set_has_country() {
  _has_bits_[0] |= 0x00000004u;
}
void Group_::clear_has_country() {
  _has_bits_[0] &= ~0x00000004u;
}
void Group_::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
 const ::std::string& Group_::country() const {
  // @@protoc_insertion_point(field_get:MSG.Group_.country)
  return country_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Group_::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Group_.country)
}
 void Group_::set_country(const char* value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Group_.country)
}
 void Group_::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Group_.country)
}
 ::std::string* Group_::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:MSG.Group_.country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Group_::release_country() {
  // @@protoc_insertion_point(field_release:MSG.Group_.country)
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Group_::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:MSG.Group_.country)
}

// required uint64 leader = 4;
bool Group_::has_leader() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Group_::set_has_leader() {
  _has_bits_[0] |= 0x00000008u;
}
void Group_::clear_has_leader() {
  _has_bits_[0] &= ~0x00000008u;
}
void Group_::clear_leader() {
  leader_ = GOOGLE_ULONGLONG(0);
  clear_has_leader();
}
 ::google::protobuf::uint64 Group_::leader() const {
  // @@protoc_insertion_point(field_get:MSG.Group_.leader)
  return leader_;
}
 void Group_::set_leader(::google::protobuf::uint64 value) {
  set_has_leader();
  leader_ = value;
  // @@protoc_insertion_point(field_set:MSG.Group_.leader)
}

// required uint32 limit = 5;
bool Group_::has_limit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Group_::set_has_limit() {
  _has_bits_[0] |= 0x00000010u;
}
void Group_::clear_has_limit() {
  _has_bits_[0] &= ~0x00000010u;
}
void Group_::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
 ::google::protobuf::uint32 Group_::limit() const {
  // @@protoc_insertion_point(field_get:MSG.Group_.limit)
  return limit_;
}
 void Group_::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:MSG.Group_.limit)
}

// repeated .MSG.GMember_ members = 6;
int Group_::members_size() const {
  return members_.size();
}
void Group_::clear_members() {
  members_.Clear();
}
const ::MSG::GMember_& Group_::members(int index) const {
  // @@protoc_insertion_point(field_get:MSG.Group_.members)
  return members_.Get(index);
}
::MSG::GMember_* Group_::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.Group_.members)
  return members_.Mutable(index);
}
::MSG::GMember_* Group_::add_members() {
  // @@protoc_insertion_point(field_add:MSG.Group_.members)
  return members_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::GMember_ >*
Group_::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:MSG.Group_.members)
  return &members_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::GMember_ >&
Group_::members() const {
  // @@protoc_insertion_point(field_list:MSG.Group_.members)
  return members_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatData_::kUidFieldNumber;
const int ChatData_::kNameFieldNumber;
const int ChatData_::kGroupNameFieldNumber;
const int ChatData_::kLanguageFieldNumber;
const int ChatData_::kChatFieldNumber;
const int ChatData_::kRegDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatData_::ChatData_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.ChatData_)
}

void ChatData_::InitAsDefaultInstance() {
}

ChatData_::ChatData_(const ChatData_& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.ChatData_)
}

void ChatData_::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regdate_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChatData_::~ChatData_() {
  // @@protoc_insertion_point(destructor:MSG.ChatData_)
  SharedDtor();
}

void ChatData_::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ChatData_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatData_::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatData__descriptor_;
}

const ChatData_& ChatData_::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

ChatData_* ChatData_::default_instance_ = NULL;

ChatData_* ChatData_::New(::google::protobuf::Arena* arena) const {
  ChatData_* n = new ChatData_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatData_::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.ChatData_)
  if (_has_bits_[0 / 32] & 63u) {
    uid_ = GOOGLE_ULONGLONG(0);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_groupname()) {
      groupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_language()) {
      language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_chat()) {
      chat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    regdate_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ChatData_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.ChatData_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.ChatData_.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_groupName;
        break;
      }

      // required string groupName = 3;
      case 3: {
        if (tag == 26) {
         parse_groupName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->groupname().data(), this->groupname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.ChatData_.groupName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_language;
        break;
      }

      // required string language = 4;
      case 4: {
        if (tag == 34) {
         parse_language:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->language().data(), this->language().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.ChatData_.language");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_chat;
        break;
      }

      // required string chat = 5;
      case 5: {
        if (tag == 42) {
         parse_chat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat().data(), this->chat().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.ChatData_.chat");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_regDate;
        break;
      }

      // required uint64 regDate = 6;
      case 6: {
        if (tag == 48) {
         parse_regDate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &regdate_)));
          set_has_regdate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.ChatData_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.ChatData_)
  return false;
#undef DO_
}

void ChatData_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.ChatData_)
  // required uint64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.ChatData_.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required string groupName = 3;
  if (has_groupname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->groupname().data(), this->groupname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.ChatData_.groupName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->groupname(), output);
  }

  // required string language = 4;
  if (has_language()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), this->language().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.ChatData_.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->language(), output);
  }

  // required string chat = 5;
  if (has_chat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat().data(), this->chat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.ChatData_.chat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->chat(), output);
  }

  // required uint64 regDate = 6;
  if (has_regdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->regdate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.ChatData_)
}

::google::protobuf::uint8* ChatData_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.ChatData_)
  // required uint64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.ChatData_.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required string groupName = 3;
  if (has_groupname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->groupname().data(), this->groupname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.ChatData_.groupName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->groupname(), target);
  }

  // required string language = 4;
  if (has_language()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), this->language().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.ChatData_.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->language(), target);
  }

  // required string chat = 5;
  if (has_chat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat().data(), this->chat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.ChatData_.chat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->chat(), target);
  }

  // required uint64 regDate = 6;
  if (has_regdate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->regdate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.ChatData_)
  return target;
}

int ChatData_::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.ChatData_)
  int total_size = 0;

  if (has_uid()) {
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_groupname()) {
    // required string groupName = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->groupname());
  }

  if (has_language()) {
    // required string language = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language());
  }

  if (has_chat()) {
    // required string chat = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat());
  }

  if (has_regdate()) {
    // required uint64 regDate = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->regdate());
  }

  return total_size;
}
int ChatData_::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.ChatData_)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string groupName = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->groupname());

    // required string language = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language());

    // required string chat = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat());

    // required uint64 regDate = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->regdate());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatData_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.ChatData_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ChatData_* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatData_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.ChatData_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.ChatData_)
    MergeFrom(*source);
  }
}

void ChatData_::MergeFrom(const ChatData_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.ChatData_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_groupname()) {
      set_has_groupname();
      groupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupname_);
    }
    if (from.has_language()) {
      set_has_language();
      language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
    }
    if (from.has_chat()) {
      set_has_chat();
      chat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_);
    }
    if (from.has_regdate()) {
      set_regdate(from.regdate());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ChatData_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.ChatData_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatData_::CopyFrom(const ChatData_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.ChatData_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatData_::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void ChatData_::Swap(ChatData_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatData_::InternalSwap(ChatData_* other) {
  std::swap(uid_, other->uid_);
  name_.Swap(&other->name_);
  groupname_.Swap(&other->groupname_);
  language_.Swap(&other->language_);
  chat_.Swap(&other->chat_);
  std::swap(regdate_, other->regdate_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatData_::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChatData__descriptor_;
  metadata.reflection = ChatData__reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatData_

// required uint64 uid = 1;
bool ChatData_::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ChatData_::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void ChatData_::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void ChatData_::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
 ::google::protobuf::uint64 ChatData_::uid() const {
  // @@protoc_insertion_point(field_get:MSG.ChatData_.uid)
  return uid_;
}
 void ChatData_::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:MSG.ChatData_.uid)
}

// required string name = 2;
bool ChatData_::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ChatData_::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void ChatData_::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void ChatData_::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& ChatData_::name() const {
  // @@protoc_insertion_point(field_get:MSG.ChatData_.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatData_::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.ChatData_.name)
}
 void ChatData_::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.ChatData_.name)
}
 void ChatData_::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.ChatData_.name)
}
 ::std::string* ChatData_::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MSG.ChatData_.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ChatData_::release_name() {
  // @@protoc_insertion_point(field_release:MSG.ChatData_.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatData_::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.ChatData_.name)
}

// required string groupName = 3;
bool ChatData_::has_groupname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ChatData_::set_has_groupname() {
  _has_bits_[0] |= 0x00000004u;
}
void ChatData_::clear_has_groupname() {
  _has_bits_[0] &= ~0x00000004u;
}
void ChatData_::clear_groupname() {
  groupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupname();
}
 const ::std::string& ChatData_::groupname() const {
  // @@protoc_insertion_point(field_get:MSG.ChatData_.groupName)
  return groupname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatData_::set_groupname(const ::std::string& value) {
  set_has_groupname();
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.ChatData_.groupName)
}
 void ChatData_::set_groupname(const char* value) {
  set_has_groupname();
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.ChatData_.groupName)
}
 void ChatData_::set_groupname(const char* value, size_t size) {
  set_has_groupname();
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.ChatData_.groupName)
}
 ::std::string* ChatData_::mutable_groupname() {
  set_has_groupname();
  // @@protoc_insertion_point(field_mutable:MSG.ChatData_.groupName)
  return groupname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ChatData_::release_groupname() {
  // @@protoc_insertion_point(field_release:MSG.ChatData_.groupName)
  clear_has_groupname();
  return groupname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatData_::set_allocated_groupname(::std::string* groupname) {
  if (groupname != NULL) {
    set_has_groupname();
  } else {
    clear_has_groupname();
  }
  groupname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), groupname);
  // @@protoc_insertion_point(field_set_allocated:MSG.ChatData_.groupName)
}

// required string language = 4;
bool ChatData_::has_language() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ChatData_::set_has_language() {
  _has_bits_[0] |= 0x00000008u;
}
void ChatData_::clear_has_language() {
  _has_bits_[0] &= ~0x00000008u;
}
void ChatData_::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_language();
}
 const ::std::string& ChatData_::language() const {
  // @@protoc_insertion_point(field_get:MSG.ChatData_.language)
  return language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatData_::set_language(const ::std::string& value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.ChatData_.language)
}
 void ChatData_::set_language(const char* value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.ChatData_.language)
}
 void ChatData_::set_language(const char* value, size_t size) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.ChatData_.language)
}
 ::std::string* ChatData_::mutable_language() {
  set_has_language();
  // @@protoc_insertion_point(field_mutable:MSG.ChatData_.language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ChatData_::release_language() {
  // @@protoc_insertion_point(field_release:MSG.ChatData_.language)
  clear_has_language();
  return language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatData_::set_allocated_language(::std::string* language) {
  if (language != NULL) {
    set_has_language();
  } else {
    clear_has_language();
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:MSG.ChatData_.language)
}

// required string chat = 5;
bool ChatData_::has_chat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ChatData_::set_has_chat() {
  _has_bits_[0] |= 0x00000010u;
}
void ChatData_::clear_has_chat() {
  _has_bits_[0] &= ~0x00000010u;
}
void ChatData_::clear_chat() {
  chat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat();
}
 const ::std::string& ChatData_::chat() const {
  // @@protoc_insertion_point(field_get:MSG.ChatData_.chat)
  return chat_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatData_::set_chat(const ::std::string& value) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.ChatData_.chat)
}
 void ChatData_::set_chat(const char* value) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.ChatData_.chat)
}
 void ChatData_::set_chat(const char* value, size_t size) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.ChatData_.chat)
}
 ::std::string* ChatData_::mutable_chat() {
  set_has_chat();
  // @@protoc_insertion_point(field_mutable:MSG.ChatData_.chat)
  return chat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ChatData_::release_chat() {
  // @@protoc_insertion_point(field_release:MSG.ChatData_.chat)
  clear_has_chat();
  return chat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatData_::set_allocated_chat(::std::string* chat) {
  if (chat != NULL) {
    set_has_chat();
  } else {
    clear_has_chat();
  }
  chat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat);
  // @@protoc_insertion_point(field_set_allocated:MSG.ChatData_.chat)
}

// required uint64 regDate = 6;
bool ChatData_::has_regdate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ChatData_::set_has_regdate() {
  _has_bits_[0] |= 0x00000020u;
}
void ChatData_::clear_has_regdate() {
  _has_bits_[0] &= ~0x00000020u;
}
void ChatData_::clear_regdate() {
  regdate_ = GOOGLE_ULONGLONG(0);
  clear_has_regdate();
}
 ::google::protobuf::uint64 ChatData_::regdate() const {
  // @@protoc_insertion_point(field_get:MSG.ChatData_.regDate)
  return regdate_;
}
 void ChatData_::set_regdate(::google::protobuf::uint64 value) {
  set_has_regdate();
  regdate_ = value;
  // @@protoc_insertion_point(field_set:MSG.ChatData_.regDate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatRoom_::kRidFieldNumber;
const int ChatRoom_::kNameFieldNumber;
const int ChatRoom_::kChatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatRoom_::ChatRoom_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.ChatRoom_)
}

void ChatRoom_::InitAsDefaultInstance() {
}

ChatRoom_::ChatRoom_(const ChatRoom_& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.ChatRoom_)
}

void ChatRoom_::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChatRoom_::~ChatRoom_() {
  // @@protoc_insertion_point(destructor:MSG.ChatRoom_)
  SharedDtor();
}

void ChatRoom_::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ChatRoom_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatRoom_::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatRoom__descriptor_;
}

const ChatRoom_& ChatRoom_::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

ChatRoom_* ChatRoom_::default_instance_ = NULL;

ChatRoom_* ChatRoom_::New(::google::protobuf::Arena* arena) const {
  ChatRoom_* n = new ChatRoom_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatRoom_::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.ChatRoom_)
  if (_has_bits_[0 / 32] & 3u) {
    rid_ = GOOGLE_ULONGLONG(0);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  chats_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ChatRoom_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.ChatRoom_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));
          set_has_rid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.ChatRoom_.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_chats;
        break;
      }

      // repeated .MSG.ChatData_ chats = 3;
      case 3: {
        if (tag == 26) {
         parse_chats:
          DO_(input->IncrementRecursionDepth());
         parse_loop_chats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_chats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_chats;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.ChatRoom_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.ChatRoom_)
  return false;
#undef DO_
}

void ChatRoom_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.ChatRoom_)
  // required uint64 rid = 1;
  if (has_rid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.ChatRoom_.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .MSG.ChatData_ chats = 3;
  for (unsigned int i = 0, n = this->chats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->chats(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.ChatRoom_)
}

::google::protobuf::uint8* ChatRoom_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.ChatRoom_)
  // required uint64 rid = 1;
  if (has_rid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.ChatRoom_.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .MSG.ChatData_ chats = 3;
  for (unsigned int i = 0, n = this->chats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->chats(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.ChatRoom_)
  return target;
}

int ChatRoom_::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.ChatRoom_)
  int total_size = 0;

  if (has_rid()) {
    // required uint64 rid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
int ChatRoom_::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.ChatRoom_)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 rid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .MSG.ChatData_ chats = 3;
  total_size += 1 * this->chats_size();
  for (int i = 0; i < this->chats_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->chats(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatRoom_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.ChatRoom_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ChatRoom_* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatRoom_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.ChatRoom_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.ChatRoom_)
    MergeFrom(*source);
  }
}

void ChatRoom_::MergeFrom(const ChatRoom_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.ChatRoom_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  chats_.MergeFrom(from.chats_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rid()) {
      set_rid(from.rid());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ChatRoom_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.ChatRoom_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatRoom_::CopyFrom(const ChatRoom_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.ChatRoom_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatRoom_::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->chats())) return false;
  return true;
}

void ChatRoom_::Swap(ChatRoom_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatRoom_::InternalSwap(ChatRoom_* other) {
  std::swap(rid_, other->rid_);
  name_.Swap(&other->name_);
  chats_.UnsafeArenaSwap(&other->chats_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatRoom_::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChatRoom__descriptor_;
  metadata.reflection = ChatRoom__reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatRoom_

// required uint64 rid = 1;
bool ChatRoom_::has_rid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ChatRoom_::set_has_rid() {
  _has_bits_[0] |= 0x00000001u;
}
void ChatRoom_::clear_has_rid() {
  _has_bits_[0] &= ~0x00000001u;
}
void ChatRoom_::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
  clear_has_rid();
}
 ::google::protobuf::uint64 ChatRoom_::rid() const {
  // @@protoc_insertion_point(field_get:MSG.ChatRoom_.rid)
  return rid_;
}
 void ChatRoom_::set_rid(::google::protobuf::uint64 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:MSG.ChatRoom_.rid)
}

// required string name = 2;
bool ChatRoom_::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ChatRoom_::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void ChatRoom_::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void ChatRoom_::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& ChatRoom_::name() const {
  // @@protoc_insertion_point(field_get:MSG.ChatRoom_.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatRoom_::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.ChatRoom_.name)
}
 void ChatRoom_::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.ChatRoom_.name)
}
 void ChatRoom_::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.ChatRoom_.name)
}
 ::std::string* ChatRoom_::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MSG.ChatRoom_.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ChatRoom_::release_name() {
  // @@protoc_insertion_point(field_release:MSG.ChatRoom_.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatRoom_::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.ChatRoom_.name)
}

// repeated .MSG.ChatData_ chats = 3;
int ChatRoom_::chats_size() const {
  return chats_.size();
}
void ChatRoom_::clear_chats() {
  chats_.Clear();
}
const ::MSG::ChatData_& ChatRoom_::chats(int index) const {
  // @@protoc_insertion_point(field_get:MSG.ChatRoom_.chats)
  return chats_.Get(index);
}
::MSG::ChatData_* ChatRoom_::mutable_chats(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.ChatRoom_.chats)
  return chats_.Mutable(index);
}
::MSG::ChatData_* ChatRoom_::add_chats() {
  // @@protoc_insertion_point(field_add:MSG.ChatRoom_.chats)
  return chats_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::ChatData_ >*
ChatRoom_::mutable_chats() {
  // @@protoc_insertion_point(field_mutable_list:MSG.ChatRoom_.chats)
  return &chats_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::ChatData_ >&
ChatRoom_::chats() const {
  // @@protoc_insertion_point(field_list:MSG.ChatRoom_.chats)
  return chats_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatChannel_::kCidFieldNumber;
const int ChatChannel_::kNameFieldNumber;
const int ChatChannel_::kChatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatChannel_::ChatChannel_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.ChatChannel_)
}

void ChatChannel_::InitAsDefaultInstance() {
}

ChatChannel_::ChatChannel_(const ChatChannel_& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.ChatChannel_)
}

void ChatChannel_::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cid_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChatChannel_::~ChatChannel_() {
  // @@protoc_insertion_point(destructor:MSG.ChatChannel_)
  SharedDtor();
}

void ChatChannel_::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ChatChannel_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatChannel_::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatChannel__descriptor_;
}

const ChatChannel_& ChatChannel_::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

ChatChannel_* ChatChannel_::default_instance_ = NULL;

ChatChannel_* ChatChannel_::New(::google::protobuf::Arena* arena) const {
  ChatChannel_* n = new ChatChannel_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatChannel_::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.ChatChannel_)
  if (_has_bits_[0 / 32] & 3u) {
    cid_ = GOOGLE_ULONGLONG(0);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  chats_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ChatChannel_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.ChatChannel_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 cid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cid_)));
          set_has_cid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.ChatChannel_.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_chats;
        break;
      }

      // repeated .MSG.ChatData_ chats = 3;
      case 3: {
        if (tag == 26) {
         parse_chats:
          DO_(input->IncrementRecursionDepth());
         parse_loop_chats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_chats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_chats;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.ChatChannel_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.ChatChannel_)
  return false;
#undef DO_
}

void ChatChannel_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.ChatChannel_)
  // required uint64 cid = 1;
  if (has_cid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->cid(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.ChatChannel_.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .MSG.ChatData_ chats = 3;
  for (unsigned int i = 0, n = this->chats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->chats(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.ChatChannel_)
}

::google::protobuf::uint8* ChatChannel_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.ChatChannel_)
  // required uint64 cid = 1;
  if (has_cid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->cid(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.ChatChannel_.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .MSG.ChatData_ chats = 3;
  for (unsigned int i = 0, n = this->chats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->chats(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.ChatChannel_)
  return target;
}

int ChatChannel_::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.ChatChannel_)
  int total_size = 0;

  if (has_cid()) {
    // required uint64 cid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cid());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
int ChatChannel_::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.ChatChannel_)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 cid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cid());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .MSG.ChatData_ chats = 3;
  total_size += 1 * this->chats_size();
  for (int i = 0; i < this->chats_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->chats(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatChannel_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.ChatChannel_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ChatChannel_* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatChannel_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.ChatChannel_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.ChatChannel_)
    MergeFrom(*source);
  }
}

void ChatChannel_::MergeFrom(const ChatChannel_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.ChatChannel_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  chats_.MergeFrom(from.chats_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cid()) {
      set_cid(from.cid());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ChatChannel_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.ChatChannel_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatChannel_::CopyFrom(const ChatChannel_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.ChatChannel_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatChannel_::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->chats())) return false;
  return true;
}

void ChatChannel_::Swap(ChatChannel_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatChannel_::InternalSwap(ChatChannel_* other) {
  std::swap(cid_, other->cid_);
  name_.Swap(&other->name_);
  chats_.UnsafeArenaSwap(&other->chats_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatChannel_::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChatChannel__descriptor_;
  metadata.reflection = ChatChannel__reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatChannel_

// required uint64 cid = 1;
bool ChatChannel_::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ChatChannel_::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
void ChatChannel_::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
void ChatChannel_::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
 ::google::protobuf::uint64 ChatChannel_::cid() const {
  // @@protoc_insertion_point(field_get:MSG.ChatChannel_.cid)
  return cid_;
}
 void ChatChannel_::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:MSG.ChatChannel_.cid)
}

// required string name = 2;
bool ChatChannel_::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ChatChannel_::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void ChatChannel_::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void ChatChannel_::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& ChatChannel_::name() const {
  // @@protoc_insertion_point(field_get:MSG.ChatChannel_.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatChannel_::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.ChatChannel_.name)
}
 void ChatChannel_::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.ChatChannel_.name)
}
 void ChatChannel_::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.ChatChannel_.name)
}
 ::std::string* ChatChannel_::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MSG.ChatChannel_.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ChatChannel_::release_name() {
  // @@protoc_insertion_point(field_release:MSG.ChatChannel_.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatChannel_::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.ChatChannel_.name)
}

// repeated .MSG.ChatData_ chats = 3;
int ChatChannel_::chats_size() const {
  return chats_.size();
}
void ChatChannel_::clear_chats() {
  chats_.Clear();
}
const ::MSG::ChatData_& ChatChannel_::chats(int index) const {
  // @@protoc_insertion_point(field_get:MSG.ChatChannel_.chats)
  return chats_.Get(index);
}
::MSG::ChatData_* ChatChannel_::mutable_chats(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.ChatChannel_.chats)
  return chats_.Mutable(index);
}
::MSG::ChatData_* ChatChannel_::add_chats() {
  // @@protoc_insertion_point(field_add:MSG.ChatChannel_.chats)
  return chats_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::ChatData_ >*
ChatChannel_::mutable_chats() {
  // @@protoc_insertion_point(field_mutable_list:MSG.ChatChannel_.chats)
  return &chats_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::ChatData_ >&
ChatChannel_::chats() const {
  // @@protoc_insertion_point(field_list:MSG.ChatChannel_.chats)
  return chats_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CharData_::kCidFieldNumber;
const int CharData_::kUidFieldNumber;
const int CharData_::kSlotNoFieldNumber;
const int CharData_::kTypeNoFieldNumber;
const int CharData_::kLevelFieldNumber;
const int CharData_::kTierFieldNumber;
const int CharData_::kRegDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CharData_::CharData_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.CharData_)
}

void CharData_::InitAsDefaultInstance() {
}

CharData_::CharData_(const CharData_& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.CharData_)
}

void CharData_::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cid_ = GOOGLE_ULONGLONG(0);
  uid_ = GOOGLE_ULONGLONG(0);
  slotno_ = 0u;
  typeno_ = 0u;
  level_ = 0u;
  tier_ = 0u;
  regdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CharData_::~CharData_() {
  // @@protoc_insertion_point(destructor:MSG.CharData_)
  SharedDtor();
}

void CharData_::SharedDtor() {
  regdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CharData_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CharData_::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CharData__descriptor_;
}

const CharData_& CharData_::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

CharData_* CharData_::default_instance_ = NULL;

CharData_* CharData_::New(::google::protobuf::Arena* arena) const {
  CharData_* n = new CharData_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CharData_::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.CharData_)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CharData_, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CharData_*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(cid_, tier_);
    if (has_regdate()) {
      regdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CharData_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.CharData_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 cid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cid_)));
          set_has_cid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uid;
        break;
      }

      // required uint64 uid = 2;
      case 2: {
        if (tag == 16) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_slotNo;
        break;
      }

      // optional uint32 slotNo = 3;
      case 3: {
        if (tag == 24) {
         parse_slotNo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slotno_)));
          set_has_slotno();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_typeNo;
        break;
      }

      // optional uint32 typeNo = 4;
      case 4: {
        if (tag == 32) {
         parse_typeNo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &typeno_)));
          set_has_typeno();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_level;
        break;
      }

      // optional uint32 level = 5;
      case 5: {
        if (tag == 40) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_tier;
        break;
      }

      // optional uint32 tier = 6;
      case 6: {
        if (tag == 48) {
         parse_tier:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tier_)));
          set_has_tier();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_regDate;
        break;
      }

      // optional string regDate = 7;
      case 7: {
        if (tag == 58) {
         parse_regDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->regdate().data(), this->regdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.CharData_.regDate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.CharData_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.CharData_)
  return false;
#undef DO_
}

void CharData_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.CharData_)
  // required uint64 cid = 1;
  if (has_cid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->cid(), output);
  }

  // required uint64 uid = 2;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->uid(), output);
  }

  // optional uint32 slotNo = 3;
  if (has_slotno()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->slotno(), output);
  }

  // optional uint32 typeNo = 4;
  if (has_typeno()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->typeno(), output);
  }

  // optional uint32 level = 5;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->level(), output);
  }

  // optional uint32 tier = 6;
  if (has_tier()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->tier(), output);
  }

  // optional string regDate = 7;
  if (has_regdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regdate().data(), this->regdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.CharData_.regDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->regdate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.CharData_)
}

::google::protobuf::uint8* CharData_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.CharData_)
  // required uint64 cid = 1;
  if (has_cid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->cid(), target);
  }

  // required uint64 uid = 2;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->uid(), target);
  }

  // optional uint32 slotNo = 3;
  if (has_slotno()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->slotno(), target);
  }

  // optional uint32 typeNo = 4;
  if (has_typeno()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->typeno(), target);
  }

  // optional uint32 level = 5;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->level(), target);
  }

  // optional uint32 tier = 6;
  if (has_tier()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->tier(), target);
  }

  // optional string regDate = 7;
  if (has_regdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regdate().data(), this->regdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.CharData_.regDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->regdate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.CharData_)
  return target;
}

int CharData_::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.CharData_)
  int total_size = 0;

  if (has_cid()) {
    // required uint64 cid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cid());
  }

  if (has_uid()) {
    // required uint64 uid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  return total_size;
}
int CharData_::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.CharData_)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 cid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cid());

    // required uint64 uid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 124u) {
    // optional uint32 slotNo = 3;
    if (has_slotno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slotno());
    }

    // optional uint32 typeNo = 4;
    if (has_typeno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->typeno());
    }

    // optional uint32 level = 5;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional uint32 tier = 6;
    if (has_tier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tier());
    }

    // optional string regDate = 7;
    if (has_regdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->regdate());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CharData_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.CharData_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CharData_* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CharData_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.CharData_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.CharData_)
    MergeFrom(*source);
  }
}

void CharData_::MergeFrom(const CharData_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.CharData_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cid()) {
      set_cid(from.cid());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_slotno()) {
      set_slotno(from.slotno());
    }
    if (from.has_typeno()) {
      set_typeno(from.typeno());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_tier()) {
      set_tier(from.tier());
    }
    if (from.has_regdate()) {
      set_has_regdate();
      regdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regdate_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CharData_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.CharData_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharData_::CopyFrom(const CharData_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.CharData_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharData_::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CharData_::Swap(CharData_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CharData_::InternalSwap(CharData_* other) {
  std::swap(cid_, other->cid_);
  std::swap(uid_, other->uid_);
  std::swap(slotno_, other->slotno_);
  std::swap(typeno_, other->typeno_);
  std::swap(level_, other->level_);
  std::swap(tier_, other->tier_);
  regdate_.Swap(&other->regdate_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CharData_::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CharData__descriptor_;
  metadata.reflection = CharData__reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CharData_

// required uint64 cid = 1;
bool CharData_::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CharData_::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
void CharData_::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CharData_::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
 ::google::protobuf::uint64 CharData_::cid() const {
  // @@protoc_insertion_point(field_get:MSG.CharData_.cid)
  return cid_;
}
 void CharData_::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:MSG.CharData_.cid)
}

// required uint64 uid = 2;
bool CharData_::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CharData_::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
void CharData_::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CharData_::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
 ::google::protobuf::uint64 CharData_::uid() const {
  // @@protoc_insertion_point(field_get:MSG.CharData_.uid)
  return uid_;
}
 void CharData_::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:MSG.CharData_.uid)
}

// optional uint32 slotNo = 3;
bool CharData_::has_slotno() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CharData_::set_has_slotno() {
  _has_bits_[0] |= 0x00000004u;
}
void CharData_::clear_has_slotno() {
  _has_bits_[0] &= ~0x00000004u;
}
void CharData_::clear_slotno() {
  slotno_ = 0u;
  clear_has_slotno();
}
 ::google::protobuf::uint32 CharData_::slotno() const {
  // @@protoc_insertion_point(field_get:MSG.CharData_.slotNo)
  return slotno_;
}
 void CharData_::set_slotno(::google::protobuf::uint32 value) {
  set_has_slotno();
  slotno_ = value;
  // @@protoc_insertion_point(field_set:MSG.CharData_.slotNo)
}

// optional uint32 typeNo = 4;
bool CharData_::has_typeno() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CharData_::set_has_typeno() {
  _has_bits_[0] |= 0x00000008u;
}
void CharData_::clear_has_typeno() {
  _has_bits_[0] &= ~0x00000008u;
}
void CharData_::clear_typeno() {
  typeno_ = 0u;
  clear_has_typeno();
}
 ::google::protobuf::uint32 CharData_::typeno() const {
  // @@protoc_insertion_point(field_get:MSG.CharData_.typeNo)
  return typeno_;
}
 void CharData_::set_typeno(::google::protobuf::uint32 value) {
  set_has_typeno();
  typeno_ = value;
  // @@protoc_insertion_point(field_set:MSG.CharData_.typeNo)
}

// optional uint32 level = 5;
bool CharData_::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CharData_::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
void CharData_::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
void CharData_::clear_level() {
  level_ = 0u;
  clear_has_level();
}
 ::google::protobuf::uint32 CharData_::level() const {
  // @@protoc_insertion_point(field_get:MSG.CharData_.level)
  return level_;
}
 void CharData_::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:MSG.CharData_.level)
}

// optional uint32 tier = 6;
bool CharData_::has_tier() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CharData_::set_has_tier() {
  _has_bits_[0] |= 0x00000020u;
}
void CharData_::clear_has_tier() {
  _has_bits_[0] &= ~0x00000020u;
}
void CharData_::clear_tier() {
  tier_ = 0u;
  clear_has_tier();
}
 ::google::protobuf::uint32 CharData_::tier() const {
  // @@protoc_insertion_point(field_get:MSG.CharData_.tier)
  return tier_;
}
 void CharData_::set_tier(::google::protobuf::uint32 value) {
  set_has_tier();
  tier_ = value;
  // @@protoc_insertion_point(field_set:MSG.CharData_.tier)
}

// optional string regDate = 7;
bool CharData_::has_regdate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CharData_::set_has_regdate() {
  _has_bits_[0] |= 0x00000040u;
}
void CharData_::clear_has_regdate() {
  _has_bits_[0] &= ~0x00000040u;
}
void CharData_::clear_regdate() {
  regdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_regdate();
}
 const ::std::string& CharData_::regdate() const {
  // @@protoc_insertion_point(field_get:MSG.CharData_.regDate)
  return regdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CharData_::set_regdate(const ::std::string& value) {
  set_has_regdate();
  regdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.CharData_.regDate)
}
 void CharData_::set_regdate(const char* value) {
  set_has_regdate();
  regdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.CharData_.regDate)
}
 void CharData_::set_regdate(const char* value, size_t size) {
  set_has_regdate();
  regdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.CharData_.regDate)
}
 ::std::string* CharData_::mutable_regdate() {
  set_has_regdate();
  // @@protoc_insertion_point(field_mutable:MSG.CharData_.regDate)
  return regdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CharData_::release_regdate() {
  // @@protoc_insertion_point(field_release:MSG.CharData_.regDate)
  clear_has_regdate();
  return regdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CharData_::set_allocated_regdate(::std::string* regdate) {
  if (regdate != NULL) {
    set_has_regdate();
  } else {
    clear_has_regdate();
  }
  regdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regdate);
  // @@protoc_insertion_point(field_set_allocated:MSG.CharData_.regDate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DungeonData_::kNoFieldNumber;
const int DungeonData_::kTierFieldNumber;
const int DungeonData_::kMonstersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DungeonData_::DungeonData_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.DungeonData_)
}

void DungeonData_::InitAsDefaultInstance() {
}

DungeonData_::DungeonData_(const DungeonData_& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.DungeonData_)
}

void DungeonData_::SharedCtor() {
  _cached_size_ = 0;
  no_ = 0u;
  tier_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DungeonData_::~DungeonData_() {
  // @@protoc_insertion_point(destructor:MSG.DungeonData_)
  SharedDtor();
}

void DungeonData_::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DungeonData_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DungeonData_::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DungeonData__descriptor_;
}

const DungeonData_& DungeonData_::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

DungeonData_* DungeonData_::default_instance_ = NULL;

DungeonData_* DungeonData_::New(::google::protobuf::Arena* arena) const {
  DungeonData_* n = new DungeonData_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DungeonData_::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.DungeonData_)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DungeonData_, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DungeonData_*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(no_, tier_);

#undef ZR_HELPER_
#undef ZR_

  monsters_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DungeonData_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.DungeonData_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 no = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &no_)));
          set_has_no();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_tier;
        break;
      }

      // required uint32 tier = 2;
      case 2: {
        if (tag == 16) {
         parse_tier:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tier_)));
          set_has_tier();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_monsters;
        break;
      }

      // repeated .MSG.CharData_ monsters = 3;
      case 3: {
        if (tag == 26) {
         parse_monsters:
          DO_(input->IncrementRecursionDepth());
         parse_loop_monsters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_monsters()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_monsters;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.DungeonData_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.DungeonData_)
  return false;
#undef DO_
}

void DungeonData_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.DungeonData_)
  // required uint32 no = 1;
  if (has_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->no(), output);
  }

  // required uint32 tier = 2;
  if (has_tier()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->tier(), output);
  }

  // repeated .MSG.CharData_ monsters = 3;
  for (unsigned int i = 0, n = this->monsters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->monsters(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.DungeonData_)
}

::google::protobuf::uint8* DungeonData_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.DungeonData_)
  // required uint32 no = 1;
  if (has_no()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->no(), target);
  }

  // required uint32 tier = 2;
  if (has_tier()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->tier(), target);
  }

  // repeated .MSG.CharData_ monsters = 3;
  for (unsigned int i = 0, n = this->monsters_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->monsters(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.DungeonData_)
  return target;
}

int DungeonData_::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.DungeonData_)
  int total_size = 0;

  if (has_no()) {
    // required uint32 no = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->no());
  }

  if (has_tier()) {
    // required uint32 tier = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tier());
  }

  return total_size;
}
int DungeonData_::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.DungeonData_)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 no = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->no());

    // required uint32 tier = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tier());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .MSG.CharData_ monsters = 3;
  total_size += 1 * this->monsters_size();
  for (int i = 0; i < this->monsters_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->monsters(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DungeonData_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.DungeonData_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DungeonData_* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DungeonData_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.DungeonData_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.DungeonData_)
    MergeFrom(*source);
  }
}

void DungeonData_::MergeFrom(const DungeonData_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.DungeonData_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  monsters_.MergeFrom(from.monsters_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_no()) {
      set_no(from.no());
    }
    if (from.has_tier()) {
      set_tier(from.tier());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DungeonData_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.DungeonData_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DungeonData_::CopyFrom(const DungeonData_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.DungeonData_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonData_::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->monsters())) return false;
  return true;
}

void DungeonData_::Swap(DungeonData_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DungeonData_::InternalSwap(DungeonData_* other) {
  std::swap(no_, other->no_);
  std::swap(tier_, other->tier_);
  monsters_.UnsafeArenaSwap(&other->monsters_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DungeonData_::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DungeonData__descriptor_;
  metadata.reflection = DungeonData__reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DungeonData_

// required uint32 no = 1;
bool DungeonData_::has_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DungeonData_::set_has_no() {
  _has_bits_[0] |= 0x00000001u;
}
void DungeonData_::clear_has_no() {
  _has_bits_[0] &= ~0x00000001u;
}
void DungeonData_::clear_no() {
  no_ = 0u;
  clear_has_no();
}
 ::google::protobuf::uint32 DungeonData_::no() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonData_.no)
  return no_;
}
 void DungeonData_::set_no(::google::protobuf::uint32 value) {
  set_has_no();
  no_ = value;
  // @@protoc_insertion_point(field_set:MSG.DungeonData_.no)
}

// required uint32 tier = 2;
bool DungeonData_::has_tier() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DungeonData_::set_has_tier() {
  _has_bits_[0] |= 0x00000002u;
}
void DungeonData_::clear_has_tier() {
  _has_bits_[0] &= ~0x00000002u;
}
void DungeonData_::clear_tier() {
  tier_ = 0u;
  clear_has_tier();
}
 ::google::protobuf::uint32 DungeonData_::tier() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonData_.tier)
  return tier_;
}
 void DungeonData_::set_tier(::google::protobuf::uint32 value) {
  set_has_tier();
  tier_ = value;
  // @@protoc_insertion_point(field_set:MSG.DungeonData_.tier)
}

// repeated .MSG.CharData_ monsters = 3;
int DungeonData_::monsters_size() const {
  return monsters_.size();
}
void DungeonData_::clear_monsters() {
  monsters_.Clear();
}
const ::MSG::CharData_& DungeonData_::monsters(int index) const {
  // @@protoc_insertion_point(field_get:MSG.DungeonData_.monsters)
  return monsters_.Get(index);
}
::MSG::CharData_* DungeonData_::mutable_monsters(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.DungeonData_.monsters)
  return monsters_.Mutable(index);
}
::MSG::CharData_* DungeonData_::add_monsters() {
  // @@protoc_insertion_point(field_add:MSG.DungeonData_.monsters)
  return monsters_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::CharData_ >*
DungeonData_::mutable_monsters() {
  // @@protoc_insertion_point(field_mutable_list:MSG.DungeonData_.monsters)
  return &monsters_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::CharData_ >&
DungeonData_::monsters() const {
  // @@protoc_insertion_point(field_list:MSG.DungeonData_.monsters)
  return monsters_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* BattleData__AttackResult_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BattleData__AttackResult_descriptor_;
}
bool BattleData__AttackResult_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BattleData__AttackResult BattleData_::ALIVE;
const BattleData__AttackResult BattleData_::DEAD;
const BattleData__AttackResult BattleData_::AttackResult_MIN;
const BattleData__AttackResult BattleData_::AttackResult_MAX;
const int BattleData_::AttackResult_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BattleData__Team_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BattleData__Team_descriptor_;
}
bool BattleData__Team_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BattleData__Team BattleData_::ALLY;
const BattleData__Team BattleData_::ENEMY;
const BattleData__Team BattleData_::Team_MIN;
const BattleData__Team BattleData_::Team_MAX;
const int BattleData_::Team_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BattleData__Attack::kNoFieldNumber;
const int BattleData__Attack::kDamageFieldNumber;
const int BattleData__Attack::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BattleData__Attack::BattleData__Attack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.BattleData_.Attack)
}

void BattleData__Attack::InitAsDefaultInstance() {
}

BattleData__Attack::BattleData__Attack(const BattleData__Attack& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.BattleData_.Attack)
}

void BattleData__Attack::SharedCtor() {
  _cached_size_ = 0;
  no_ = 0u;
  damage_ = 0u;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BattleData__Attack::~BattleData__Attack() {
  // @@protoc_insertion_point(destructor:MSG.BattleData_.Attack)
  SharedDtor();
}

void BattleData__Attack::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BattleData__Attack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BattleData__Attack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BattleData__Attack_descriptor_;
}

const BattleData__Attack& BattleData__Attack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

BattleData__Attack* BattleData__Attack::default_instance_ = NULL;

BattleData__Attack* BattleData__Attack::New(::google::protobuf::Arena* arena) const {
  BattleData__Attack* n = new BattleData__Attack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BattleData__Attack::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.BattleData_.Attack)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BattleData__Attack, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BattleData__Attack*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(no_, result_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BattleData__Attack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.BattleData_.Attack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 no = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &no_)));
          set_has_no();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_damage;
        break;
      }

      // required uint32 damage = 2;
      case 2: {
        if (tag == 16) {
         parse_damage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &damage_)));
          set_has_damage();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_result;
        break;
      }

      // required .MSG.BattleData_.AttackResult result = 3;
      case 3: {
        if (tag == 24) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MSG::BattleData__AttackResult_IsValid(value)) {
            set_result(static_cast< ::MSG::BattleData__AttackResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.BattleData_.Attack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.BattleData_.Attack)
  return false;
#undef DO_
}

void BattleData__Attack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.BattleData_.Attack)
  // required uint32 no = 1;
  if (has_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->no(), output);
  }

  // required uint32 damage = 2;
  if (has_damage()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->damage(), output);
  }

  // required .MSG.BattleData_.AttackResult result = 3;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.BattleData_.Attack)
}

::google::protobuf::uint8* BattleData__Attack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.BattleData_.Attack)
  // required uint32 no = 1;
  if (has_no()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->no(), target);
  }

  // required uint32 damage = 2;
  if (has_damage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->damage(), target);
  }

  // required .MSG.BattleData_.AttackResult result = 3;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.BattleData_.Attack)
  return target;
}

int BattleData__Attack::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.BattleData_.Attack)
  int total_size = 0;

  if (has_no()) {
    // required uint32 no = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->no());
  }

  if (has_damage()) {
    // required uint32 damage = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->damage());
  }

  if (has_result()) {
    // required .MSG.BattleData_.AttackResult result = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  return total_size;
}
int BattleData__Attack::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.BattleData_.Attack)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 no = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->no());

    // required uint32 damage = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->damage());

    // required .MSG.BattleData_.AttackResult result = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BattleData__Attack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.BattleData_.Attack)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BattleData__Attack* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BattleData__Attack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.BattleData_.Attack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.BattleData_.Attack)
    MergeFrom(*source);
  }
}

void BattleData__Attack::MergeFrom(const BattleData__Attack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.BattleData_.Attack)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_no()) {
      set_no(from.no());
    }
    if (from.has_damage()) {
      set_damage(from.damage());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BattleData__Attack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.BattleData_.Attack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleData__Attack::CopyFrom(const BattleData__Attack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.BattleData_.Attack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleData__Attack::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void BattleData__Attack::Swap(BattleData__Attack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BattleData__Attack::InternalSwap(BattleData__Attack* other) {
  std::swap(no_, other->no_);
  std::swap(damage_, other->damage_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BattleData__Attack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BattleData__Attack_descriptor_;
  metadata.reflection = BattleData__Attack_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BattleData_::kSrcNoFieldNumber;
const int BattleData_::kTargetsFieldNumber;
const int BattleData_::kTeamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BattleData_::BattleData_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.BattleData_)
}

void BattleData_::InitAsDefaultInstance() {
}

BattleData_::BattleData_(const BattleData_& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.BattleData_)
}

void BattleData_::SharedCtor() {
  _cached_size_ = 0;
  srcno_ = 0u;
  team_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BattleData_::~BattleData_() {
  // @@protoc_insertion_point(destructor:MSG.BattleData_)
  SharedDtor();
}

void BattleData_::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BattleData_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BattleData_::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BattleData__descriptor_;
}

const BattleData_& BattleData_::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

BattleData_* BattleData_::default_instance_ = NULL;

BattleData_* BattleData_::New(::google::protobuf::Arena* arena) const {
  BattleData_* n = new BattleData_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BattleData_::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.BattleData_)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BattleData_, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BattleData_*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(srcno_, team_);

#undef ZR_HELPER_
#undef ZR_

  targets_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BattleData_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.BattleData_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 srcNo = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &srcno_)));
          set_has_srcno();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_targets;
        break;
      }

      // repeated .MSG.BattleData_.Attack targets = 2;
      case 2: {
        if (tag == 18) {
         parse_targets:
          DO_(input->IncrementRecursionDepth());
         parse_loop_targets:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_targets()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_targets;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_team;
        break;
      }

      // required .MSG.BattleData_.Team team = 3;
      case 3: {
        if (tag == 24) {
         parse_team:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MSG::BattleData__Team_IsValid(value)) {
            set_team(static_cast< ::MSG::BattleData__Team >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.BattleData_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.BattleData_)
  return false;
#undef DO_
}

void BattleData_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.BattleData_)
  // required uint32 srcNo = 1;
  if (has_srcno()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->srcno(), output);
  }

  // repeated .MSG.BattleData_.Attack targets = 2;
  for (unsigned int i = 0, n = this->targets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->targets(i), output);
  }

  // required .MSG.BattleData_.Team team = 3;
  if (has_team()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->team(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.BattleData_)
}

::google::protobuf::uint8* BattleData_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.BattleData_)
  // required uint32 srcNo = 1;
  if (has_srcno()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->srcno(), target);
  }

  // repeated .MSG.BattleData_.Attack targets = 2;
  for (unsigned int i = 0, n = this->targets_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->targets(i), false, target);
  }

  // required .MSG.BattleData_.Team team = 3;
  if (has_team()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->team(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.BattleData_)
  return target;
}

int BattleData_::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.BattleData_)
  int total_size = 0;

  if (has_srcno()) {
    // required uint32 srcNo = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->srcno());
  }

  if (has_team()) {
    // required .MSG.BattleData_.Team team = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->team());
  }

  return total_size;
}
int BattleData_::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.BattleData_)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required uint32 srcNo = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->srcno());

    // required .MSG.BattleData_.Team team = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->team());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .MSG.BattleData_.Attack targets = 2;
  total_size += 1 * this->targets_size();
  for (int i = 0; i < this->targets_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->targets(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BattleData_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.BattleData_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BattleData_* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BattleData_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.BattleData_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.BattleData_)
    MergeFrom(*source);
  }
}

void BattleData_::MergeFrom(const BattleData_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.BattleData_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  targets_.MergeFrom(from.targets_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_srcno()) {
      set_srcno(from.srcno());
    }
    if (from.has_team()) {
      set_team(from.team());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BattleData_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.BattleData_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleData_::CopyFrom(const BattleData_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.BattleData_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleData_::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->targets())) return false;
  return true;
}

void BattleData_::Swap(BattleData_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BattleData_::InternalSwap(BattleData_* other) {
  std::swap(srcno_, other->srcno_);
  targets_.UnsafeArenaSwap(&other->targets_);
  std::swap(team_, other->team_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BattleData_::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BattleData__descriptor_;
  metadata.reflection = BattleData__reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BattleData__Attack

// required uint32 no = 1;
bool BattleData__Attack::has_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BattleData__Attack::set_has_no() {
  _has_bits_[0] |= 0x00000001u;
}
void BattleData__Attack::clear_has_no() {
  _has_bits_[0] &= ~0x00000001u;
}
void BattleData__Attack::clear_no() {
  no_ = 0u;
  clear_has_no();
}
 ::google::protobuf::uint32 BattleData__Attack::no() const {
  // @@protoc_insertion_point(field_get:MSG.BattleData_.Attack.no)
  return no_;
}
 void BattleData__Attack::set_no(::google::protobuf::uint32 value) {
  set_has_no();
  no_ = value;
  // @@protoc_insertion_point(field_set:MSG.BattleData_.Attack.no)
}

// required uint32 damage = 2;
bool BattleData__Attack::has_damage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BattleData__Attack::set_has_damage() {
  _has_bits_[0] |= 0x00000002u;
}
void BattleData__Attack::clear_has_damage() {
  _has_bits_[0] &= ~0x00000002u;
}
void BattleData__Attack::clear_damage() {
  damage_ = 0u;
  clear_has_damage();
}
 ::google::protobuf::uint32 BattleData__Attack::damage() const {
  // @@protoc_insertion_point(field_get:MSG.BattleData_.Attack.damage)
  return damage_;
}
 void BattleData__Attack::set_damage(::google::protobuf::uint32 value) {
  set_has_damage();
  damage_ = value;
  // @@protoc_insertion_point(field_set:MSG.BattleData_.Attack.damage)
}

// required .MSG.BattleData_.AttackResult result = 3;
bool BattleData__Attack::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BattleData__Attack::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
void BattleData__Attack::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void BattleData__Attack::clear_result() {
  result_ = 0;
  clear_has_result();
}
 ::MSG::BattleData__AttackResult BattleData__Attack::result() const {
  // @@protoc_insertion_point(field_get:MSG.BattleData_.Attack.result)
  return static_cast< ::MSG::BattleData__AttackResult >(result_);
}
 void BattleData__Attack::set_result(::MSG::BattleData__AttackResult value) {
  assert(::MSG::BattleData__AttackResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:MSG.BattleData_.Attack.result)
}

// -------------------------------------------------------------------

// BattleData_

// required uint32 srcNo = 1;
bool BattleData_::has_srcno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BattleData_::set_has_srcno() {
  _has_bits_[0] |= 0x00000001u;
}
void BattleData_::clear_has_srcno() {
  _has_bits_[0] &= ~0x00000001u;
}
void BattleData_::clear_srcno() {
  srcno_ = 0u;
  clear_has_srcno();
}
 ::google::protobuf::uint32 BattleData_::srcno() const {
  // @@protoc_insertion_point(field_get:MSG.BattleData_.srcNo)
  return srcno_;
}
 void BattleData_::set_srcno(::google::protobuf::uint32 value) {
  set_has_srcno();
  srcno_ = value;
  // @@protoc_insertion_point(field_set:MSG.BattleData_.srcNo)
}

// repeated .MSG.BattleData_.Attack targets = 2;
int BattleData_::targets_size() const {
  return targets_.size();
}
void BattleData_::clear_targets() {
  targets_.Clear();
}
const ::MSG::BattleData__Attack& BattleData_::targets(int index) const {
  // @@protoc_insertion_point(field_get:MSG.BattleData_.targets)
  return targets_.Get(index);
}
::MSG::BattleData__Attack* BattleData_::mutable_targets(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.BattleData_.targets)
  return targets_.Mutable(index);
}
::MSG::BattleData__Attack* BattleData_::add_targets() {
  // @@protoc_insertion_point(field_add:MSG.BattleData_.targets)
  return targets_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::BattleData__Attack >*
BattleData_::mutable_targets() {
  // @@protoc_insertion_point(field_mutable_list:MSG.BattleData_.targets)
  return &targets_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::BattleData__Attack >&
BattleData_::targets() const {
  // @@protoc_insertion_point(field_list:MSG.BattleData_.targets)
  return targets_;
}

// required .MSG.BattleData_.Team team = 3;
bool BattleData_::has_team() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BattleData_::set_has_team() {
  _has_bits_[0] |= 0x00000004u;
}
void BattleData_::clear_has_team() {
  _has_bits_[0] &= ~0x00000004u;
}
void BattleData_::clear_team() {
  team_ = 0;
  clear_has_team();
}
 ::MSG::BattleData__Team BattleData_::team() const {
  // @@protoc_insertion_point(field_get:MSG.BattleData_.team)
  return static_cast< ::MSG::BattleData__Team >(team_);
}
 void BattleData_::set_team(::MSG::BattleData__Team value) {
  assert(::MSG::BattleData__Team_IsValid(value));
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:MSG.BattleData_.team)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DungeonPlayData_::kLidFieldNumber;
const int DungeonPlayData_::kUidFieldNumber;
const int DungeonPlayData_::kBattlesFieldNumber;
const int DungeonPlayData_::kCharsFieldNumber;
const int DungeonPlayData_::kMobsFieldNumber;
const int DungeonPlayData_::kRegDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DungeonPlayData_::DungeonPlayData_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.DungeonPlayData_)
}

void DungeonPlayData_::InitAsDefaultInstance() {
}

DungeonPlayData_::DungeonPlayData_(const DungeonPlayData_& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.DungeonPlayData_)
}

void DungeonPlayData_::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  lid_ = GOOGLE_ULONGLONG(0);
  uid_ = GOOGLE_ULONGLONG(0);
  regdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DungeonPlayData_::~DungeonPlayData_() {
  // @@protoc_insertion_point(destructor:MSG.DungeonPlayData_)
  SharedDtor();
}

void DungeonPlayData_::SharedDtor() {
  regdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DungeonPlayData_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DungeonPlayData_::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DungeonPlayData__descriptor_;
}

const DungeonPlayData_& DungeonPlayData_::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

DungeonPlayData_* DungeonPlayData_::default_instance_ = NULL;

DungeonPlayData_* DungeonPlayData_::New(::google::protobuf::Arena* arena) const {
  DungeonPlayData_* n = new DungeonPlayData_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DungeonPlayData_::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.DungeonPlayData_)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DungeonPlayData_, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DungeonPlayData_*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 35u) {
    ZR_(lid_, uid_);
    if (has_regdate()) {
      regdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  battles_.Clear();
  chars_.Clear();
  mobs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DungeonPlayData_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.DungeonPlayData_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 lid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lid_)));
          set_has_lid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uid;
        break;
      }

      // required uint64 uid = 2;
      case 2: {
        if (tag == 16) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_battles;
        break;
      }

      // repeated .MSG.BattleData_ battles = 3;
      case 3: {
        if (tag == 26) {
         parse_battles:
          DO_(input->IncrementRecursionDepth());
         parse_loop_battles:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_battles()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_battles;
        if (input->ExpectTag(34)) goto parse_loop_chars;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .MSG.CharData_ chars = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_chars:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_chars()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_chars;
        if (input->ExpectTag(42)) goto parse_loop_mobs;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .MSG.CharData_ mobs = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_mobs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_mobs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_mobs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(50)) goto parse_regDate;
        break;
      }

      // required string regDate = 6;
      case 6: {
        if (tag == 50) {
         parse_regDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->regdate().data(), this->regdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.DungeonPlayData_.regDate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.DungeonPlayData_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.DungeonPlayData_)
  return false;
#undef DO_
}

void DungeonPlayData_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.DungeonPlayData_)
  // required uint64 lid = 1;
  if (has_lid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->lid(), output);
  }

  // required uint64 uid = 2;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->uid(), output);
  }

  // repeated .MSG.BattleData_ battles = 3;
  for (unsigned int i = 0, n = this->battles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->battles(i), output);
  }

  // repeated .MSG.CharData_ chars = 4;
  for (unsigned int i = 0, n = this->chars_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->chars(i), output);
  }

  // repeated .MSG.CharData_ mobs = 5;
  for (unsigned int i = 0, n = this->mobs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->mobs(i), output);
  }

  // required string regDate = 6;
  if (has_regdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regdate().data(), this->regdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.DungeonPlayData_.regDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->regdate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.DungeonPlayData_)
}

::google::protobuf::uint8* DungeonPlayData_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.DungeonPlayData_)
  // required uint64 lid = 1;
  if (has_lid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->lid(), target);
  }

  // required uint64 uid = 2;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->uid(), target);
  }

  // repeated .MSG.BattleData_ battles = 3;
  for (unsigned int i = 0, n = this->battles_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->battles(i), false, target);
  }

  // repeated .MSG.CharData_ chars = 4;
  for (unsigned int i = 0, n = this->chars_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->chars(i), false, target);
  }

  // repeated .MSG.CharData_ mobs = 5;
  for (unsigned int i = 0, n = this->mobs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->mobs(i), false, target);
  }

  // required string regDate = 6;
  if (has_regdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regdate().data(), this->regdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.DungeonPlayData_.regDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->regdate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.DungeonPlayData_)
  return target;
}

int DungeonPlayData_::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.DungeonPlayData_)
  int total_size = 0;

  if (has_lid()) {
    // required uint64 lid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lid());
  }

  if (has_uid()) {
    // required uint64 uid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  if (has_regdate()) {
    // required string regDate = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->regdate());
  }

  return total_size;
}
int DungeonPlayData_::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.DungeonPlayData_)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000023) ^ 0x00000023) == 0) {  // All required fields are present.
    // required uint64 lid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lid());

    // required uint64 uid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());

    // required string regDate = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->regdate());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .MSG.BattleData_ battles = 3;
  total_size += 1 * this->battles_size();
  for (int i = 0; i < this->battles_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->battles(i));
  }

  // repeated .MSG.CharData_ chars = 4;
  total_size += 1 * this->chars_size();
  for (int i = 0; i < this->chars_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->chars(i));
  }

  // repeated .MSG.CharData_ mobs = 5;
  total_size += 1 * this->mobs_size();
  for (int i = 0; i < this->mobs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mobs(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DungeonPlayData_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.DungeonPlayData_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DungeonPlayData_* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DungeonPlayData_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.DungeonPlayData_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.DungeonPlayData_)
    MergeFrom(*source);
  }
}

void DungeonPlayData_::MergeFrom(const DungeonPlayData_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.DungeonPlayData_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  battles_.MergeFrom(from.battles_);
  chars_.MergeFrom(from.chars_);
  mobs_.MergeFrom(from.mobs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lid()) {
      set_lid(from.lid());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_regdate()) {
      set_has_regdate();
      regdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regdate_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DungeonPlayData_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.DungeonPlayData_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DungeonPlayData_::CopyFrom(const DungeonPlayData_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.DungeonPlayData_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonPlayData_::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000023) != 0x00000023) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->battles())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->chars())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->mobs())) return false;
  return true;
}

void DungeonPlayData_::Swap(DungeonPlayData_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DungeonPlayData_::InternalSwap(DungeonPlayData_* other) {
  std::swap(lid_, other->lid_);
  std::swap(uid_, other->uid_);
  battles_.UnsafeArenaSwap(&other->battles_);
  chars_.UnsafeArenaSwap(&other->chars_);
  mobs_.UnsafeArenaSwap(&other->mobs_);
  regdate_.Swap(&other->regdate_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DungeonPlayData_::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DungeonPlayData__descriptor_;
  metadata.reflection = DungeonPlayData__reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DungeonPlayData_

// required uint64 lid = 1;
bool DungeonPlayData_::has_lid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DungeonPlayData_::set_has_lid() {
  _has_bits_[0] |= 0x00000001u;
}
void DungeonPlayData_::clear_has_lid() {
  _has_bits_[0] &= ~0x00000001u;
}
void DungeonPlayData_::clear_lid() {
  lid_ = GOOGLE_ULONGLONG(0);
  clear_has_lid();
}
 ::google::protobuf::uint64 DungeonPlayData_::lid() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonPlayData_.lid)
  return lid_;
}
 void DungeonPlayData_::set_lid(::google::protobuf::uint64 value) {
  set_has_lid();
  lid_ = value;
  // @@protoc_insertion_point(field_set:MSG.DungeonPlayData_.lid)
}

// required uint64 uid = 2;
bool DungeonPlayData_::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DungeonPlayData_::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
void DungeonPlayData_::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
void DungeonPlayData_::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
 ::google::protobuf::uint64 DungeonPlayData_::uid() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonPlayData_.uid)
  return uid_;
}
 void DungeonPlayData_::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:MSG.DungeonPlayData_.uid)
}

// repeated .MSG.BattleData_ battles = 3;
int DungeonPlayData_::battles_size() const {
  return battles_.size();
}
void DungeonPlayData_::clear_battles() {
  battles_.Clear();
}
const ::MSG::BattleData_& DungeonPlayData_::battles(int index) const {
  // @@protoc_insertion_point(field_get:MSG.DungeonPlayData_.battles)
  return battles_.Get(index);
}
::MSG::BattleData_* DungeonPlayData_::mutable_battles(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.DungeonPlayData_.battles)
  return battles_.Mutable(index);
}
::MSG::BattleData_* DungeonPlayData_::add_battles() {
  // @@protoc_insertion_point(field_add:MSG.DungeonPlayData_.battles)
  return battles_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::BattleData_ >*
DungeonPlayData_::mutable_battles() {
  // @@protoc_insertion_point(field_mutable_list:MSG.DungeonPlayData_.battles)
  return &battles_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::BattleData_ >&
DungeonPlayData_::battles() const {
  // @@protoc_insertion_point(field_list:MSG.DungeonPlayData_.battles)
  return battles_;
}

// repeated .MSG.CharData_ chars = 4;
int DungeonPlayData_::chars_size() const {
  return chars_.size();
}
void DungeonPlayData_::clear_chars() {
  chars_.Clear();
}
const ::MSG::CharData_& DungeonPlayData_::chars(int index) const {
  // @@protoc_insertion_point(field_get:MSG.DungeonPlayData_.chars)
  return chars_.Get(index);
}
::MSG::CharData_* DungeonPlayData_::mutable_chars(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.DungeonPlayData_.chars)
  return chars_.Mutable(index);
}
::MSG::CharData_* DungeonPlayData_::add_chars() {
  // @@protoc_insertion_point(field_add:MSG.DungeonPlayData_.chars)
  return chars_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::CharData_ >*
DungeonPlayData_::mutable_chars() {
  // @@protoc_insertion_point(field_mutable_list:MSG.DungeonPlayData_.chars)
  return &chars_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::CharData_ >&
DungeonPlayData_::chars() const {
  // @@protoc_insertion_point(field_list:MSG.DungeonPlayData_.chars)
  return chars_;
}

// repeated .MSG.CharData_ mobs = 5;
int DungeonPlayData_::mobs_size() const {
  return mobs_.size();
}
void DungeonPlayData_::clear_mobs() {
  mobs_.Clear();
}
const ::MSG::CharData_& DungeonPlayData_::mobs(int index) const {
  // @@protoc_insertion_point(field_get:MSG.DungeonPlayData_.mobs)
  return mobs_.Get(index);
}
::MSG::CharData_* DungeonPlayData_::mutable_mobs(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.DungeonPlayData_.mobs)
  return mobs_.Mutable(index);
}
::MSG::CharData_* DungeonPlayData_::add_mobs() {
  // @@protoc_insertion_point(field_add:MSG.DungeonPlayData_.mobs)
  return mobs_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::CharData_ >*
DungeonPlayData_::mutable_mobs() {
  // @@protoc_insertion_point(field_mutable_list:MSG.DungeonPlayData_.mobs)
  return &mobs_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::CharData_ >&
DungeonPlayData_::mobs() const {
  // @@protoc_insertion_point(field_list:MSG.DungeonPlayData_.mobs)
  return mobs_;
}

// required string regDate = 6;
bool DungeonPlayData_::has_regdate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void DungeonPlayData_::set_has_regdate() {
  _has_bits_[0] |= 0x00000020u;
}
void DungeonPlayData_::clear_has_regdate() {
  _has_bits_[0] &= ~0x00000020u;
}
void DungeonPlayData_::clear_regdate() {
  regdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_regdate();
}
 const ::std::string& DungeonPlayData_::regdate() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonPlayData_.regDate)
  return regdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DungeonPlayData_::set_regdate(const ::std::string& value) {
  set_has_regdate();
  regdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.DungeonPlayData_.regDate)
}
 void DungeonPlayData_::set_regdate(const char* value) {
  set_has_regdate();
  regdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.DungeonPlayData_.regDate)
}
 void DungeonPlayData_::set_regdate(const char* value, size_t size) {
  set_has_regdate();
  regdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.DungeonPlayData_.regDate)
}
 ::std::string* DungeonPlayData_::mutable_regdate() {
  set_has_regdate();
  // @@protoc_insertion_point(field_mutable:MSG.DungeonPlayData_.regDate)
  return regdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DungeonPlayData_::release_regdate() {
  // @@protoc_insertion_point(field_release:MSG.DungeonPlayData_.regDate)
  clear_has_regdate();
  return regdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DungeonPlayData_::set_allocated_regdate(::std::string* regdate) {
  if (regdate != NULL) {
    set_has_regdate();
  } else {
    clear_has_regdate();
  }
  regdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regdate);
  // @@protoc_insertion_point(field_set_allocated:MSG.DungeonPlayData_.regDate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace MSG

// @@protoc_insertion_point(global_scope)
