// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SimTable.proto

#ifndef PROTOBUF_SimTable_2eproto__INCLUDED
#define PROTOBUF_SimTable_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace MSG {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_SimTable_2eproto();
void protobuf_AssignDesc_SimTable_2eproto();
void protobuf_ShutdownFile_SimTable_2eproto();

class ArcherStat;
class ArcherStat_ArcherStatTable;
class Char;
class CharTier;
class CharTier_CharTierTable;
class Char_CharacterTable;
class Dungeon;
class DungeonTier;
class DungeonTier_DungeonTierTable;
class Dungeon_DungeonTable;
class Item;
class Item_ItemTable;
class MobAStat;
class MobAStat_MobAStatTable;
class MobBStat;
class MobBStat_MobBStatTable;
class MobCStat;
class MobCStat_MobCStatTable;
class Product;
class Product_ProductTable;
class WarriorStat;
class WarriorStat_WarriorStatTable;

// ===================================================================

class Char_CharacterTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.Char.CharacterTable) */ {
 public:
  Char_CharacterTable();
  virtual ~Char_CharacterTable();

  Char_CharacterTable(const Char_CharacterTable& from);

  inline Char_CharacterTable& operator=(const Char_CharacterTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Char_CharacterTable& default_instance();

  void Swap(Char_CharacterTable* other);

  // implements Message ----------------------------------------------

  inline Char_CharacterTable* New() const { return New(NULL); }

  Char_CharacterTable* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Char_CharacterTable& from);
  void MergeFrom(const Char_CharacterTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Char_CharacterTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 No = 1;
  void clear_no();
  static const int kNoFieldNumber = 1;
  ::google::protobuf::uint32 no() const;
  void set_no(::google::protobuf::uint32 value);

  // optional string Name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 AttackRange = 3;
  void clear_attackrange();
  static const int kAttackRangeFieldNumber = 3;
  ::google::protobuf::uint32 attackrange() const;
  void set_attackrange(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MSG.Char.CharacterTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 no_;
  ::google::protobuf::uint32 attackrange_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static Char_CharacterTable* default_instance_;
};
// -------------------------------------------------------------------

class Char : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.Char) */ {
 public:
  Char();
  virtual ~Char();

  Char(const Char& from);

  inline Char& operator=(const Char& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Char& default_instance();

  void Swap(Char* other);

  // implements Message ----------------------------------------------

  inline Char* New() const { return New(NULL); }

  Char* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Char& from);
  void MergeFrom(const Char& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Char* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Char_CharacterTable CharacterTable;

  // accessors -------------------------------------------------------

  // optional string TableName = 1;
  void clear_tablename();
  static const int kTableNameFieldNumber = 1;
  const ::std::string& tablename() const;
  void set_tablename(const ::std::string& value);
  void set_tablename(const char* value);
  void set_tablename(const char* value, size_t size);
  ::std::string* mutable_tablename();
  ::std::string* release_tablename();
  void set_allocated_tablename(::std::string* tablename);

  // repeated .MSG.Char.CharacterTable Data = 2;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::MSG::Char_CharacterTable& data(int index) const;
  ::MSG::Char_CharacterTable* mutable_data(int index);
  ::MSG::Char_CharacterTable* add_data();
  ::google::protobuf::RepeatedPtrField< ::MSG::Char_CharacterTable >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::MSG::Char_CharacterTable >&
      data() const;

  // @@protoc_insertion_point(class_scope:MSG.Char)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr tablename_;
  ::google::protobuf::RepeatedPtrField< ::MSG::Char_CharacterTable > data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static Char* default_instance_;
};
// -------------------------------------------------------------------

class Product_ProductTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.Product.ProductTable) */ {
 public:
  Product_ProductTable();
  virtual ~Product_ProductTable();

  Product_ProductTable(const Product_ProductTable& from);

  inline Product_ProductTable& operator=(const Product_ProductTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Product_ProductTable& default_instance();

  void Swap(Product_ProductTable* other);

  // implements Message ----------------------------------------------

  inline Product_ProductTable* New() const { return New(NULL); }

  Product_ProductTable* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Product_ProductTable& from);
  void MergeFrom(const Product_ProductTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Product_ProductTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 No = 1;
  void clear_no();
  static const int kNoFieldNumber = 1;
  ::google::protobuf::uint32 no() const;
  void set_no(::google::protobuf::uint32 value);

  // optional string ProductCode = 2;
  void clear_productcode();
  static const int kProductCodeFieldNumber = 2;
  const ::std::string& productcode() const;
  void set_productcode(const ::std::string& value);
  void set_productcode(const char* value);
  void set_productcode(const char* value, size_t size);
  ::std::string* mutable_productcode();
  ::std::string* release_productcode();
  void set_allocated_productcode(::std::string* productcode);

  // optional uint32 CharNo = 3;
  void clear_charno();
  static const int kCharNoFieldNumber = 3;
  ::google::protobuf::uint32 charno() const;
  void set_charno(::google::protobuf::uint32 value);

  // optional string VCType = 4;
  void clear_vctype();
  static const int kVCTypeFieldNumber = 4;
  const ::std::string& vctype() const;
  void set_vctype(const ::std::string& value);
  void set_vctype(const char* value);
  void set_vctype(const char* value, size_t size);
  ::std::string* mutable_vctype();
  ::std::string* release_vctype();
  void set_allocated_vctype(::std::string* vctype);

  // optional uint32 Value = 5;
  void clear_value();
  static const int kValueFieldNumber = 5;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MSG.Product.ProductTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr productcode_;
  ::google::protobuf::uint32 no_;
  ::google::protobuf::uint32 charno_;
  ::google::protobuf::internal::ArenaStringPtr vctype_;
  ::google::protobuf::uint32 value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static Product_ProductTable* default_instance_;
};
// -------------------------------------------------------------------

class Product : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.Product) */ {
 public:
  Product();
  virtual ~Product();

  Product(const Product& from);

  inline Product& operator=(const Product& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Product& default_instance();

  void Swap(Product* other);

  // implements Message ----------------------------------------------

  inline Product* New() const { return New(NULL); }

  Product* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Product& from);
  void MergeFrom(const Product& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Product* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Product_ProductTable ProductTable;

  // accessors -------------------------------------------------------

  // optional string TableName = 1;
  void clear_tablename();
  static const int kTableNameFieldNumber = 1;
  const ::std::string& tablename() const;
  void set_tablename(const ::std::string& value);
  void set_tablename(const char* value);
  void set_tablename(const char* value, size_t size);
  ::std::string* mutable_tablename();
  ::std::string* release_tablename();
  void set_allocated_tablename(::std::string* tablename);

  // repeated .MSG.Product.ProductTable Data = 2;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::MSG::Product_ProductTable& data(int index) const;
  ::MSG::Product_ProductTable* mutable_data(int index);
  ::MSG::Product_ProductTable* add_data();
  ::google::protobuf::RepeatedPtrField< ::MSG::Product_ProductTable >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::MSG::Product_ProductTable >&
      data() const;

  // @@protoc_insertion_point(class_scope:MSG.Product)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr tablename_;
  ::google::protobuf::RepeatedPtrField< ::MSG::Product_ProductTable > data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static Product* default_instance_;
};
// -------------------------------------------------------------------

class WarriorStat_WarriorStatTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.WarriorStat.WarriorStatTable) */ {
 public:
  WarriorStat_WarriorStatTable();
  virtual ~WarriorStat_WarriorStatTable();

  WarriorStat_WarriorStatTable(const WarriorStat_WarriorStatTable& from);

  inline WarriorStat_WarriorStatTable& operator=(const WarriorStat_WarriorStatTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WarriorStat_WarriorStatTable& default_instance();

  void Swap(WarriorStat_WarriorStatTable* other);

  // implements Message ----------------------------------------------

  inline WarriorStat_WarriorStatTable* New() const { return New(NULL); }

  WarriorStat_WarriorStatTable* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WarriorStat_WarriorStatTable& from);
  void MergeFrom(const WarriorStat_WarriorStatTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WarriorStat_WarriorStatTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 Exp = 2;
  void clear_exp();
  static const int kExpFieldNumber = 2;
  ::google::protobuf::uint32 exp() const;
  void set_exp(::google::protobuf::uint32 value);

  // optional uint32 Atk = 3;
  void clear_atk();
  static const int kAtkFieldNumber = 3;
  ::google::protobuf::uint32 atk() const;
  void set_atk(::google::protobuf::uint32 value);

  // optional uint32 Def = 4;
  void clear_def();
  static const int kDefFieldNumber = 4;
  ::google::protobuf::uint32 def() const;
  void set_def(::google::protobuf::uint32 value);

  // optional uint32 Hp = 5;
  void clear_hp();
  static const int kHpFieldNumber = 5;
  ::google::protobuf::uint32 hp() const;
  void set_hp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MSG.WarriorStat.WarriorStatTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 atk_;
  ::google::protobuf::uint32 def_;
  ::google::protobuf::uint32 hp_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static WarriorStat_WarriorStatTable* default_instance_;
};
// -------------------------------------------------------------------

class WarriorStat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.WarriorStat) */ {
 public:
  WarriorStat();
  virtual ~WarriorStat();

  WarriorStat(const WarriorStat& from);

  inline WarriorStat& operator=(const WarriorStat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WarriorStat& default_instance();

  void Swap(WarriorStat* other);

  // implements Message ----------------------------------------------

  inline WarriorStat* New() const { return New(NULL); }

  WarriorStat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WarriorStat& from);
  void MergeFrom(const WarriorStat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WarriorStat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef WarriorStat_WarriorStatTable WarriorStatTable;

  // accessors -------------------------------------------------------

  // optional string TableName = 1;
  void clear_tablename();
  static const int kTableNameFieldNumber = 1;
  const ::std::string& tablename() const;
  void set_tablename(const ::std::string& value);
  void set_tablename(const char* value);
  void set_tablename(const char* value, size_t size);
  ::std::string* mutable_tablename();
  ::std::string* release_tablename();
  void set_allocated_tablename(::std::string* tablename);

  // repeated .MSG.WarriorStat.WarriorStatTable Data = 2;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::MSG::WarriorStat_WarriorStatTable& data(int index) const;
  ::MSG::WarriorStat_WarriorStatTable* mutable_data(int index);
  ::MSG::WarriorStat_WarriorStatTable* add_data();
  ::google::protobuf::RepeatedPtrField< ::MSG::WarriorStat_WarriorStatTable >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::MSG::WarriorStat_WarriorStatTable >&
      data() const;

  // @@protoc_insertion_point(class_scope:MSG.WarriorStat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr tablename_;
  ::google::protobuf::RepeatedPtrField< ::MSG::WarriorStat_WarriorStatTable > data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static WarriorStat* default_instance_;
};
// -------------------------------------------------------------------

class ArcherStat_ArcherStatTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.ArcherStat.ArcherStatTable) */ {
 public:
  ArcherStat_ArcherStatTable();
  virtual ~ArcherStat_ArcherStatTable();

  ArcherStat_ArcherStatTable(const ArcherStat_ArcherStatTable& from);

  inline ArcherStat_ArcherStatTable& operator=(const ArcherStat_ArcherStatTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArcherStat_ArcherStatTable& default_instance();

  void Swap(ArcherStat_ArcherStatTable* other);

  // implements Message ----------------------------------------------

  inline ArcherStat_ArcherStatTable* New() const { return New(NULL); }

  ArcherStat_ArcherStatTable* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArcherStat_ArcherStatTable& from);
  void MergeFrom(const ArcherStat_ArcherStatTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ArcherStat_ArcherStatTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 Exp = 2;
  void clear_exp();
  static const int kExpFieldNumber = 2;
  ::google::protobuf::uint32 exp() const;
  void set_exp(::google::protobuf::uint32 value);

  // optional uint32 Atk = 3;
  void clear_atk();
  static const int kAtkFieldNumber = 3;
  ::google::protobuf::uint32 atk() const;
  void set_atk(::google::protobuf::uint32 value);

  // optional uint32 Def = 4;
  void clear_def();
  static const int kDefFieldNumber = 4;
  ::google::protobuf::uint32 def() const;
  void set_def(::google::protobuf::uint32 value);

  // optional uint32 Hp = 5;
  void clear_hp();
  static const int kHpFieldNumber = 5;
  ::google::protobuf::uint32 hp() const;
  void set_hp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MSG.ArcherStat.ArcherStatTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 atk_;
  ::google::protobuf::uint32 def_;
  ::google::protobuf::uint32 hp_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static ArcherStat_ArcherStatTable* default_instance_;
};
// -------------------------------------------------------------------

class ArcherStat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.ArcherStat) */ {
 public:
  ArcherStat();
  virtual ~ArcherStat();

  ArcherStat(const ArcherStat& from);

  inline ArcherStat& operator=(const ArcherStat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArcherStat& default_instance();

  void Swap(ArcherStat* other);

  // implements Message ----------------------------------------------

  inline ArcherStat* New() const { return New(NULL); }

  ArcherStat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArcherStat& from);
  void MergeFrom(const ArcherStat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ArcherStat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ArcherStat_ArcherStatTable ArcherStatTable;

  // accessors -------------------------------------------------------

  // optional string TableName = 1;
  void clear_tablename();
  static const int kTableNameFieldNumber = 1;
  const ::std::string& tablename() const;
  void set_tablename(const ::std::string& value);
  void set_tablename(const char* value);
  void set_tablename(const char* value, size_t size);
  ::std::string* mutable_tablename();
  ::std::string* release_tablename();
  void set_allocated_tablename(::std::string* tablename);

  // repeated .MSG.ArcherStat.ArcherStatTable Data = 2;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::MSG::ArcherStat_ArcherStatTable& data(int index) const;
  ::MSG::ArcherStat_ArcherStatTable* mutable_data(int index);
  ::MSG::ArcherStat_ArcherStatTable* add_data();
  ::google::protobuf::RepeatedPtrField< ::MSG::ArcherStat_ArcherStatTable >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::MSG::ArcherStat_ArcherStatTable >&
      data() const;

  // @@protoc_insertion_point(class_scope:MSG.ArcherStat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr tablename_;
  ::google::protobuf::RepeatedPtrField< ::MSG::ArcherStat_ArcherStatTable > data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static ArcherStat* default_instance_;
};
// -------------------------------------------------------------------

class CharTier_CharTierTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.CharTier.CharTierTable) */ {
 public:
  CharTier_CharTierTable();
  virtual ~CharTier_CharTierTable();

  CharTier_CharTierTable(const CharTier_CharTierTable& from);

  inline CharTier_CharTierTable& operator=(const CharTier_CharTierTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharTier_CharTierTable& default_instance();

  void Swap(CharTier_CharTierTable* other);

  // implements Message ----------------------------------------------

  inline CharTier_CharTierTable* New() const { return New(NULL); }

  CharTier_CharTierTable* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharTier_CharTierTable& from);
  void MergeFrom(const CharTier_CharTierTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CharTier_CharTierTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Tier = 1;
  void clear_tier();
  static const int kTierFieldNumber = 1;
  ::google::protobuf::uint32 tier() const;
  void set_tier(::google::protobuf::uint32 value);

  // optional string Buff1Type = 2;
  void clear_buff1type();
  static const int kBuff1TypeFieldNumber = 2;
  const ::std::string& buff1type() const;
  void set_buff1type(const ::std::string& value);
  void set_buff1type(const char* value);
  void set_buff1type(const char* value, size_t size);
  ::std::string* mutable_buff1type();
  ::std::string* release_buff1type();
  void set_allocated_buff1type(::std::string* buff1type);

  // optional string Buff1Value = 3;
  void clear_buff1value();
  static const int kBuff1ValueFieldNumber = 3;
  const ::std::string& buff1value() const;
  void set_buff1value(const ::std::string& value);
  void set_buff1value(const char* value);
  void set_buff1value(const char* value, size_t size);
  ::std::string* mutable_buff1value();
  ::std::string* release_buff1value();
  void set_allocated_buff1value(::std::string* buff1value);

  // optional string Buff2Type = 4;
  void clear_buff2type();
  static const int kBuff2TypeFieldNumber = 4;
  const ::std::string& buff2type() const;
  void set_buff2type(const ::std::string& value);
  void set_buff2type(const char* value);
  void set_buff2type(const char* value, size_t size);
  ::std::string* mutable_buff2type();
  ::std::string* release_buff2type();
  void set_allocated_buff2type(::std::string* buff2type);

  // optional string Buff2Value = 5;
  void clear_buff2value();
  static const int kBuff2ValueFieldNumber = 5;
  const ::std::string& buff2value() const;
  void set_buff2value(const ::std::string& value);
  void set_buff2value(const char* value);
  void set_buff2value(const char* value, size_t size);
  ::std::string* mutable_buff2value();
  ::std::string* release_buff2value();
  void set_allocated_buff2value(::std::string* buff2value);

  // optional string Buff3Type = 6;
  void clear_buff3type();
  static const int kBuff3TypeFieldNumber = 6;
  const ::std::string& buff3type() const;
  void set_buff3type(const ::std::string& value);
  void set_buff3type(const char* value);
  void set_buff3type(const char* value, size_t size);
  ::std::string* mutable_buff3type();
  ::std::string* release_buff3type();
  void set_allocated_buff3type(::std::string* buff3type);

  // optional string Buff3Value = 7;
  void clear_buff3value();
  static const int kBuff3ValueFieldNumber = 7;
  const ::std::string& buff3value() const;
  void set_buff3value(const ::std::string& value);
  void set_buff3value(const char* value);
  void set_buff3value(const char* value, size_t size);
  ::std::string* mutable_buff3value();
  ::std::string* release_buff3value();
  void set_allocated_buff3value(::std::string* buff3value);

  // @@protoc_insertion_point(class_scope:MSG.CharTier.CharTierTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr buff1type_;
  ::google::protobuf::internal::ArenaStringPtr buff1value_;
  ::google::protobuf::internal::ArenaStringPtr buff2type_;
  ::google::protobuf::internal::ArenaStringPtr buff2value_;
  ::google::protobuf::internal::ArenaStringPtr buff3type_;
  ::google::protobuf::internal::ArenaStringPtr buff3value_;
  ::google::protobuf::uint32 tier_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static CharTier_CharTierTable* default_instance_;
};
// -------------------------------------------------------------------

class CharTier : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.CharTier) */ {
 public:
  CharTier();
  virtual ~CharTier();

  CharTier(const CharTier& from);

  inline CharTier& operator=(const CharTier& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharTier& default_instance();

  void Swap(CharTier* other);

  // implements Message ----------------------------------------------

  inline CharTier* New() const { return New(NULL); }

  CharTier* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharTier& from);
  void MergeFrom(const CharTier& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CharTier* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CharTier_CharTierTable CharTierTable;

  // accessors -------------------------------------------------------

  // optional string TableName = 1;
  void clear_tablename();
  static const int kTableNameFieldNumber = 1;
  const ::std::string& tablename() const;
  void set_tablename(const ::std::string& value);
  void set_tablename(const char* value);
  void set_tablename(const char* value, size_t size);
  ::std::string* mutable_tablename();
  ::std::string* release_tablename();
  void set_allocated_tablename(::std::string* tablename);

  // repeated .MSG.CharTier.CharTierTable Data = 2;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::MSG::CharTier_CharTierTable& data(int index) const;
  ::MSG::CharTier_CharTierTable* mutable_data(int index);
  ::MSG::CharTier_CharTierTable* add_data();
  ::google::protobuf::RepeatedPtrField< ::MSG::CharTier_CharTierTable >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::MSG::CharTier_CharTierTable >&
      data() const;

  // @@protoc_insertion_point(class_scope:MSG.CharTier)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr tablename_;
  ::google::protobuf::RepeatedPtrField< ::MSG::CharTier_CharTierTable > data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static CharTier* default_instance_;
};
// -------------------------------------------------------------------

class DungeonTier_DungeonTierTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.DungeonTier.DungeonTierTable) */ {
 public:
  DungeonTier_DungeonTierTable();
  virtual ~DungeonTier_DungeonTierTable();

  DungeonTier_DungeonTierTable(const DungeonTier_DungeonTierTable& from);

  inline DungeonTier_DungeonTierTable& operator=(const DungeonTier_DungeonTierTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DungeonTier_DungeonTierTable& default_instance();

  void Swap(DungeonTier_DungeonTierTable* other);

  // implements Message ----------------------------------------------

  inline DungeonTier_DungeonTierTable* New() const { return New(NULL); }

  DungeonTier_DungeonTierTable* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DungeonTier_DungeonTierTable& from);
  void MergeFrom(const DungeonTier_DungeonTierTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DungeonTier_DungeonTierTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Tier = 1;
  void clear_tier();
  static const int kTierFieldNumber = 1;
  ::google::protobuf::uint32 tier() const;
  void set_tier(::google::protobuf::uint32 value);

  // optional string Buff1Type = 2;
  void clear_buff1type();
  static const int kBuff1TypeFieldNumber = 2;
  const ::std::string& buff1type() const;
  void set_buff1type(const ::std::string& value);
  void set_buff1type(const char* value);
  void set_buff1type(const char* value, size_t size);
  ::std::string* mutable_buff1type();
  ::std::string* release_buff1type();
  void set_allocated_buff1type(::std::string* buff1type);

  // optional string Buff1Value = 3;
  void clear_buff1value();
  static const int kBuff1ValueFieldNumber = 3;
  const ::std::string& buff1value() const;
  void set_buff1value(const ::std::string& value);
  void set_buff1value(const char* value);
  void set_buff1value(const char* value, size_t size);
  ::std::string* mutable_buff1value();
  ::std::string* release_buff1value();
  void set_allocated_buff1value(::std::string* buff1value);

  // optional string Buff2Type = 4;
  void clear_buff2type();
  static const int kBuff2TypeFieldNumber = 4;
  const ::std::string& buff2type() const;
  void set_buff2type(const ::std::string& value);
  void set_buff2type(const char* value);
  void set_buff2type(const char* value, size_t size);
  ::std::string* mutable_buff2type();
  ::std::string* release_buff2type();
  void set_allocated_buff2type(::std::string* buff2type);

  // optional string Buff2Value = 5;
  void clear_buff2value();
  static const int kBuff2ValueFieldNumber = 5;
  const ::std::string& buff2value() const;
  void set_buff2value(const ::std::string& value);
  void set_buff2value(const char* value);
  void set_buff2value(const char* value, size_t size);
  ::std::string* mutable_buff2value();
  ::std::string* release_buff2value();
  void set_allocated_buff2value(::std::string* buff2value);

  // optional string Buff3Type = 6;
  void clear_buff3type();
  static const int kBuff3TypeFieldNumber = 6;
  const ::std::string& buff3type() const;
  void set_buff3type(const ::std::string& value);
  void set_buff3type(const char* value);
  void set_buff3type(const char* value, size_t size);
  ::std::string* mutable_buff3type();
  ::std::string* release_buff3type();
  void set_allocated_buff3type(::std::string* buff3type);

  // optional string Buff3Value = 7;
  void clear_buff3value();
  static const int kBuff3ValueFieldNumber = 7;
  const ::std::string& buff3value() const;
  void set_buff3value(const ::std::string& value);
  void set_buff3value(const char* value);
  void set_buff3value(const char* value, size_t size);
  ::std::string* mutable_buff3value();
  ::std::string* release_buff3value();
  void set_allocated_buff3value(::std::string* buff3value);

  // @@protoc_insertion_point(class_scope:MSG.DungeonTier.DungeonTierTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr buff1type_;
  ::google::protobuf::internal::ArenaStringPtr buff1value_;
  ::google::protobuf::internal::ArenaStringPtr buff2type_;
  ::google::protobuf::internal::ArenaStringPtr buff2value_;
  ::google::protobuf::internal::ArenaStringPtr buff3type_;
  ::google::protobuf::internal::ArenaStringPtr buff3value_;
  ::google::protobuf::uint32 tier_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static DungeonTier_DungeonTierTable* default_instance_;
};
// -------------------------------------------------------------------

class DungeonTier : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.DungeonTier) */ {
 public:
  DungeonTier();
  virtual ~DungeonTier();

  DungeonTier(const DungeonTier& from);

  inline DungeonTier& operator=(const DungeonTier& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DungeonTier& default_instance();

  void Swap(DungeonTier* other);

  // implements Message ----------------------------------------------

  inline DungeonTier* New() const { return New(NULL); }

  DungeonTier* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DungeonTier& from);
  void MergeFrom(const DungeonTier& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DungeonTier* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DungeonTier_DungeonTierTable DungeonTierTable;

  // accessors -------------------------------------------------------

  // optional string TableName = 1;
  void clear_tablename();
  static const int kTableNameFieldNumber = 1;
  const ::std::string& tablename() const;
  void set_tablename(const ::std::string& value);
  void set_tablename(const char* value);
  void set_tablename(const char* value, size_t size);
  ::std::string* mutable_tablename();
  ::std::string* release_tablename();
  void set_allocated_tablename(::std::string* tablename);

  // repeated .MSG.DungeonTier.DungeonTierTable Data = 2;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::MSG::DungeonTier_DungeonTierTable& data(int index) const;
  ::MSG::DungeonTier_DungeonTierTable* mutable_data(int index);
  ::MSG::DungeonTier_DungeonTierTable* add_data();
  ::google::protobuf::RepeatedPtrField< ::MSG::DungeonTier_DungeonTierTable >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::MSG::DungeonTier_DungeonTierTable >&
      data() const;

  // @@protoc_insertion_point(class_scope:MSG.DungeonTier)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr tablename_;
  ::google::protobuf::RepeatedPtrField< ::MSG::DungeonTier_DungeonTierTable > data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static DungeonTier* default_instance_;
};
// -------------------------------------------------------------------

class MobAStat_MobAStatTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.MobAStat.MobAStatTable) */ {
 public:
  MobAStat_MobAStatTable();
  virtual ~MobAStat_MobAStatTable();

  MobAStat_MobAStatTable(const MobAStat_MobAStatTable& from);

  inline MobAStat_MobAStatTable& operator=(const MobAStat_MobAStatTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MobAStat_MobAStatTable& default_instance();

  void Swap(MobAStat_MobAStatTable* other);

  // implements Message ----------------------------------------------

  inline MobAStat_MobAStatTable* New() const { return New(NULL); }

  MobAStat_MobAStatTable* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MobAStat_MobAStatTable& from);
  void MergeFrom(const MobAStat_MobAStatTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MobAStat_MobAStatTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 Exp = 2;
  void clear_exp();
  static const int kExpFieldNumber = 2;
  ::google::protobuf::uint32 exp() const;
  void set_exp(::google::protobuf::uint32 value);

  // optional uint32 Atk = 3;
  void clear_atk();
  static const int kAtkFieldNumber = 3;
  ::google::protobuf::uint32 atk() const;
  void set_atk(::google::protobuf::uint32 value);

  // optional uint32 Def = 4;
  void clear_def();
  static const int kDefFieldNumber = 4;
  ::google::protobuf::uint32 def() const;
  void set_def(::google::protobuf::uint32 value);

  // optional uint32 Hp = 5;
  void clear_hp();
  static const int kHpFieldNumber = 5;
  ::google::protobuf::uint32 hp() const;
  void set_hp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MSG.MobAStat.MobAStatTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 atk_;
  ::google::protobuf::uint32 def_;
  ::google::protobuf::uint32 hp_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static MobAStat_MobAStatTable* default_instance_;
};
// -------------------------------------------------------------------

class MobAStat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.MobAStat) */ {
 public:
  MobAStat();
  virtual ~MobAStat();

  MobAStat(const MobAStat& from);

  inline MobAStat& operator=(const MobAStat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MobAStat& default_instance();

  void Swap(MobAStat* other);

  // implements Message ----------------------------------------------

  inline MobAStat* New() const { return New(NULL); }

  MobAStat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MobAStat& from);
  void MergeFrom(const MobAStat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MobAStat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MobAStat_MobAStatTable MobAStatTable;

  // accessors -------------------------------------------------------

  // optional string TableName = 1;
  void clear_tablename();
  static const int kTableNameFieldNumber = 1;
  const ::std::string& tablename() const;
  void set_tablename(const ::std::string& value);
  void set_tablename(const char* value);
  void set_tablename(const char* value, size_t size);
  ::std::string* mutable_tablename();
  ::std::string* release_tablename();
  void set_allocated_tablename(::std::string* tablename);

  // repeated .MSG.MobAStat.MobAStatTable Data = 2;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::MSG::MobAStat_MobAStatTable& data(int index) const;
  ::MSG::MobAStat_MobAStatTable* mutable_data(int index);
  ::MSG::MobAStat_MobAStatTable* add_data();
  ::google::protobuf::RepeatedPtrField< ::MSG::MobAStat_MobAStatTable >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::MSG::MobAStat_MobAStatTable >&
      data() const;

  // @@protoc_insertion_point(class_scope:MSG.MobAStat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr tablename_;
  ::google::protobuf::RepeatedPtrField< ::MSG::MobAStat_MobAStatTable > data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static MobAStat* default_instance_;
};
// -------------------------------------------------------------------

class MobBStat_MobBStatTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.MobBStat.MobBStatTable) */ {
 public:
  MobBStat_MobBStatTable();
  virtual ~MobBStat_MobBStatTable();

  MobBStat_MobBStatTable(const MobBStat_MobBStatTable& from);

  inline MobBStat_MobBStatTable& operator=(const MobBStat_MobBStatTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MobBStat_MobBStatTable& default_instance();

  void Swap(MobBStat_MobBStatTable* other);

  // implements Message ----------------------------------------------

  inline MobBStat_MobBStatTable* New() const { return New(NULL); }

  MobBStat_MobBStatTable* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MobBStat_MobBStatTable& from);
  void MergeFrom(const MobBStat_MobBStatTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MobBStat_MobBStatTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 Exp = 2;
  void clear_exp();
  static const int kExpFieldNumber = 2;
  ::google::protobuf::uint32 exp() const;
  void set_exp(::google::protobuf::uint32 value);

  // optional uint32 Atk = 3;
  void clear_atk();
  static const int kAtkFieldNumber = 3;
  ::google::protobuf::uint32 atk() const;
  void set_atk(::google::protobuf::uint32 value);

  // optional uint32 Def = 4;
  void clear_def();
  static const int kDefFieldNumber = 4;
  ::google::protobuf::uint32 def() const;
  void set_def(::google::protobuf::uint32 value);

  // optional uint32 Hp = 5;
  void clear_hp();
  static const int kHpFieldNumber = 5;
  ::google::protobuf::uint32 hp() const;
  void set_hp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MSG.MobBStat.MobBStatTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 atk_;
  ::google::protobuf::uint32 def_;
  ::google::protobuf::uint32 hp_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static MobBStat_MobBStatTable* default_instance_;
};
// -------------------------------------------------------------------

class MobBStat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.MobBStat) */ {
 public:
  MobBStat();
  virtual ~MobBStat();

  MobBStat(const MobBStat& from);

  inline MobBStat& operator=(const MobBStat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MobBStat& default_instance();

  void Swap(MobBStat* other);

  // implements Message ----------------------------------------------

  inline MobBStat* New() const { return New(NULL); }

  MobBStat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MobBStat& from);
  void MergeFrom(const MobBStat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MobBStat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MobBStat_MobBStatTable MobBStatTable;

  // accessors -------------------------------------------------------

  // optional string TableName = 1;
  void clear_tablename();
  static const int kTableNameFieldNumber = 1;
  const ::std::string& tablename() const;
  void set_tablename(const ::std::string& value);
  void set_tablename(const char* value);
  void set_tablename(const char* value, size_t size);
  ::std::string* mutable_tablename();
  ::std::string* release_tablename();
  void set_allocated_tablename(::std::string* tablename);

  // repeated .MSG.MobBStat.MobBStatTable Data = 2;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::MSG::MobBStat_MobBStatTable& data(int index) const;
  ::MSG::MobBStat_MobBStatTable* mutable_data(int index);
  ::MSG::MobBStat_MobBStatTable* add_data();
  ::google::protobuf::RepeatedPtrField< ::MSG::MobBStat_MobBStatTable >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::MSG::MobBStat_MobBStatTable >&
      data() const;

  // @@protoc_insertion_point(class_scope:MSG.MobBStat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr tablename_;
  ::google::protobuf::RepeatedPtrField< ::MSG::MobBStat_MobBStatTable > data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static MobBStat* default_instance_;
};
// -------------------------------------------------------------------

class MobCStat_MobCStatTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.MobCStat.MobCStatTable) */ {
 public:
  MobCStat_MobCStatTable();
  virtual ~MobCStat_MobCStatTable();

  MobCStat_MobCStatTable(const MobCStat_MobCStatTable& from);

  inline MobCStat_MobCStatTable& operator=(const MobCStat_MobCStatTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MobCStat_MobCStatTable& default_instance();

  void Swap(MobCStat_MobCStatTable* other);

  // implements Message ----------------------------------------------

  inline MobCStat_MobCStatTable* New() const { return New(NULL); }

  MobCStat_MobCStatTable* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MobCStat_MobCStatTable& from);
  void MergeFrom(const MobCStat_MobCStatTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MobCStat_MobCStatTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 Exp = 2;
  void clear_exp();
  static const int kExpFieldNumber = 2;
  ::google::protobuf::uint32 exp() const;
  void set_exp(::google::protobuf::uint32 value);

  // optional uint32 Atk = 3;
  void clear_atk();
  static const int kAtkFieldNumber = 3;
  ::google::protobuf::uint32 atk() const;
  void set_atk(::google::protobuf::uint32 value);

  // optional uint32 Def = 4;
  void clear_def();
  static const int kDefFieldNumber = 4;
  ::google::protobuf::uint32 def() const;
  void set_def(::google::protobuf::uint32 value);

  // optional uint32 Hp = 5;
  void clear_hp();
  static const int kHpFieldNumber = 5;
  ::google::protobuf::uint32 hp() const;
  void set_hp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MSG.MobCStat.MobCStatTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 atk_;
  ::google::protobuf::uint32 def_;
  ::google::protobuf::uint32 hp_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static MobCStat_MobCStatTable* default_instance_;
};
// -------------------------------------------------------------------

class MobCStat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.MobCStat) */ {
 public:
  MobCStat();
  virtual ~MobCStat();

  MobCStat(const MobCStat& from);

  inline MobCStat& operator=(const MobCStat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MobCStat& default_instance();

  void Swap(MobCStat* other);

  // implements Message ----------------------------------------------

  inline MobCStat* New() const { return New(NULL); }

  MobCStat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MobCStat& from);
  void MergeFrom(const MobCStat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MobCStat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MobCStat_MobCStatTable MobCStatTable;

  // accessors -------------------------------------------------------

  // optional string TableName = 1;
  void clear_tablename();
  static const int kTableNameFieldNumber = 1;
  const ::std::string& tablename() const;
  void set_tablename(const ::std::string& value);
  void set_tablename(const char* value);
  void set_tablename(const char* value, size_t size);
  ::std::string* mutable_tablename();
  ::std::string* release_tablename();
  void set_allocated_tablename(::std::string* tablename);

  // repeated .MSG.MobCStat.MobCStatTable Data = 2;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::MSG::MobCStat_MobCStatTable& data(int index) const;
  ::MSG::MobCStat_MobCStatTable* mutable_data(int index);
  ::MSG::MobCStat_MobCStatTable* add_data();
  ::google::protobuf::RepeatedPtrField< ::MSG::MobCStat_MobCStatTable >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::MSG::MobCStat_MobCStatTable >&
      data() const;

  // @@protoc_insertion_point(class_scope:MSG.MobCStat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr tablename_;
  ::google::protobuf::RepeatedPtrField< ::MSG::MobCStat_MobCStatTable > data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static MobCStat* default_instance_;
};
// -------------------------------------------------------------------

class Dungeon_DungeonTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.Dungeon.DungeonTable) */ {
 public:
  Dungeon_DungeonTable();
  virtual ~Dungeon_DungeonTable();

  Dungeon_DungeonTable(const Dungeon_DungeonTable& from);

  inline Dungeon_DungeonTable& operator=(const Dungeon_DungeonTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dungeon_DungeonTable& default_instance();

  void Swap(Dungeon_DungeonTable* other);

  // implements Message ----------------------------------------------

  inline Dungeon_DungeonTable* New() const { return New(NULL); }

  Dungeon_DungeonTable* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dungeon_DungeonTable& from);
  void MergeFrom(const Dungeon_DungeonTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Dungeon_DungeonTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 No = 1;
  void clear_no();
  static const int kNoFieldNumber = 1;
  ::google::protobuf::uint32 no() const;
  void set_no(::google::protobuf::uint32 value);

  // optional string Name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 Level = 3;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 Reward = 4;
  void clear_reward();
  static const int kRewardFieldNumber = 4;
  ::google::protobuf::uint32 reward() const;
  void set_reward(::google::protobuf::uint32 value);

  // optional uint32 MobALv = 5;
  void clear_mobalv();
  static const int kMobALvFieldNumber = 5;
  ::google::protobuf::uint32 mobalv() const;
  void set_mobalv(::google::protobuf::uint32 value);

  // optional uint32 MobBLv = 6;
  void clear_mobblv();
  static const int kMobBLvFieldNumber = 6;
  ::google::protobuf::uint32 mobblv() const;
  void set_mobblv(::google::protobuf::uint32 value);

  // optional uint32 MobCLv = 7;
  void clear_mobclv();
  static const int kMobCLvFieldNumber = 7;
  ::google::protobuf::uint32 mobclv() const;
  void set_mobclv(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MSG.Dungeon.DungeonTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 no_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 reward_;
  ::google::protobuf::uint32 mobalv_;
  ::google::protobuf::uint32 mobblv_;
  ::google::protobuf::uint32 mobclv_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static Dungeon_DungeonTable* default_instance_;
};
// -------------------------------------------------------------------

class Dungeon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.Dungeon) */ {
 public:
  Dungeon();
  virtual ~Dungeon();

  Dungeon(const Dungeon& from);

  inline Dungeon& operator=(const Dungeon& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dungeon& default_instance();

  void Swap(Dungeon* other);

  // implements Message ----------------------------------------------

  inline Dungeon* New() const { return New(NULL); }

  Dungeon* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dungeon& from);
  void MergeFrom(const Dungeon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Dungeon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Dungeon_DungeonTable DungeonTable;

  // accessors -------------------------------------------------------

  // optional string TableName = 1;
  void clear_tablename();
  static const int kTableNameFieldNumber = 1;
  const ::std::string& tablename() const;
  void set_tablename(const ::std::string& value);
  void set_tablename(const char* value);
  void set_tablename(const char* value, size_t size);
  ::std::string* mutable_tablename();
  ::std::string* release_tablename();
  void set_allocated_tablename(::std::string* tablename);

  // repeated .MSG.Dungeon.DungeonTable Data = 2;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::MSG::Dungeon_DungeonTable& data(int index) const;
  ::MSG::Dungeon_DungeonTable* mutable_data(int index);
  ::MSG::Dungeon_DungeonTable* add_data();
  ::google::protobuf::RepeatedPtrField< ::MSG::Dungeon_DungeonTable >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::MSG::Dungeon_DungeonTable >&
      data() const;

  // @@protoc_insertion_point(class_scope:MSG.Dungeon)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr tablename_;
  ::google::protobuf::RepeatedPtrField< ::MSG::Dungeon_DungeonTable > data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static Dungeon* default_instance_;
};
// -------------------------------------------------------------------

class Item_ItemTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.Item.ItemTable) */ {
 public:
  Item_ItemTable();
  virtual ~Item_ItemTable();

  Item_ItemTable(const Item_ItemTable& from);

  inline Item_ItemTable& operator=(const Item_ItemTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Item_ItemTable& default_instance();

  void Swap(Item_ItemTable* other);

  // implements Message ----------------------------------------------

  inline Item_ItemTable* New() const { return New(NULL); }

  Item_ItemTable* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Item_ItemTable& from);
  void MergeFrom(const Item_ItemTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Item_ItemTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 No = 1;
  void clear_no();
  static const int kNoFieldNumber = 1;
  ::google::protobuf::uint32 no() const;
  void set_no(::google::protobuf::uint32 value);

  // optional string Name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string Category = 3;
  void clear_category();
  static const int kCategoryFieldNumber = 3;
  const ::std::string& category() const;
  void set_category(const ::std::string& value);
  void set_category(const char* value);
  void set_category(const char* value, size_t size);
  ::std::string* mutable_category();
  ::std::string* release_category();
  void set_allocated_category(::std::string* category);

  // optional uint32 CharNo = 4;
  void clear_charno();
  static const int kCharNoFieldNumber = 4;
  ::google::protobuf::uint32 charno() const;
  void set_charno(::google::protobuf::uint32 value);

  // optional string Stat = 5;
  void clear_stat();
  static const int kStatFieldNumber = 5;
  const ::std::string& stat() const;
  void set_stat(const ::std::string& value);
  void set_stat(const char* value);
  void set_stat(const char* value, size_t size);
  ::std::string* mutable_stat();
  ::std::string* release_stat();
  void set_allocated_stat(::std::string* stat);

  // optional uint32 Value = 6;
  void clear_value();
  static const int kValueFieldNumber = 6;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MSG.Item.ItemTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 no_;
  ::google::protobuf::uint32 charno_;
  ::google::protobuf::internal::ArenaStringPtr category_;
  ::google::protobuf::internal::ArenaStringPtr stat_;
  ::google::protobuf::uint32 value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static Item_ItemTable* default_instance_;
};
// -------------------------------------------------------------------

class Item : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.Item) */ {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Item& default_instance();

  void Swap(Item* other);

  // implements Message ----------------------------------------------

  inline Item* New() const { return New(NULL); }

  Item* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Item_ItemTable ItemTable;

  // accessors -------------------------------------------------------

  // optional string TableName = 1;
  void clear_tablename();
  static const int kTableNameFieldNumber = 1;
  const ::std::string& tablename() const;
  void set_tablename(const ::std::string& value);
  void set_tablename(const char* value);
  void set_tablename(const char* value, size_t size);
  ::std::string* mutable_tablename();
  ::std::string* release_tablename();
  void set_allocated_tablename(::std::string* tablename);

  // repeated .MSG.Item.ItemTable Data = 2;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::MSG::Item_ItemTable& data(int index) const;
  ::MSG::Item_ItemTable* mutable_data(int index);
  ::MSG::Item_ItemTable* add_data();
  ::google::protobuf::RepeatedPtrField< ::MSG::Item_ItemTable >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::MSG::Item_ItemTable >&
      data() const;

  // @@protoc_insertion_point(class_scope:MSG.Item)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr tablename_;
  ::google::protobuf::RepeatedPtrField< ::MSG::Item_ItemTable > data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SimTable_2eproto();
  friend void protobuf_AssignDesc_SimTable_2eproto();
  friend void protobuf_ShutdownFile_SimTable_2eproto();

  void InitAsDefaultInstance();
  static Item* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Char_CharacterTable

// optional uint32 No = 1;
inline void Char_CharacterTable::clear_no() {
  no_ = 0u;
}
inline ::google::protobuf::uint32 Char_CharacterTable::no() const {
  // @@protoc_insertion_point(field_get:MSG.Char.CharacterTable.No)
  return no_;
}
inline void Char_CharacterTable::set_no(::google::protobuf::uint32 value) {
  
  no_ = value;
  // @@protoc_insertion_point(field_set:MSG.Char.CharacterTable.No)
}

// optional string Name = 2;
inline void Char_CharacterTable::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Char_CharacterTable::name() const {
  // @@protoc_insertion_point(field_get:MSG.Char.CharacterTable.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Char_CharacterTable::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Char.CharacterTable.Name)
}
inline void Char_CharacterTable::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Char.CharacterTable.Name)
}
inline void Char_CharacterTable::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Char.CharacterTable.Name)
}
inline ::std::string* Char_CharacterTable::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Char.CharacterTable.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Char_CharacterTable::release_name() {
  // @@protoc_insertion_point(field_release:MSG.Char.CharacterTable.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Char_CharacterTable::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.Char.CharacterTable.Name)
}

// optional uint32 AttackRange = 3;
inline void Char_CharacterTable::clear_attackrange() {
  attackrange_ = 0u;
}
inline ::google::protobuf::uint32 Char_CharacterTable::attackrange() const {
  // @@protoc_insertion_point(field_get:MSG.Char.CharacterTable.AttackRange)
  return attackrange_;
}
inline void Char_CharacterTable::set_attackrange(::google::protobuf::uint32 value) {
  
  attackrange_ = value;
  // @@protoc_insertion_point(field_set:MSG.Char.CharacterTable.AttackRange)
}

// -------------------------------------------------------------------

// Char

// optional string TableName = 1;
inline void Char::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Char::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.Char.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Char::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Char.TableName)
}
inline void Char::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Char.TableName)
}
inline void Char::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Char.TableName)
}
inline ::std::string* Char::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Char.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Char::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.Char.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Char::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.Char.TableName)
}

// repeated .MSG.Char.CharacterTable Data = 2;
inline int Char::data_size() const {
  return data_.size();
}
inline void Char::clear_data() {
  data_.Clear();
}
inline const ::MSG::Char_CharacterTable& Char::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.Char.Data)
  return data_.Get(index);
}
inline ::MSG::Char_CharacterTable* Char::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.Char.Data)
  return data_.Mutable(index);
}
inline ::MSG::Char_CharacterTable* Char::add_data() {
  // @@protoc_insertion_point(field_add:MSG.Char.Data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MSG::Char_CharacterTable >*
Char::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.Char.Data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG::Char_CharacterTable >&
Char::data() const {
  // @@protoc_insertion_point(field_list:MSG.Char.Data)
  return data_;
}

// -------------------------------------------------------------------

// Product_ProductTable

// optional uint32 No = 1;
inline void Product_ProductTable::clear_no() {
  no_ = 0u;
}
inline ::google::protobuf::uint32 Product_ProductTable::no() const {
  // @@protoc_insertion_point(field_get:MSG.Product.ProductTable.No)
  return no_;
}
inline void Product_ProductTable::set_no(::google::protobuf::uint32 value) {
  
  no_ = value;
  // @@protoc_insertion_point(field_set:MSG.Product.ProductTable.No)
}

// optional string ProductCode = 2;
inline void Product_ProductTable::clear_productcode() {
  productcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Product_ProductTable::productcode() const {
  // @@protoc_insertion_point(field_get:MSG.Product.ProductTable.ProductCode)
  return productcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Product_ProductTable::set_productcode(const ::std::string& value) {
  
  productcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Product.ProductTable.ProductCode)
}
inline void Product_ProductTable::set_productcode(const char* value) {
  
  productcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Product.ProductTable.ProductCode)
}
inline void Product_ProductTable::set_productcode(const char* value, size_t size) {
  
  productcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Product.ProductTable.ProductCode)
}
inline ::std::string* Product_ProductTable::mutable_productcode() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Product.ProductTable.ProductCode)
  return productcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Product_ProductTable::release_productcode() {
  // @@protoc_insertion_point(field_release:MSG.Product.ProductTable.ProductCode)
  
  return productcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Product_ProductTable::set_allocated_productcode(::std::string* productcode) {
  if (productcode != NULL) {
    
  } else {
    
  }
  productcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productcode);
  // @@protoc_insertion_point(field_set_allocated:MSG.Product.ProductTable.ProductCode)
}

// optional uint32 CharNo = 3;
inline void Product_ProductTable::clear_charno() {
  charno_ = 0u;
}
inline ::google::protobuf::uint32 Product_ProductTable::charno() const {
  // @@protoc_insertion_point(field_get:MSG.Product.ProductTable.CharNo)
  return charno_;
}
inline void Product_ProductTable::set_charno(::google::protobuf::uint32 value) {
  
  charno_ = value;
  // @@protoc_insertion_point(field_set:MSG.Product.ProductTable.CharNo)
}

// optional string VCType = 4;
inline void Product_ProductTable::clear_vctype() {
  vctype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Product_ProductTable::vctype() const {
  // @@protoc_insertion_point(field_get:MSG.Product.ProductTable.VCType)
  return vctype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Product_ProductTable::set_vctype(const ::std::string& value) {
  
  vctype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Product.ProductTable.VCType)
}
inline void Product_ProductTable::set_vctype(const char* value) {
  
  vctype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Product.ProductTable.VCType)
}
inline void Product_ProductTable::set_vctype(const char* value, size_t size) {
  
  vctype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Product.ProductTable.VCType)
}
inline ::std::string* Product_ProductTable::mutable_vctype() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Product.ProductTable.VCType)
  return vctype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Product_ProductTable::release_vctype() {
  // @@protoc_insertion_point(field_release:MSG.Product.ProductTable.VCType)
  
  return vctype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Product_ProductTable::set_allocated_vctype(::std::string* vctype) {
  if (vctype != NULL) {
    
  } else {
    
  }
  vctype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vctype);
  // @@protoc_insertion_point(field_set_allocated:MSG.Product.ProductTable.VCType)
}

// optional uint32 Value = 5;
inline void Product_ProductTable::clear_value() {
  value_ = 0u;
}
inline ::google::protobuf::uint32 Product_ProductTable::value() const {
  // @@protoc_insertion_point(field_get:MSG.Product.ProductTable.Value)
  return value_;
}
inline void Product_ProductTable::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:MSG.Product.ProductTable.Value)
}

// -------------------------------------------------------------------

// Product

// optional string TableName = 1;
inline void Product::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Product::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.Product.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Product::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Product.TableName)
}
inline void Product::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Product.TableName)
}
inline void Product::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Product.TableName)
}
inline ::std::string* Product::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Product.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Product::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.Product.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Product::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.Product.TableName)
}

// repeated .MSG.Product.ProductTable Data = 2;
inline int Product::data_size() const {
  return data_.size();
}
inline void Product::clear_data() {
  data_.Clear();
}
inline const ::MSG::Product_ProductTable& Product::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.Product.Data)
  return data_.Get(index);
}
inline ::MSG::Product_ProductTable* Product::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.Product.Data)
  return data_.Mutable(index);
}
inline ::MSG::Product_ProductTable* Product::add_data() {
  // @@protoc_insertion_point(field_add:MSG.Product.Data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MSG::Product_ProductTable >*
Product::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.Product.Data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG::Product_ProductTable >&
Product::data() const {
  // @@protoc_insertion_point(field_list:MSG.Product.Data)
  return data_;
}

// -------------------------------------------------------------------

// WarriorStat_WarriorStatTable

// optional uint32 Level = 1;
inline void WarriorStat_WarriorStatTable::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 WarriorStat_WarriorStatTable::level() const {
  // @@protoc_insertion_point(field_get:MSG.WarriorStat.WarriorStatTable.Level)
  return level_;
}
inline void WarriorStat_WarriorStatTable::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:MSG.WarriorStat.WarriorStatTable.Level)
}

// optional uint32 Exp = 2;
inline void WarriorStat_WarriorStatTable::clear_exp() {
  exp_ = 0u;
}
inline ::google::protobuf::uint32 WarriorStat_WarriorStatTable::exp() const {
  // @@protoc_insertion_point(field_get:MSG.WarriorStat.WarriorStatTable.Exp)
  return exp_;
}
inline void WarriorStat_WarriorStatTable::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:MSG.WarriorStat.WarriorStatTable.Exp)
}

// optional uint32 Atk = 3;
inline void WarriorStat_WarriorStatTable::clear_atk() {
  atk_ = 0u;
}
inline ::google::protobuf::uint32 WarriorStat_WarriorStatTable::atk() const {
  // @@protoc_insertion_point(field_get:MSG.WarriorStat.WarriorStatTable.Atk)
  return atk_;
}
inline void WarriorStat_WarriorStatTable::set_atk(::google::protobuf::uint32 value) {
  
  atk_ = value;
  // @@protoc_insertion_point(field_set:MSG.WarriorStat.WarriorStatTable.Atk)
}

// optional uint32 Def = 4;
inline void WarriorStat_WarriorStatTable::clear_def() {
  def_ = 0u;
}
inline ::google::protobuf::uint32 WarriorStat_WarriorStatTable::def() const {
  // @@protoc_insertion_point(field_get:MSG.WarriorStat.WarriorStatTable.Def)
  return def_;
}
inline void WarriorStat_WarriorStatTable::set_def(::google::protobuf::uint32 value) {
  
  def_ = value;
  // @@protoc_insertion_point(field_set:MSG.WarriorStat.WarriorStatTable.Def)
}

// optional uint32 Hp = 5;
inline void WarriorStat_WarriorStatTable::clear_hp() {
  hp_ = 0u;
}
inline ::google::protobuf::uint32 WarriorStat_WarriorStatTable::hp() const {
  // @@protoc_insertion_point(field_get:MSG.WarriorStat.WarriorStatTable.Hp)
  return hp_;
}
inline void WarriorStat_WarriorStatTable::set_hp(::google::protobuf::uint32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:MSG.WarriorStat.WarriorStatTable.Hp)
}

// -------------------------------------------------------------------

// WarriorStat

// optional string TableName = 1;
inline void WarriorStat::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WarriorStat::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.WarriorStat.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WarriorStat::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.WarriorStat.TableName)
}
inline void WarriorStat::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.WarriorStat.TableName)
}
inline void WarriorStat::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.WarriorStat.TableName)
}
inline ::std::string* WarriorStat::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.WarriorStat.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WarriorStat::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.WarriorStat.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WarriorStat::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.WarriorStat.TableName)
}

// repeated .MSG.WarriorStat.WarriorStatTable Data = 2;
inline int WarriorStat::data_size() const {
  return data_.size();
}
inline void WarriorStat::clear_data() {
  data_.Clear();
}
inline const ::MSG::WarriorStat_WarriorStatTable& WarriorStat::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.WarriorStat.Data)
  return data_.Get(index);
}
inline ::MSG::WarriorStat_WarriorStatTable* WarriorStat::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.WarriorStat.Data)
  return data_.Mutable(index);
}
inline ::MSG::WarriorStat_WarriorStatTable* WarriorStat::add_data() {
  // @@protoc_insertion_point(field_add:MSG.WarriorStat.Data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MSG::WarriorStat_WarriorStatTable >*
WarriorStat::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.WarriorStat.Data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG::WarriorStat_WarriorStatTable >&
WarriorStat::data() const {
  // @@protoc_insertion_point(field_list:MSG.WarriorStat.Data)
  return data_;
}

// -------------------------------------------------------------------

// ArcherStat_ArcherStatTable

// optional uint32 Level = 1;
inline void ArcherStat_ArcherStatTable::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 ArcherStat_ArcherStatTable::level() const {
  // @@protoc_insertion_point(field_get:MSG.ArcherStat.ArcherStatTable.Level)
  return level_;
}
inline void ArcherStat_ArcherStatTable::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:MSG.ArcherStat.ArcherStatTable.Level)
}

// optional uint32 Exp = 2;
inline void ArcherStat_ArcherStatTable::clear_exp() {
  exp_ = 0u;
}
inline ::google::protobuf::uint32 ArcherStat_ArcherStatTable::exp() const {
  // @@protoc_insertion_point(field_get:MSG.ArcherStat.ArcherStatTable.Exp)
  return exp_;
}
inline void ArcherStat_ArcherStatTable::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:MSG.ArcherStat.ArcherStatTable.Exp)
}

// optional uint32 Atk = 3;
inline void ArcherStat_ArcherStatTable::clear_atk() {
  atk_ = 0u;
}
inline ::google::protobuf::uint32 ArcherStat_ArcherStatTable::atk() const {
  // @@protoc_insertion_point(field_get:MSG.ArcherStat.ArcherStatTable.Atk)
  return atk_;
}
inline void ArcherStat_ArcherStatTable::set_atk(::google::protobuf::uint32 value) {
  
  atk_ = value;
  // @@protoc_insertion_point(field_set:MSG.ArcherStat.ArcherStatTable.Atk)
}

// optional uint32 Def = 4;
inline void ArcherStat_ArcherStatTable::clear_def() {
  def_ = 0u;
}
inline ::google::protobuf::uint32 ArcherStat_ArcherStatTable::def() const {
  // @@protoc_insertion_point(field_get:MSG.ArcherStat.ArcherStatTable.Def)
  return def_;
}
inline void ArcherStat_ArcherStatTable::set_def(::google::protobuf::uint32 value) {
  
  def_ = value;
  // @@protoc_insertion_point(field_set:MSG.ArcherStat.ArcherStatTable.Def)
}

// optional uint32 Hp = 5;
inline void ArcherStat_ArcherStatTable::clear_hp() {
  hp_ = 0u;
}
inline ::google::protobuf::uint32 ArcherStat_ArcherStatTable::hp() const {
  // @@protoc_insertion_point(field_get:MSG.ArcherStat.ArcherStatTable.Hp)
  return hp_;
}
inline void ArcherStat_ArcherStatTable::set_hp(::google::protobuf::uint32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:MSG.ArcherStat.ArcherStatTable.Hp)
}

// -------------------------------------------------------------------

// ArcherStat

// optional string TableName = 1;
inline void ArcherStat::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ArcherStat::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.ArcherStat.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArcherStat::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.ArcherStat.TableName)
}
inline void ArcherStat::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.ArcherStat.TableName)
}
inline void ArcherStat::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.ArcherStat.TableName)
}
inline ::std::string* ArcherStat::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.ArcherStat.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ArcherStat::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.ArcherStat.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArcherStat::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.ArcherStat.TableName)
}

// repeated .MSG.ArcherStat.ArcherStatTable Data = 2;
inline int ArcherStat::data_size() const {
  return data_.size();
}
inline void ArcherStat::clear_data() {
  data_.Clear();
}
inline const ::MSG::ArcherStat_ArcherStatTable& ArcherStat::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.ArcherStat.Data)
  return data_.Get(index);
}
inline ::MSG::ArcherStat_ArcherStatTable* ArcherStat::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.ArcherStat.Data)
  return data_.Mutable(index);
}
inline ::MSG::ArcherStat_ArcherStatTable* ArcherStat::add_data() {
  // @@protoc_insertion_point(field_add:MSG.ArcherStat.Data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MSG::ArcherStat_ArcherStatTable >*
ArcherStat::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.ArcherStat.Data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG::ArcherStat_ArcherStatTable >&
ArcherStat::data() const {
  // @@protoc_insertion_point(field_list:MSG.ArcherStat.Data)
  return data_;
}

// -------------------------------------------------------------------

// CharTier_CharTierTable

// optional uint32 Tier = 1;
inline void CharTier_CharTierTable::clear_tier() {
  tier_ = 0u;
}
inline ::google::protobuf::uint32 CharTier_CharTierTable::tier() const {
  // @@protoc_insertion_point(field_get:MSG.CharTier.CharTierTable.Tier)
  return tier_;
}
inline void CharTier_CharTierTable::set_tier(::google::protobuf::uint32 value) {
  
  tier_ = value;
  // @@protoc_insertion_point(field_set:MSG.CharTier.CharTierTable.Tier)
}

// optional string Buff1Type = 2;
inline void CharTier_CharTierTable::clear_buff1type() {
  buff1type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CharTier_CharTierTable::buff1type() const {
  // @@protoc_insertion_point(field_get:MSG.CharTier.CharTierTable.Buff1Type)
  return buff1type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharTier_CharTierTable::set_buff1type(const ::std::string& value) {
  
  buff1type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.CharTier.CharTierTable.Buff1Type)
}
inline void CharTier_CharTierTable::set_buff1type(const char* value) {
  
  buff1type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.CharTier.CharTierTable.Buff1Type)
}
inline void CharTier_CharTierTable::set_buff1type(const char* value, size_t size) {
  
  buff1type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.CharTier.CharTierTable.Buff1Type)
}
inline ::std::string* CharTier_CharTierTable::mutable_buff1type() {
  
  // @@protoc_insertion_point(field_mutable:MSG.CharTier.CharTierTable.Buff1Type)
  return buff1type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CharTier_CharTierTable::release_buff1type() {
  // @@protoc_insertion_point(field_release:MSG.CharTier.CharTierTable.Buff1Type)
  
  return buff1type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharTier_CharTierTable::set_allocated_buff1type(::std::string* buff1type) {
  if (buff1type != NULL) {
    
  } else {
    
  }
  buff1type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff1type);
  // @@protoc_insertion_point(field_set_allocated:MSG.CharTier.CharTierTable.Buff1Type)
}

// optional string Buff1Value = 3;
inline void CharTier_CharTierTable::clear_buff1value() {
  buff1value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CharTier_CharTierTable::buff1value() const {
  // @@protoc_insertion_point(field_get:MSG.CharTier.CharTierTable.Buff1Value)
  return buff1value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharTier_CharTierTable::set_buff1value(const ::std::string& value) {
  
  buff1value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.CharTier.CharTierTable.Buff1Value)
}
inline void CharTier_CharTierTable::set_buff1value(const char* value) {
  
  buff1value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.CharTier.CharTierTable.Buff1Value)
}
inline void CharTier_CharTierTable::set_buff1value(const char* value, size_t size) {
  
  buff1value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.CharTier.CharTierTable.Buff1Value)
}
inline ::std::string* CharTier_CharTierTable::mutable_buff1value() {
  
  // @@protoc_insertion_point(field_mutable:MSG.CharTier.CharTierTable.Buff1Value)
  return buff1value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CharTier_CharTierTable::release_buff1value() {
  // @@protoc_insertion_point(field_release:MSG.CharTier.CharTierTable.Buff1Value)
  
  return buff1value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharTier_CharTierTable::set_allocated_buff1value(::std::string* buff1value) {
  if (buff1value != NULL) {
    
  } else {
    
  }
  buff1value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff1value);
  // @@protoc_insertion_point(field_set_allocated:MSG.CharTier.CharTierTable.Buff1Value)
}

// optional string Buff2Type = 4;
inline void CharTier_CharTierTable::clear_buff2type() {
  buff2type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CharTier_CharTierTable::buff2type() const {
  // @@protoc_insertion_point(field_get:MSG.CharTier.CharTierTable.Buff2Type)
  return buff2type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharTier_CharTierTable::set_buff2type(const ::std::string& value) {
  
  buff2type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.CharTier.CharTierTable.Buff2Type)
}
inline void CharTier_CharTierTable::set_buff2type(const char* value) {
  
  buff2type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.CharTier.CharTierTable.Buff2Type)
}
inline void CharTier_CharTierTable::set_buff2type(const char* value, size_t size) {
  
  buff2type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.CharTier.CharTierTable.Buff2Type)
}
inline ::std::string* CharTier_CharTierTable::mutable_buff2type() {
  
  // @@protoc_insertion_point(field_mutable:MSG.CharTier.CharTierTable.Buff2Type)
  return buff2type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CharTier_CharTierTable::release_buff2type() {
  // @@protoc_insertion_point(field_release:MSG.CharTier.CharTierTable.Buff2Type)
  
  return buff2type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharTier_CharTierTable::set_allocated_buff2type(::std::string* buff2type) {
  if (buff2type != NULL) {
    
  } else {
    
  }
  buff2type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff2type);
  // @@protoc_insertion_point(field_set_allocated:MSG.CharTier.CharTierTable.Buff2Type)
}

// optional string Buff2Value = 5;
inline void CharTier_CharTierTable::clear_buff2value() {
  buff2value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CharTier_CharTierTable::buff2value() const {
  // @@protoc_insertion_point(field_get:MSG.CharTier.CharTierTable.Buff2Value)
  return buff2value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharTier_CharTierTable::set_buff2value(const ::std::string& value) {
  
  buff2value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.CharTier.CharTierTable.Buff2Value)
}
inline void CharTier_CharTierTable::set_buff2value(const char* value) {
  
  buff2value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.CharTier.CharTierTable.Buff2Value)
}
inline void CharTier_CharTierTable::set_buff2value(const char* value, size_t size) {
  
  buff2value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.CharTier.CharTierTable.Buff2Value)
}
inline ::std::string* CharTier_CharTierTable::mutable_buff2value() {
  
  // @@protoc_insertion_point(field_mutable:MSG.CharTier.CharTierTable.Buff2Value)
  return buff2value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CharTier_CharTierTable::release_buff2value() {
  // @@protoc_insertion_point(field_release:MSG.CharTier.CharTierTable.Buff2Value)
  
  return buff2value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharTier_CharTierTable::set_allocated_buff2value(::std::string* buff2value) {
  if (buff2value != NULL) {
    
  } else {
    
  }
  buff2value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff2value);
  // @@protoc_insertion_point(field_set_allocated:MSG.CharTier.CharTierTable.Buff2Value)
}

// optional string Buff3Type = 6;
inline void CharTier_CharTierTable::clear_buff3type() {
  buff3type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CharTier_CharTierTable::buff3type() const {
  // @@protoc_insertion_point(field_get:MSG.CharTier.CharTierTable.Buff3Type)
  return buff3type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharTier_CharTierTable::set_buff3type(const ::std::string& value) {
  
  buff3type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.CharTier.CharTierTable.Buff3Type)
}
inline void CharTier_CharTierTable::set_buff3type(const char* value) {
  
  buff3type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.CharTier.CharTierTable.Buff3Type)
}
inline void CharTier_CharTierTable::set_buff3type(const char* value, size_t size) {
  
  buff3type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.CharTier.CharTierTable.Buff3Type)
}
inline ::std::string* CharTier_CharTierTable::mutable_buff3type() {
  
  // @@protoc_insertion_point(field_mutable:MSG.CharTier.CharTierTable.Buff3Type)
  return buff3type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CharTier_CharTierTable::release_buff3type() {
  // @@protoc_insertion_point(field_release:MSG.CharTier.CharTierTable.Buff3Type)
  
  return buff3type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharTier_CharTierTable::set_allocated_buff3type(::std::string* buff3type) {
  if (buff3type != NULL) {
    
  } else {
    
  }
  buff3type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff3type);
  // @@protoc_insertion_point(field_set_allocated:MSG.CharTier.CharTierTable.Buff3Type)
}

// optional string Buff3Value = 7;
inline void CharTier_CharTierTable::clear_buff3value() {
  buff3value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CharTier_CharTierTable::buff3value() const {
  // @@protoc_insertion_point(field_get:MSG.CharTier.CharTierTable.Buff3Value)
  return buff3value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharTier_CharTierTable::set_buff3value(const ::std::string& value) {
  
  buff3value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.CharTier.CharTierTable.Buff3Value)
}
inline void CharTier_CharTierTable::set_buff3value(const char* value) {
  
  buff3value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.CharTier.CharTierTable.Buff3Value)
}
inline void CharTier_CharTierTable::set_buff3value(const char* value, size_t size) {
  
  buff3value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.CharTier.CharTierTable.Buff3Value)
}
inline ::std::string* CharTier_CharTierTable::mutable_buff3value() {
  
  // @@protoc_insertion_point(field_mutable:MSG.CharTier.CharTierTable.Buff3Value)
  return buff3value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CharTier_CharTierTable::release_buff3value() {
  // @@protoc_insertion_point(field_release:MSG.CharTier.CharTierTable.Buff3Value)
  
  return buff3value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharTier_CharTierTable::set_allocated_buff3value(::std::string* buff3value) {
  if (buff3value != NULL) {
    
  } else {
    
  }
  buff3value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff3value);
  // @@protoc_insertion_point(field_set_allocated:MSG.CharTier.CharTierTable.Buff3Value)
}

// -------------------------------------------------------------------

// CharTier

// optional string TableName = 1;
inline void CharTier::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CharTier::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.CharTier.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharTier::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.CharTier.TableName)
}
inline void CharTier::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.CharTier.TableName)
}
inline void CharTier::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.CharTier.TableName)
}
inline ::std::string* CharTier::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.CharTier.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CharTier::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.CharTier.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharTier::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.CharTier.TableName)
}

// repeated .MSG.CharTier.CharTierTable Data = 2;
inline int CharTier::data_size() const {
  return data_.size();
}
inline void CharTier::clear_data() {
  data_.Clear();
}
inline const ::MSG::CharTier_CharTierTable& CharTier::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.CharTier.Data)
  return data_.Get(index);
}
inline ::MSG::CharTier_CharTierTable* CharTier::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.CharTier.Data)
  return data_.Mutable(index);
}
inline ::MSG::CharTier_CharTierTable* CharTier::add_data() {
  // @@protoc_insertion_point(field_add:MSG.CharTier.Data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MSG::CharTier_CharTierTable >*
CharTier::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.CharTier.Data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG::CharTier_CharTierTable >&
CharTier::data() const {
  // @@protoc_insertion_point(field_list:MSG.CharTier.Data)
  return data_;
}

// -------------------------------------------------------------------

// DungeonTier_DungeonTierTable

// optional uint32 Tier = 1;
inline void DungeonTier_DungeonTierTable::clear_tier() {
  tier_ = 0u;
}
inline ::google::protobuf::uint32 DungeonTier_DungeonTierTable::tier() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonTier.DungeonTierTable.Tier)
  return tier_;
}
inline void DungeonTier_DungeonTierTable::set_tier(::google::protobuf::uint32 value) {
  
  tier_ = value;
  // @@protoc_insertion_point(field_set:MSG.DungeonTier.DungeonTierTable.Tier)
}

// optional string Buff1Type = 2;
inline void DungeonTier_DungeonTierTable::clear_buff1type() {
  buff1type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DungeonTier_DungeonTierTable::buff1type() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonTier.DungeonTierTable.Buff1Type)
  return buff1type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DungeonTier_DungeonTierTable::set_buff1type(const ::std::string& value) {
  
  buff1type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.DungeonTier.DungeonTierTable.Buff1Type)
}
inline void DungeonTier_DungeonTierTable::set_buff1type(const char* value) {
  
  buff1type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.DungeonTier.DungeonTierTable.Buff1Type)
}
inline void DungeonTier_DungeonTierTable::set_buff1type(const char* value, size_t size) {
  
  buff1type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.DungeonTier.DungeonTierTable.Buff1Type)
}
inline ::std::string* DungeonTier_DungeonTierTable::mutable_buff1type() {
  
  // @@protoc_insertion_point(field_mutable:MSG.DungeonTier.DungeonTierTable.Buff1Type)
  return buff1type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DungeonTier_DungeonTierTable::release_buff1type() {
  // @@protoc_insertion_point(field_release:MSG.DungeonTier.DungeonTierTable.Buff1Type)
  
  return buff1type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DungeonTier_DungeonTierTable::set_allocated_buff1type(::std::string* buff1type) {
  if (buff1type != NULL) {
    
  } else {
    
  }
  buff1type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff1type);
  // @@protoc_insertion_point(field_set_allocated:MSG.DungeonTier.DungeonTierTable.Buff1Type)
}

// optional string Buff1Value = 3;
inline void DungeonTier_DungeonTierTable::clear_buff1value() {
  buff1value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DungeonTier_DungeonTierTable::buff1value() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonTier.DungeonTierTable.Buff1Value)
  return buff1value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DungeonTier_DungeonTierTable::set_buff1value(const ::std::string& value) {
  
  buff1value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.DungeonTier.DungeonTierTable.Buff1Value)
}
inline void DungeonTier_DungeonTierTable::set_buff1value(const char* value) {
  
  buff1value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.DungeonTier.DungeonTierTable.Buff1Value)
}
inline void DungeonTier_DungeonTierTable::set_buff1value(const char* value, size_t size) {
  
  buff1value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.DungeonTier.DungeonTierTable.Buff1Value)
}
inline ::std::string* DungeonTier_DungeonTierTable::mutable_buff1value() {
  
  // @@protoc_insertion_point(field_mutable:MSG.DungeonTier.DungeonTierTable.Buff1Value)
  return buff1value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DungeonTier_DungeonTierTable::release_buff1value() {
  // @@protoc_insertion_point(field_release:MSG.DungeonTier.DungeonTierTable.Buff1Value)
  
  return buff1value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DungeonTier_DungeonTierTable::set_allocated_buff1value(::std::string* buff1value) {
  if (buff1value != NULL) {
    
  } else {
    
  }
  buff1value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff1value);
  // @@protoc_insertion_point(field_set_allocated:MSG.DungeonTier.DungeonTierTable.Buff1Value)
}

// optional string Buff2Type = 4;
inline void DungeonTier_DungeonTierTable::clear_buff2type() {
  buff2type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DungeonTier_DungeonTierTable::buff2type() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonTier.DungeonTierTable.Buff2Type)
  return buff2type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DungeonTier_DungeonTierTable::set_buff2type(const ::std::string& value) {
  
  buff2type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.DungeonTier.DungeonTierTable.Buff2Type)
}
inline void DungeonTier_DungeonTierTable::set_buff2type(const char* value) {
  
  buff2type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.DungeonTier.DungeonTierTable.Buff2Type)
}
inline void DungeonTier_DungeonTierTable::set_buff2type(const char* value, size_t size) {
  
  buff2type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.DungeonTier.DungeonTierTable.Buff2Type)
}
inline ::std::string* DungeonTier_DungeonTierTable::mutable_buff2type() {
  
  // @@protoc_insertion_point(field_mutable:MSG.DungeonTier.DungeonTierTable.Buff2Type)
  return buff2type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DungeonTier_DungeonTierTable::release_buff2type() {
  // @@protoc_insertion_point(field_release:MSG.DungeonTier.DungeonTierTable.Buff2Type)
  
  return buff2type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DungeonTier_DungeonTierTable::set_allocated_buff2type(::std::string* buff2type) {
  if (buff2type != NULL) {
    
  } else {
    
  }
  buff2type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff2type);
  // @@protoc_insertion_point(field_set_allocated:MSG.DungeonTier.DungeonTierTable.Buff2Type)
}

// optional string Buff2Value = 5;
inline void DungeonTier_DungeonTierTable::clear_buff2value() {
  buff2value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DungeonTier_DungeonTierTable::buff2value() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonTier.DungeonTierTable.Buff2Value)
  return buff2value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DungeonTier_DungeonTierTable::set_buff2value(const ::std::string& value) {
  
  buff2value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.DungeonTier.DungeonTierTable.Buff2Value)
}
inline void DungeonTier_DungeonTierTable::set_buff2value(const char* value) {
  
  buff2value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.DungeonTier.DungeonTierTable.Buff2Value)
}
inline void DungeonTier_DungeonTierTable::set_buff2value(const char* value, size_t size) {
  
  buff2value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.DungeonTier.DungeonTierTable.Buff2Value)
}
inline ::std::string* DungeonTier_DungeonTierTable::mutable_buff2value() {
  
  // @@protoc_insertion_point(field_mutable:MSG.DungeonTier.DungeonTierTable.Buff2Value)
  return buff2value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DungeonTier_DungeonTierTable::release_buff2value() {
  // @@protoc_insertion_point(field_release:MSG.DungeonTier.DungeonTierTable.Buff2Value)
  
  return buff2value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DungeonTier_DungeonTierTable::set_allocated_buff2value(::std::string* buff2value) {
  if (buff2value != NULL) {
    
  } else {
    
  }
  buff2value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff2value);
  // @@protoc_insertion_point(field_set_allocated:MSG.DungeonTier.DungeonTierTable.Buff2Value)
}

// optional string Buff3Type = 6;
inline void DungeonTier_DungeonTierTable::clear_buff3type() {
  buff3type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DungeonTier_DungeonTierTable::buff3type() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonTier.DungeonTierTable.Buff3Type)
  return buff3type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DungeonTier_DungeonTierTable::set_buff3type(const ::std::string& value) {
  
  buff3type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.DungeonTier.DungeonTierTable.Buff3Type)
}
inline void DungeonTier_DungeonTierTable::set_buff3type(const char* value) {
  
  buff3type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.DungeonTier.DungeonTierTable.Buff3Type)
}
inline void DungeonTier_DungeonTierTable::set_buff3type(const char* value, size_t size) {
  
  buff3type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.DungeonTier.DungeonTierTable.Buff3Type)
}
inline ::std::string* DungeonTier_DungeonTierTable::mutable_buff3type() {
  
  // @@protoc_insertion_point(field_mutable:MSG.DungeonTier.DungeonTierTable.Buff3Type)
  return buff3type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DungeonTier_DungeonTierTable::release_buff3type() {
  // @@protoc_insertion_point(field_release:MSG.DungeonTier.DungeonTierTable.Buff3Type)
  
  return buff3type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DungeonTier_DungeonTierTable::set_allocated_buff3type(::std::string* buff3type) {
  if (buff3type != NULL) {
    
  } else {
    
  }
  buff3type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff3type);
  // @@protoc_insertion_point(field_set_allocated:MSG.DungeonTier.DungeonTierTable.Buff3Type)
}

// optional string Buff3Value = 7;
inline void DungeonTier_DungeonTierTable::clear_buff3value() {
  buff3value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DungeonTier_DungeonTierTable::buff3value() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonTier.DungeonTierTable.Buff3Value)
  return buff3value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DungeonTier_DungeonTierTable::set_buff3value(const ::std::string& value) {
  
  buff3value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.DungeonTier.DungeonTierTable.Buff3Value)
}
inline void DungeonTier_DungeonTierTable::set_buff3value(const char* value) {
  
  buff3value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.DungeonTier.DungeonTierTable.Buff3Value)
}
inline void DungeonTier_DungeonTierTable::set_buff3value(const char* value, size_t size) {
  
  buff3value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.DungeonTier.DungeonTierTable.Buff3Value)
}
inline ::std::string* DungeonTier_DungeonTierTable::mutable_buff3value() {
  
  // @@protoc_insertion_point(field_mutable:MSG.DungeonTier.DungeonTierTable.Buff3Value)
  return buff3value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DungeonTier_DungeonTierTable::release_buff3value() {
  // @@protoc_insertion_point(field_release:MSG.DungeonTier.DungeonTierTable.Buff3Value)
  
  return buff3value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DungeonTier_DungeonTierTable::set_allocated_buff3value(::std::string* buff3value) {
  if (buff3value != NULL) {
    
  } else {
    
  }
  buff3value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff3value);
  // @@protoc_insertion_point(field_set_allocated:MSG.DungeonTier.DungeonTierTable.Buff3Value)
}

// -------------------------------------------------------------------

// DungeonTier

// optional string TableName = 1;
inline void DungeonTier::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DungeonTier::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonTier.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DungeonTier::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.DungeonTier.TableName)
}
inline void DungeonTier::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.DungeonTier.TableName)
}
inline void DungeonTier::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.DungeonTier.TableName)
}
inline ::std::string* DungeonTier::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.DungeonTier.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DungeonTier::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.DungeonTier.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DungeonTier::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.DungeonTier.TableName)
}

// repeated .MSG.DungeonTier.DungeonTierTable Data = 2;
inline int DungeonTier::data_size() const {
  return data_.size();
}
inline void DungeonTier::clear_data() {
  data_.Clear();
}
inline const ::MSG::DungeonTier_DungeonTierTable& DungeonTier::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.DungeonTier.Data)
  return data_.Get(index);
}
inline ::MSG::DungeonTier_DungeonTierTable* DungeonTier::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.DungeonTier.Data)
  return data_.Mutable(index);
}
inline ::MSG::DungeonTier_DungeonTierTable* DungeonTier::add_data() {
  // @@protoc_insertion_point(field_add:MSG.DungeonTier.Data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MSG::DungeonTier_DungeonTierTable >*
DungeonTier::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.DungeonTier.Data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG::DungeonTier_DungeonTierTable >&
DungeonTier::data() const {
  // @@protoc_insertion_point(field_list:MSG.DungeonTier.Data)
  return data_;
}

// -------------------------------------------------------------------

// MobAStat_MobAStatTable

// optional uint32 Level = 1;
inline void MobAStat_MobAStatTable::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 MobAStat_MobAStatTable::level() const {
  // @@protoc_insertion_point(field_get:MSG.MobAStat.MobAStatTable.Level)
  return level_;
}
inline void MobAStat_MobAStatTable::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobAStat.MobAStatTable.Level)
}

// optional uint32 Exp = 2;
inline void MobAStat_MobAStatTable::clear_exp() {
  exp_ = 0u;
}
inline ::google::protobuf::uint32 MobAStat_MobAStatTable::exp() const {
  // @@protoc_insertion_point(field_get:MSG.MobAStat.MobAStatTable.Exp)
  return exp_;
}
inline void MobAStat_MobAStatTable::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobAStat.MobAStatTable.Exp)
}

// optional uint32 Atk = 3;
inline void MobAStat_MobAStatTable::clear_atk() {
  atk_ = 0u;
}
inline ::google::protobuf::uint32 MobAStat_MobAStatTable::atk() const {
  // @@protoc_insertion_point(field_get:MSG.MobAStat.MobAStatTable.Atk)
  return atk_;
}
inline void MobAStat_MobAStatTable::set_atk(::google::protobuf::uint32 value) {
  
  atk_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobAStat.MobAStatTable.Atk)
}

// optional uint32 Def = 4;
inline void MobAStat_MobAStatTable::clear_def() {
  def_ = 0u;
}
inline ::google::protobuf::uint32 MobAStat_MobAStatTable::def() const {
  // @@protoc_insertion_point(field_get:MSG.MobAStat.MobAStatTable.Def)
  return def_;
}
inline void MobAStat_MobAStatTable::set_def(::google::protobuf::uint32 value) {
  
  def_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobAStat.MobAStatTable.Def)
}

// optional uint32 Hp = 5;
inline void MobAStat_MobAStatTable::clear_hp() {
  hp_ = 0u;
}
inline ::google::protobuf::uint32 MobAStat_MobAStatTable::hp() const {
  // @@protoc_insertion_point(field_get:MSG.MobAStat.MobAStatTable.Hp)
  return hp_;
}
inline void MobAStat_MobAStatTable::set_hp(::google::protobuf::uint32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobAStat.MobAStatTable.Hp)
}

// -------------------------------------------------------------------

// MobAStat

// optional string TableName = 1;
inline void MobAStat::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MobAStat::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.MobAStat.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MobAStat::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.MobAStat.TableName)
}
inline void MobAStat::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.MobAStat.TableName)
}
inline void MobAStat::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.MobAStat.TableName)
}
inline ::std::string* MobAStat::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.MobAStat.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MobAStat::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.MobAStat.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MobAStat::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.MobAStat.TableName)
}

// repeated .MSG.MobAStat.MobAStatTable Data = 2;
inline int MobAStat::data_size() const {
  return data_.size();
}
inline void MobAStat::clear_data() {
  data_.Clear();
}
inline const ::MSG::MobAStat_MobAStatTable& MobAStat::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.MobAStat.Data)
  return data_.Get(index);
}
inline ::MSG::MobAStat_MobAStatTable* MobAStat::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.MobAStat.Data)
  return data_.Mutable(index);
}
inline ::MSG::MobAStat_MobAStatTable* MobAStat::add_data() {
  // @@protoc_insertion_point(field_add:MSG.MobAStat.Data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MSG::MobAStat_MobAStatTable >*
MobAStat::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.MobAStat.Data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG::MobAStat_MobAStatTable >&
MobAStat::data() const {
  // @@protoc_insertion_point(field_list:MSG.MobAStat.Data)
  return data_;
}

// -------------------------------------------------------------------

// MobBStat_MobBStatTable

// optional uint32 Level = 1;
inline void MobBStat_MobBStatTable::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 MobBStat_MobBStatTable::level() const {
  // @@protoc_insertion_point(field_get:MSG.MobBStat.MobBStatTable.Level)
  return level_;
}
inline void MobBStat_MobBStatTable::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobBStat.MobBStatTable.Level)
}

// optional uint32 Exp = 2;
inline void MobBStat_MobBStatTable::clear_exp() {
  exp_ = 0u;
}
inline ::google::protobuf::uint32 MobBStat_MobBStatTable::exp() const {
  // @@protoc_insertion_point(field_get:MSG.MobBStat.MobBStatTable.Exp)
  return exp_;
}
inline void MobBStat_MobBStatTable::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobBStat.MobBStatTable.Exp)
}

// optional uint32 Atk = 3;
inline void MobBStat_MobBStatTable::clear_atk() {
  atk_ = 0u;
}
inline ::google::protobuf::uint32 MobBStat_MobBStatTable::atk() const {
  // @@protoc_insertion_point(field_get:MSG.MobBStat.MobBStatTable.Atk)
  return atk_;
}
inline void MobBStat_MobBStatTable::set_atk(::google::protobuf::uint32 value) {
  
  atk_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobBStat.MobBStatTable.Atk)
}

// optional uint32 Def = 4;
inline void MobBStat_MobBStatTable::clear_def() {
  def_ = 0u;
}
inline ::google::protobuf::uint32 MobBStat_MobBStatTable::def() const {
  // @@protoc_insertion_point(field_get:MSG.MobBStat.MobBStatTable.Def)
  return def_;
}
inline void MobBStat_MobBStatTable::set_def(::google::protobuf::uint32 value) {
  
  def_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobBStat.MobBStatTable.Def)
}

// optional uint32 Hp = 5;
inline void MobBStat_MobBStatTable::clear_hp() {
  hp_ = 0u;
}
inline ::google::protobuf::uint32 MobBStat_MobBStatTable::hp() const {
  // @@protoc_insertion_point(field_get:MSG.MobBStat.MobBStatTable.Hp)
  return hp_;
}
inline void MobBStat_MobBStatTable::set_hp(::google::protobuf::uint32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobBStat.MobBStatTable.Hp)
}

// -------------------------------------------------------------------

// MobBStat

// optional string TableName = 1;
inline void MobBStat::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MobBStat::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.MobBStat.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MobBStat::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.MobBStat.TableName)
}
inline void MobBStat::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.MobBStat.TableName)
}
inline void MobBStat::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.MobBStat.TableName)
}
inline ::std::string* MobBStat::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.MobBStat.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MobBStat::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.MobBStat.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MobBStat::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.MobBStat.TableName)
}

// repeated .MSG.MobBStat.MobBStatTable Data = 2;
inline int MobBStat::data_size() const {
  return data_.size();
}
inline void MobBStat::clear_data() {
  data_.Clear();
}
inline const ::MSG::MobBStat_MobBStatTable& MobBStat::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.MobBStat.Data)
  return data_.Get(index);
}
inline ::MSG::MobBStat_MobBStatTable* MobBStat::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.MobBStat.Data)
  return data_.Mutable(index);
}
inline ::MSG::MobBStat_MobBStatTable* MobBStat::add_data() {
  // @@protoc_insertion_point(field_add:MSG.MobBStat.Data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MSG::MobBStat_MobBStatTable >*
MobBStat::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.MobBStat.Data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG::MobBStat_MobBStatTable >&
MobBStat::data() const {
  // @@protoc_insertion_point(field_list:MSG.MobBStat.Data)
  return data_;
}

// -------------------------------------------------------------------

// MobCStat_MobCStatTable

// optional uint32 Level = 1;
inline void MobCStat_MobCStatTable::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 MobCStat_MobCStatTable::level() const {
  // @@protoc_insertion_point(field_get:MSG.MobCStat.MobCStatTable.Level)
  return level_;
}
inline void MobCStat_MobCStatTable::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobCStat.MobCStatTable.Level)
}

// optional uint32 Exp = 2;
inline void MobCStat_MobCStatTable::clear_exp() {
  exp_ = 0u;
}
inline ::google::protobuf::uint32 MobCStat_MobCStatTable::exp() const {
  // @@protoc_insertion_point(field_get:MSG.MobCStat.MobCStatTable.Exp)
  return exp_;
}
inline void MobCStat_MobCStatTable::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobCStat.MobCStatTable.Exp)
}

// optional uint32 Atk = 3;
inline void MobCStat_MobCStatTable::clear_atk() {
  atk_ = 0u;
}
inline ::google::protobuf::uint32 MobCStat_MobCStatTable::atk() const {
  // @@protoc_insertion_point(field_get:MSG.MobCStat.MobCStatTable.Atk)
  return atk_;
}
inline void MobCStat_MobCStatTable::set_atk(::google::protobuf::uint32 value) {
  
  atk_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobCStat.MobCStatTable.Atk)
}

// optional uint32 Def = 4;
inline void MobCStat_MobCStatTable::clear_def() {
  def_ = 0u;
}
inline ::google::protobuf::uint32 MobCStat_MobCStatTable::def() const {
  // @@protoc_insertion_point(field_get:MSG.MobCStat.MobCStatTable.Def)
  return def_;
}
inline void MobCStat_MobCStatTable::set_def(::google::protobuf::uint32 value) {
  
  def_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobCStat.MobCStatTable.Def)
}

// optional uint32 Hp = 5;
inline void MobCStat_MobCStatTable::clear_hp() {
  hp_ = 0u;
}
inline ::google::protobuf::uint32 MobCStat_MobCStatTable::hp() const {
  // @@protoc_insertion_point(field_get:MSG.MobCStat.MobCStatTable.Hp)
  return hp_;
}
inline void MobCStat_MobCStatTable::set_hp(::google::protobuf::uint32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobCStat.MobCStatTable.Hp)
}

// -------------------------------------------------------------------

// MobCStat

// optional string TableName = 1;
inline void MobCStat::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MobCStat::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.MobCStat.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MobCStat::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.MobCStat.TableName)
}
inline void MobCStat::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.MobCStat.TableName)
}
inline void MobCStat::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.MobCStat.TableName)
}
inline ::std::string* MobCStat::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.MobCStat.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MobCStat::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.MobCStat.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MobCStat::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.MobCStat.TableName)
}

// repeated .MSG.MobCStat.MobCStatTable Data = 2;
inline int MobCStat::data_size() const {
  return data_.size();
}
inline void MobCStat::clear_data() {
  data_.Clear();
}
inline const ::MSG::MobCStat_MobCStatTable& MobCStat::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.MobCStat.Data)
  return data_.Get(index);
}
inline ::MSG::MobCStat_MobCStatTable* MobCStat::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.MobCStat.Data)
  return data_.Mutable(index);
}
inline ::MSG::MobCStat_MobCStatTable* MobCStat::add_data() {
  // @@protoc_insertion_point(field_add:MSG.MobCStat.Data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MSG::MobCStat_MobCStatTable >*
MobCStat::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.MobCStat.Data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG::MobCStat_MobCStatTable >&
MobCStat::data() const {
  // @@protoc_insertion_point(field_list:MSG.MobCStat.Data)
  return data_;
}

// -------------------------------------------------------------------

// Dungeon_DungeonTable

// optional uint32 No = 1;
inline void Dungeon_DungeonTable::clear_no() {
  no_ = 0u;
}
inline ::google::protobuf::uint32 Dungeon_DungeonTable::no() const {
  // @@protoc_insertion_point(field_get:MSG.Dungeon.DungeonTable.No)
  return no_;
}
inline void Dungeon_DungeonTable::set_no(::google::protobuf::uint32 value) {
  
  no_ = value;
  // @@protoc_insertion_point(field_set:MSG.Dungeon.DungeonTable.No)
}

// optional string Name = 2;
inline void Dungeon_DungeonTable::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Dungeon_DungeonTable::name() const {
  // @@protoc_insertion_point(field_get:MSG.Dungeon.DungeonTable.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Dungeon_DungeonTable::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Dungeon.DungeonTable.Name)
}
inline void Dungeon_DungeonTable::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Dungeon.DungeonTable.Name)
}
inline void Dungeon_DungeonTable::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Dungeon.DungeonTable.Name)
}
inline ::std::string* Dungeon_DungeonTable::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Dungeon.DungeonTable.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Dungeon_DungeonTable::release_name() {
  // @@protoc_insertion_point(field_release:MSG.Dungeon.DungeonTable.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Dungeon_DungeonTable::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.Dungeon.DungeonTable.Name)
}

// optional uint32 Level = 3;
inline void Dungeon_DungeonTable::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 Dungeon_DungeonTable::level() const {
  // @@protoc_insertion_point(field_get:MSG.Dungeon.DungeonTable.Level)
  return level_;
}
inline void Dungeon_DungeonTable::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:MSG.Dungeon.DungeonTable.Level)
}

// optional uint32 Reward = 4;
inline void Dungeon_DungeonTable::clear_reward() {
  reward_ = 0u;
}
inline ::google::protobuf::uint32 Dungeon_DungeonTable::reward() const {
  // @@protoc_insertion_point(field_get:MSG.Dungeon.DungeonTable.Reward)
  return reward_;
}
inline void Dungeon_DungeonTable::set_reward(::google::protobuf::uint32 value) {
  
  reward_ = value;
  // @@protoc_insertion_point(field_set:MSG.Dungeon.DungeonTable.Reward)
}

// optional uint32 MobALv = 5;
inline void Dungeon_DungeonTable::clear_mobalv() {
  mobalv_ = 0u;
}
inline ::google::protobuf::uint32 Dungeon_DungeonTable::mobalv() const {
  // @@protoc_insertion_point(field_get:MSG.Dungeon.DungeonTable.MobALv)
  return mobalv_;
}
inline void Dungeon_DungeonTable::set_mobalv(::google::protobuf::uint32 value) {
  
  mobalv_ = value;
  // @@protoc_insertion_point(field_set:MSG.Dungeon.DungeonTable.MobALv)
}

// optional uint32 MobBLv = 6;
inline void Dungeon_DungeonTable::clear_mobblv() {
  mobblv_ = 0u;
}
inline ::google::protobuf::uint32 Dungeon_DungeonTable::mobblv() const {
  // @@protoc_insertion_point(field_get:MSG.Dungeon.DungeonTable.MobBLv)
  return mobblv_;
}
inline void Dungeon_DungeonTable::set_mobblv(::google::protobuf::uint32 value) {
  
  mobblv_ = value;
  // @@protoc_insertion_point(field_set:MSG.Dungeon.DungeonTable.MobBLv)
}

// optional uint32 MobCLv = 7;
inline void Dungeon_DungeonTable::clear_mobclv() {
  mobclv_ = 0u;
}
inline ::google::protobuf::uint32 Dungeon_DungeonTable::mobclv() const {
  // @@protoc_insertion_point(field_get:MSG.Dungeon.DungeonTable.MobCLv)
  return mobclv_;
}
inline void Dungeon_DungeonTable::set_mobclv(::google::protobuf::uint32 value) {
  
  mobclv_ = value;
  // @@protoc_insertion_point(field_set:MSG.Dungeon.DungeonTable.MobCLv)
}

// -------------------------------------------------------------------

// Dungeon

// optional string TableName = 1;
inline void Dungeon::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Dungeon::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.Dungeon.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Dungeon::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Dungeon.TableName)
}
inline void Dungeon::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Dungeon.TableName)
}
inline void Dungeon::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Dungeon.TableName)
}
inline ::std::string* Dungeon::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Dungeon.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Dungeon::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.Dungeon.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Dungeon::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.Dungeon.TableName)
}

// repeated .MSG.Dungeon.DungeonTable Data = 2;
inline int Dungeon::data_size() const {
  return data_.size();
}
inline void Dungeon::clear_data() {
  data_.Clear();
}
inline const ::MSG::Dungeon_DungeonTable& Dungeon::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.Dungeon.Data)
  return data_.Get(index);
}
inline ::MSG::Dungeon_DungeonTable* Dungeon::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.Dungeon.Data)
  return data_.Mutable(index);
}
inline ::MSG::Dungeon_DungeonTable* Dungeon::add_data() {
  // @@protoc_insertion_point(field_add:MSG.Dungeon.Data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MSG::Dungeon_DungeonTable >*
Dungeon::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.Dungeon.Data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG::Dungeon_DungeonTable >&
Dungeon::data() const {
  // @@protoc_insertion_point(field_list:MSG.Dungeon.Data)
  return data_;
}

// -------------------------------------------------------------------

// Item_ItemTable

// optional uint32 No = 1;
inline void Item_ItemTable::clear_no() {
  no_ = 0u;
}
inline ::google::protobuf::uint32 Item_ItemTable::no() const {
  // @@protoc_insertion_point(field_get:MSG.Item.ItemTable.No)
  return no_;
}
inline void Item_ItemTable::set_no(::google::protobuf::uint32 value) {
  
  no_ = value;
  // @@protoc_insertion_point(field_set:MSG.Item.ItemTable.No)
}

// optional string Name = 2;
inline void Item_ItemTable::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Item_ItemTable::name() const {
  // @@protoc_insertion_point(field_get:MSG.Item.ItemTable.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Item_ItemTable::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Item.ItemTable.Name)
}
inline void Item_ItemTable::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Item.ItemTable.Name)
}
inline void Item_ItemTable::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Item.ItemTable.Name)
}
inline ::std::string* Item_ItemTable::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Item.ItemTable.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Item_ItemTable::release_name() {
  // @@protoc_insertion_point(field_release:MSG.Item.ItemTable.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Item_ItemTable::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.Item.ItemTable.Name)
}

// optional string Category = 3;
inline void Item_ItemTable::clear_category() {
  category_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Item_ItemTable::category() const {
  // @@protoc_insertion_point(field_get:MSG.Item.ItemTable.Category)
  return category_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Item_ItemTable::set_category(const ::std::string& value) {
  
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Item.ItemTable.Category)
}
inline void Item_ItemTable::set_category(const char* value) {
  
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Item.ItemTable.Category)
}
inline void Item_ItemTable::set_category(const char* value, size_t size) {
  
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Item.ItemTable.Category)
}
inline ::std::string* Item_ItemTable::mutable_category() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Item.ItemTable.Category)
  return category_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Item_ItemTable::release_category() {
  // @@protoc_insertion_point(field_release:MSG.Item.ItemTable.Category)
  
  return category_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Item_ItemTable::set_allocated_category(::std::string* category) {
  if (category != NULL) {
    
  } else {
    
  }
  category_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), category);
  // @@protoc_insertion_point(field_set_allocated:MSG.Item.ItemTable.Category)
}

// optional uint32 CharNo = 4;
inline void Item_ItemTable::clear_charno() {
  charno_ = 0u;
}
inline ::google::protobuf::uint32 Item_ItemTable::charno() const {
  // @@protoc_insertion_point(field_get:MSG.Item.ItemTable.CharNo)
  return charno_;
}
inline void Item_ItemTable::set_charno(::google::protobuf::uint32 value) {
  
  charno_ = value;
  // @@protoc_insertion_point(field_set:MSG.Item.ItemTable.CharNo)
}

// optional string Stat = 5;
inline void Item_ItemTable::clear_stat() {
  stat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Item_ItemTable::stat() const {
  // @@protoc_insertion_point(field_get:MSG.Item.ItemTable.Stat)
  return stat_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Item_ItemTable::set_stat(const ::std::string& value) {
  
  stat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Item.ItemTable.Stat)
}
inline void Item_ItemTable::set_stat(const char* value) {
  
  stat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Item.ItemTable.Stat)
}
inline void Item_ItemTable::set_stat(const char* value, size_t size) {
  
  stat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Item.ItemTable.Stat)
}
inline ::std::string* Item_ItemTable::mutable_stat() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Item.ItemTable.Stat)
  return stat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Item_ItemTable::release_stat() {
  // @@protoc_insertion_point(field_release:MSG.Item.ItemTable.Stat)
  
  return stat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Item_ItemTable::set_allocated_stat(::std::string* stat) {
  if (stat != NULL) {
    
  } else {
    
  }
  stat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stat);
  // @@protoc_insertion_point(field_set_allocated:MSG.Item.ItemTable.Stat)
}

// optional uint32 Value = 6;
inline void Item_ItemTable::clear_value() {
  value_ = 0u;
}
inline ::google::protobuf::uint32 Item_ItemTable::value() const {
  // @@protoc_insertion_point(field_get:MSG.Item.ItemTable.Value)
  return value_;
}
inline void Item_ItemTable::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:MSG.Item.ItemTable.Value)
}

// -------------------------------------------------------------------

// Item

// optional string TableName = 1;
inline void Item::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Item::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.Item.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Item::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Item.TableName)
}
inline void Item::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Item.TableName)
}
inline void Item::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Item.TableName)
}
inline ::std::string* Item::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Item.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Item::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.Item.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Item::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.Item.TableName)
}

// repeated .MSG.Item.ItemTable Data = 2;
inline int Item::data_size() const {
  return data_.size();
}
inline void Item::clear_data() {
  data_.Clear();
}
inline const ::MSG::Item_ItemTable& Item::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.Item.Data)
  return data_.Get(index);
}
inline ::MSG::Item_ItemTable* Item::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.Item.Data)
  return data_.Mutable(index);
}
inline ::MSG::Item_ItemTable* Item::add_data() {
  // @@protoc_insertion_point(field_add:MSG.Item.Data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MSG::Item_ItemTable >*
Item::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.Item.Data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG::Item_ItemTable >&
Item::data() const {
  // @@protoc_insertion_point(field_list:MSG.Item.Data)
  return data_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace MSG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SimTable_2eproto__INCLUDED
