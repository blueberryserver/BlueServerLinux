// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SimTable.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SimTable.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MSG {

namespace {

const ::google::protobuf::Descriptor* Char_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Char_reflection_ = NULL;
const ::google::protobuf::Descriptor* Char_CharacterTable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Char_CharacterTable_reflection_ = NULL;
const ::google::protobuf::Descriptor* Product_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Product_reflection_ = NULL;
const ::google::protobuf::Descriptor* Product_ProductTable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Product_ProductTable_reflection_ = NULL;
const ::google::protobuf::Descriptor* WarriorStat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WarriorStat_reflection_ = NULL;
const ::google::protobuf::Descriptor* WarriorStat_WarriorStatTable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WarriorStat_WarriorStatTable_reflection_ = NULL;
const ::google::protobuf::Descriptor* ArcherStat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ArcherStat_reflection_ = NULL;
const ::google::protobuf::Descriptor* ArcherStat_ArcherStatTable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ArcherStat_ArcherStatTable_reflection_ = NULL;
const ::google::protobuf::Descriptor* CharTier_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CharTier_reflection_ = NULL;
const ::google::protobuf::Descriptor* CharTier_CharTierTable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CharTier_CharTierTable_reflection_ = NULL;
const ::google::protobuf::Descriptor* DungeonTier_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DungeonTier_reflection_ = NULL;
const ::google::protobuf::Descriptor* DungeonTier_DungeonTierTable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DungeonTier_DungeonTierTable_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobAStat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobAStat_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobAStat_MobAStatTable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobAStat_MobAStatTable_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobBStat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobBStat_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobBStat_MobBStatTable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobBStat_MobBStatTable_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobCStat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobCStat_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobCStat_MobCStatTable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobCStat_MobCStatTable_reflection_ = NULL;
const ::google::protobuf::Descriptor* Dungeon_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Dungeon_reflection_ = NULL;
const ::google::protobuf::Descriptor* Dungeon_DungeonTable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Dungeon_DungeonTable_reflection_ = NULL;
const ::google::protobuf::Descriptor* Item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Item_reflection_ = NULL;
const ::google::protobuf::Descriptor* Item_ItemTable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Item_ItemTable_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_SimTable_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_SimTable_2eproto() {
  protobuf_AddDesc_SimTable_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "SimTable.proto");
  GOOGLE_CHECK(file != NULL);
  Char_descriptor_ = file->message_type(0);
  static const int Char_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Char, tablename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Char, data_),
  };
  Char_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Char_descriptor_,
      Char::default_instance_,
      Char_offsets_,
      -1,
      -1,
      -1,
      sizeof(Char),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Char, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Char, _is_default_instance_));
  Char_CharacterTable_descriptor_ = Char_descriptor_->nested_type(0);
  static const int Char_CharacterTable_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Char_CharacterTable, no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Char_CharacterTable, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Char_CharacterTable, attackrange_),
  };
  Char_CharacterTable_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Char_CharacterTable_descriptor_,
      Char_CharacterTable::default_instance_,
      Char_CharacterTable_offsets_,
      -1,
      -1,
      -1,
      sizeof(Char_CharacterTable),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Char_CharacterTable, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Char_CharacterTable, _is_default_instance_));
  Product_descriptor_ = file->message_type(1);
  static const int Product_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Product, tablename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Product, data_),
  };
  Product_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Product_descriptor_,
      Product::default_instance_,
      Product_offsets_,
      -1,
      -1,
      -1,
      sizeof(Product),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Product, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Product, _is_default_instance_));
  Product_ProductTable_descriptor_ = Product_descriptor_->nested_type(0);
  static const int Product_ProductTable_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Product_ProductTable, no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Product_ProductTable, productcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Product_ProductTable, charno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Product_ProductTable, vctype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Product_ProductTable, value_),
  };
  Product_ProductTable_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Product_ProductTable_descriptor_,
      Product_ProductTable::default_instance_,
      Product_ProductTable_offsets_,
      -1,
      -1,
      -1,
      sizeof(Product_ProductTable),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Product_ProductTable, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Product_ProductTable, _is_default_instance_));
  WarriorStat_descriptor_ = file->message_type(2);
  static const int WarriorStat_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarriorStat, tablename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarriorStat, data_),
  };
  WarriorStat_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WarriorStat_descriptor_,
      WarriorStat::default_instance_,
      WarriorStat_offsets_,
      -1,
      -1,
      -1,
      sizeof(WarriorStat),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarriorStat, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarriorStat, _is_default_instance_));
  WarriorStat_WarriorStatTable_descriptor_ = WarriorStat_descriptor_->nested_type(0);
  static const int WarriorStat_WarriorStatTable_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarriorStat_WarriorStatTable, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarriorStat_WarriorStatTable, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarriorStat_WarriorStatTable, atk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarriorStat_WarriorStatTable, def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarriorStat_WarriorStatTable, hp_),
  };
  WarriorStat_WarriorStatTable_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WarriorStat_WarriorStatTable_descriptor_,
      WarriorStat_WarriorStatTable::default_instance_,
      WarriorStat_WarriorStatTable_offsets_,
      -1,
      -1,
      -1,
      sizeof(WarriorStat_WarriorStatTable),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarriorStat_WarriorStatTable, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarriorStat_WarriorStatTable, _is_default_instance_));
  ArcherStat_descriptor_ = file->message_type(3);
  static const int ArcherStat_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArcherStat, tablename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArcherStat, data_),
  };
  ArcherStat_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ArcherStat_descriptor_,
      ArcherStat::default_instance_,
      ArcherStat_offsets_,
      -1,
      -1,
      -1,
      sizeof(ArcherStat),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArcherStat, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArcherStat, _is_default_instance_));
  ArcherStat_ArcherStatTable_descriptor_ = ArcherStat_descriptor_->nested_type(0);
  static const int ArcherStat_ArcherStatTable_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArcherStat_ArcherStatTable, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArcherStat_ArcherStatTable, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArcherStat_ArcherStatTable, atk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArcherStat_ArcherStatTable, def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArcherStat_ArcherStatTable, hp_),
  };
  ArcherStat_ArcherStatTable_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ArcherStat_ArcherStatTable_descriptor_,
      ArcherStat_ArcherStatTable::default_instance_,
      ArcherStat_ArcherStatTable_offsets_,
      -1,
      -1,
      -1,
      sizeof(ArcherStat_ArcherStatTable),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArcherStat_ArcherStatTable, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArcherStat_ArcherStatTable, _is_default_instance_));
  CharTier_descriptor_ = file->message_type(4);
  static const int CharTier_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharTier, tablename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharTier, data_),
  };
  CharTier_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CharTier_descriptor_,
      CharTier::default_instance_,
      CharTier_offsets_,
      -1,
      -1,
      -1,
      sizeof(CharTier),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharTier, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharTier, _is_default_instance_));
  CharTier_CharTierTable_descriptor_ = CharTier_descriptor_->nested_type(0);
  static const int CharTier_CharTierTable_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharTier_CharTierTable, tier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharTier_CharTierTable, buff1type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharTier_CharTierTable, buff1value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharTier_CharTierTable, buff2type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharTier_CharTierTable, buff2value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharTier_CharTierTable, buff3type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharTier_CharTierTable, buff3value_),
  };
  CharTier_CharTierTable_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CharTier_CharTierTable_descriptor_,
      CharTier_CharTierTable::default_instance_,
      CharTier_CharTierTable_offsets_,
      -1,
      -1,
      -1,
      sizeof(CharTier_CharTierTable),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharTier_CharTierTable, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharTier_CharTierTable, _is_default_instance_));
  DungeonTier_descriptor_ = file->message_type(5);
  static const int DungeonTier_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonTier, tablename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonTier, data_),
  };
  DungeonTier_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DungeonTier_descriptor_,
      DungeonTier::default_instance_,
      DungeonTier_offsets_,
      -1,
      -1,
      -1,
      sizeof(DungeonTier),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonTier, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonTier, _is_default_instance_));
  DungeonTier_DungeonTierTable_descriptor_ = DungeonTier_descriptor_->nested_type(0);
  static const int DungeonTier_DungeonTierTable_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonTier_DungeonTierTable, tier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonTier_DungeonTierTable, buff1type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonTier_DungeonTierTable, buff1value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonTier_DungeonTierTable, buff2type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonTier_DungeonTierTable, buff2value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonTier_DungeonTierTable, buff3type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonTier_DungeonTierTable, buff3value_),
  };
  DungeonTier_DungeonTierTable_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DungeonTier_DungeonTierTable_descriptor_,
      DungeonTier_DungeonTierTable::default_instance_,
      DungeonTier_DungeonTierTable_offsets_,
      -1,
      -1,
      -1,
      sizeof(DungeonTier_DungeonTierTable),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonTier_DungeonTierTable, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonTier_DungeonTierTable, _is_default_instance_));
  MobAStat_descriptor_ = file->message_type(6);
  static const int MobAStat_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobAStat, tablename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobAStat, data_),
  };
  MobAStat_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MobAStat_descriptor_,
      MobAStat::default_instance_,
      MobAStat_offsets_,
      -1,
      -1,
      -1,
      sizeof(MobAStat),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobAStat, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobAStat, _is_default_instance_));
  MobAStat_MobAStatTable_descriptor_ = MobAStat_descriptor_->nested_type(0);
  static const int MobAStat_MobAStatTable_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobAStat_MobAStatTable, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobAStat_MobAStatTable, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobAStat_MobAStatTable, atk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobAStat_MobAStatTable, def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobAStat_MobAStatTable, hp_),
  };
  MobAStat_MobAStatTable_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MobAStat_MobAStatTable_descriptor_,
      MobAStat_MobAStatTable::default_instance_,
      MobAStat_MobAStatTable_offsets_,
      -1,
      -1,
      -1,
      sizeof(MobAStat_MobAStatTable),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobAStat_MobAStatTable, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobAStat_MobAStatTable, _is_default_instance_));
  MobBStat_descriptor_ = file->message_type(7);
  static const int MobBStat_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobBStat, tablename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobBStat, data_),
  };
  MobBStat_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MobBStat_descriptor_,
      MobBStat::default_instance_,
      MobBStat_offsets_,
      -1,
      -1,
      -1,
      sizeof(MobBStat),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobBStat, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobBStat, _is_default_instance_));
  MobBStat_MobBStatTable_descriptor_ = MobBStat_descriptor_->nested_type(0);
  static const int MobBStat_MobBStatTable_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobBStat_MobBStatTable, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobBStat_MobBStatTable, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobBStat_MobBStatTable, atk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobBStat_MobBStatTable, def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobBStat_MobBStatTable, hp_),
  };
  MobBStat_MobBStatTable_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MobBStat_MobBStatTable_descriptor_,
      MobBStat_MobBStatTable::default_instance_,
      MobBStat_MobBStatTable_offsets_,
      -1,
      -1,
      -1,
      sizeof(MobBStat_MobBStatTable),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobBStat_MobBStatTable, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobBStat_MobBStatTable, _is_default_instance_));
  MobCStat_descriptor_ = file->message_type(8);
  static const int MobCStat_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobCStat, tablename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobCStat, data_),
  };
  MobCStat_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MobCStat_descriptor_,
      MobCStat::default_instance_,
      MobCStat_offsets_,
      -1,
      -1,
      -1,
      sizeof(MobCStat),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobCStat, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobCStat, _is_default_instance_));
  MobCStat_MobCStatTable_descriptor_ = MobCStat_descriptor_->nested_type(0);
  static const int MobCStat_MobCStatTable_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobCStat_MobCStatTable, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobCStat_MobCStatTable, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobCStat_MobCStatTable, atk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobCStat_MobCStatTable, def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobCStat_MobCStatTable, hp_),
  };
  MobCStat_MobCStatTable_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MobCStat_MobCStatTable_descriptor_,
      MobCStat_MobCStatTable::default_instance_,
      MobCStat_MobCStatTable_offsets_,
      -1,
      -1,
      -1,
      sizeof(MobCStat_MobCStatTable),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobCStat_MobCStatTable, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobCStat_MobCStatTable, _is_default_instance_));
  Dungeon_descriptor_ = file->message_type(9);
  static const int Dungeon_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dungeon, tablename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dungeon, data_),
  };
  Dungeon_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Dungeon_descriptor_,
      Dungeon::default_instance_,
      Dungeon_offsets_,
      -1,
      -1,
      -1,
      sizeof(Dungeon),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dungeon, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dungeon, _is_default_instance_));
  Dungeon_DungeonTable_descriptor_ = Dungeon_descriptor_->nested_type(0);
  static const int Dungeon_DungeonTable_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dungeon_DungeonTable, no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dungeon_DungeonTable, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dungeon_DungeonTable, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dungeon_DungeonTable, reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dungeon_DungeonTable, mobalv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dungeon_DungeonTable, mobblv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dungeon_DungeonTable, mobclv_),
  };
  Dungeon_DungeonTable_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Dungeon_DungeonTable_descriptor_,
      Dungeon_DungeonTable::default_instance_,
      Dungeon_DungeonTable_offsets_,
      -1,
      -1,
      -1,
      sizeof(Dungeon_DungeonTable),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dungeon_DungeonTable, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dungeon_DungeonTable, _is_default_instance_));
  Item_descriptor_ = file->message_type(10);
  static const int Item_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, tablename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, data_),
  };
  Item_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Item_descriptor_,
      Item::default_instance_,
      Item_offsets_,
      -1,
      -1,
      -1,
      sizeof(Item),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, _is_default_instance_));
  Item_ItemTable_descriptor_ = Item_descriptor_->nested_type(0);
  static const int Item_ItemTable_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item_ItemTable, no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item_ItemTable, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item_ItemTable, category_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item_ItemTable, charno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item_ItemTable, stat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item_ItemTable, value_),
  };
  Item_ItemTable_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Item_ItemTable_descriptor_,
      Item_ItemTable::default_instance_,
      Item_ItemTable_offsets_,
      -1,
      -1,
      -1,
      sizeof(Item_ItemTable),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item_ItemTable, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item_ItemTable, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_SimTable_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Char_descriptor_, &Char::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Char_CharacterTable_descriptor_, &Char_CharacterTable::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Product_descriptor_, &Product::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Product_ProductTable_descriptor_, &Product_ProductTable::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WarriorStat_descriptor_, &WarriorStat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WarriorStat_WarriorStatTable_descriptor_, &WarriorStat_WarriorStatTable::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ArcherStat_descriptor_, &ArcherStat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ArcherStat_ArcherStatTable_descriptor_, &ArcherStat_ArcherStatTable::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CharTier_descriptor_, &CharTier::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CharTier_CharTierTable_descriptor_, &CharTier_CharTierTable::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DungeonTier_descriptor_, &DungeonTier::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DungeonTier_DungeonTierTable_descriptor_, &DungeonTier_DungeonTierTable::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MobAStat_descriptor_, &MobAStat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MobAStat_MobAStatTable_descriptor_, &MobAStat_MobAStatTable::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MobBStat_descriptor_, &MobBStat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MobBStat_MobBStatTable_descriptor_, &MobBStat_MobBStatTable::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MobCStat_descriptor_, &MobCStat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MobCStat_MobCStatTable_descriptor_, &MobCStat_MobCStatTable::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Dungeon_descriptor_, &Dungeon::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Dungeon_DungeonTable_descriptor_, &Dungeon_DungeonTable::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Item_descriptor_, &Item::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Item_ItemTable_descriptor_, &Item_ItemTable::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_SimTable_2eproto() {
  delete Char::default_instance_;
  delete Char_reflection_;
  delete Char_CharacterTable::default_instance_;
  delete Char_CharacterTable_reflection_;
  delete Product::default_instance_;
  delete Product_reflection_;
  delete Product_ProductTable::default_instance_;
  delete Product_ProductTable_reflection_;
  delete WarriorStat::default_instance_;
  delete WarriorStat_reflection_;
  delete WarriorStat_WarriorStatTable::default_instance_;
  delete WarriorStat_WarriorStatTable_reflection_;
  delete ArcherStat::default_instance_;
  delete ArcherStat_reflection_;
  delete ArcherStat_ArcherStatTable::default_instance_;
  delete ArcherStat_ArcherStatTable_reflection_;
  delete CharTier::default_instance_;
  delete CharTier_reflection_;
  delete CharTier_CharTierTable::default_instance_;
  delete CharTier_CharTierTable_reflection_;
  delete DungeonTier::default_instance_;
  delete DungeonTier_reflection_;
  delete DungeonTier_DungeonTierTable::default_instance_;
  delete DungeonTier_DungeonTierTable_reflection_;
  delete MobAStat::default_instance_;
  delete MobAStat_reflection_;
  delete MobAStat_MobAStatTable::default_instance_;
  delete MobAStat_MobAStatTable_reflection_;
  delete MobBStat::default_instance_;
  delete MobBStat_reflection_;
  delete MobBStat_MobBStatTable::default_instance_;
  delete MobBStat_MobBStatTable_reflection_;
  delete MobCStat::default_instance_;
  delete MobCStat_reflection_;
  delete MobCStat_MobCStatTable::default_instance_;
  delete MobCStat_MobCStatTable_reflection_;
  delete Dungeon::default_instance_;
  delete Dungeon_reflection_;
  delete Dungeon_DungeonTable::default_instance_;
  delete Dungeon_DungeonTable_reflection_;
  delete Item::default_instance_;
  delete Item_reflection_;
  delete Item_ItemTable::default_instance_;
  delete Item_ItemTable_reflection_;
}

void protobuf_AddDesc_SimTable_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_SimTable_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016SimTable.proto\022\003MSG\"\202\001\n\004Char\022\021\n\tTableN"
    "ame\030\001 \001(\t\022&\n\004Data\030\002 \003(\0132\030.MSG.Char.Chara"
    "cterTable\032\?\n\016CharacterTable\022\n\n\002No\030\001 \001(\r\022"
    "\014\n\004Name\030\002 \001(\t\022\023\n\013AttackRange\030\003 \001(\r\"\245\001\n\007P"
    "roduct\022\021\n\tTableName\030\001 \001(\t\022\'\n\004Data\030\002 \003(\0132"
    "\031.MSG.Product.ProductTable\032^\n\014ProductTab"
    "le\022\n\n\002No\030\001 \001(\r\022\023\n\013ProductCode\030\002 \001(\t\022\016\n\006C"
    "harNo\030\003 \001(\r\022\016\n\006VCType\030\004 \001(\t\022\r\n\005Value\030\005 \001"
    "(\r\"\247\001\n\013WarriorStat\022\021\n\tTableName\030\001 \001(\t\022/\n"
    "\004Data\030\002 \003(\0132!.MSG.WarriorStat.WarriorSta"
    "tTable\032T\n\020WarriorStatTable\022\r\n\005Level\030\001 \001("
    "\r\022\013\n\003Exp\030\002 \001(\r\022\013\n\003Atk\030\003 \001(\r\022\013\n\003Def\030\004 \001(\r"
    "\022\n\n\002Hp\030\005 \001(\r\"\243\001\n\nArcherStat\022\021\n\tTableName"
    "\030\001 \001(\t\022-\n\004Data\030\002 \003(\0132\037.MSG.ArcherStat.Ar"
    "cherStatTable\032S\n\017ArcherStatTable\022\r\n\005Leve"
    "l\030\001 \001(\r\022\013\n\003Exp\030\002 \001(\r\022\013\n\003Atk\030\003 \001(\r\022\013\n\003Def"
    "\030\004 \001(\r\022\n\n\002Hp\030\005 \001(\r\"\335\001\n\010CharTier\022\021\n\tTable"
    "Name\030\001 \001(\t\022)\n\004Data\030\002 \003(\0132\033.MSG.CharTier."
    "CharTierTable\032\222\001\n\rCharTierTable\022\014\n\004Tier\030"
    "\001 \001(\r\022\021\n\tBuff1Type\030\002 \001(\t\022\022\n\nBuff1Value\030\003"
    " \001(\t\022\021\n\tBuff2Type\030\004 \001(\t\022\022\n\nBuff2Value\030\005 "
    "\001(\t\022\021\n\tBuff3Type\030\006 \001(\t\022\022\n\nBuff3Value\030\007 \001"
    "(\t\"\351\001\n\013DungeonTier\022\021\n\tTableName\030\001 \001(\t\022/\n"
    "\004Data\030\002 \003(\0132!.MSG.DungeonTier.DungeonTie"
    "rTable\032\225\001\n\020DungeonTierTable\022\014\n\004Tier\030\001 \001("
    "\r\022\021\n\tBuff1Type\030\002 \001(\t\022\022\n\nBuff1Value\030\003 \001(\t"
    "\022\021\n\tBuff2Type\030\004 \001(\t\022\022\n\nBuff2Value\030\005 \001(\t\022"
    "\021\n\tBuff3Type\030\006 \001(\t\022\022\n\nBuff3Value\030\007 \001(\t\"\233"
    "\001\n\010MobAStat\022\021\n\tTableName\030\001 \001(\t\022)\n\004Data\030\002"
    " \003(\0132\033.MSG.MobAStat.MobAStatTable\032Q\n\rMob"
    "AStatTable\022\r\n\005Level\030\001 \001(\r\022\013\n\003Exp\030\002 \001(\r\022\013"
    "\n\003Atk\030\003 \001(\r\022\013\n\003Def\030\004 \001(\r\022\n\n\002Hp\030\005 \001(\r\"\233\001\n"
    "\010MobBStat\022\021\n\tTableName\030\001 \001(\t\022)\n\004Data\030\002 \003"
    "(\0132\033.MSG.MobBStat.MobBStatTable\032Q\n\rMobBS"
    "tatTable\022\r\n\005Level\030\001 \001(\r\022\013\n\003Exp\030\002 \001(\r\022\013\n\003"
    "Atk\030\003 \001(\r\022\013\n\003Def\030\004 \001(\r\022\n\n\002Hp\030\005 \001(\r\"\233\001\n\010M"
    "obCStat\022\021\n\tTableName\030\001 \001(\t\022)\n\004Data\030\002 \003(\013"
    "2\033.MSG.MobCStat.MobCStatTable\032Q\n\rMobCSta"
    "tTable\022\r\n\005Level\030\001 \001(\r\022\013\n\003Exp\030\002 \001(\r\022\013\n\003At"
    "k\030\003 \001(\r\022\013\n\003Def\030\004 \001(\r\022\n\n\002Hp\030\005 \001(\r\"\276\001\n\007Dun"
    "geon\022\021\n\tTableName\030\001 \001(\t\022\'\n\004Data\030\002 \003(\0132\031."
    "MSG.Dungeon.DungeonTable\032w\n\014DungeonTable"
    "\022\n\n\002No\030\001 \001(\r\022\014\n\004Name\030\002 \001(\t\022\r\n\005Level\030\003 \001("
    "\r\022\016\n\006Reward\030\004 \001(\r\022\016\n\006MobALv\030\005 \001(\r\022\016\n\006Mob"
    "BLv\030\006 \001(\r\022\016\n\006MobCLv\030\007 \001(\r\"\242\001\n\004Item\022\021\n\tTa"
    "bleName\030\001 \001(\t\022!\n\004Data\030\002 \003(\0132\023.MSG.Item.I"
    "temTable\032d\n\tItemTable\022\n\n\002No\030\001 \001(\r\022\014\n\004Nam"
    "e\030\002 \001(\t\022\020\n\010Category\030\003 \001(\t\022\016\n\006CharNo\030\004 \001("
    "\r\022\014\n\004Stat\030\005 \001(\t\022\r\n\005Value\030\006 \001(\rb\006proto3", 1958);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SimTable.proto", &protobuf_RegisterTypes);
  Char::default_instance_ = new Char();
  Char_CharacterTable::default_instance_ = new Char_CharacterTable();
  Product::default_instance_ = new Product();
  Product_ProductTable::default_instance_ = new Product_ProductTable();
  WarriorStat::default_instance_ = new WarriorStat();
  WarriorStat_WarriorStatTable::default_instance_ = new WarriorStat_WarriorStatTable();
  ArcherStat::default_instance_ = new ArcherStat();
  ArcherStat_ArcherStatTable::default_instance_ = new ArcherStat_ArcherStatTable();
  CharTier::default_instance_ = new CharTier();
  CharTier_CharTierTable::default_instance_ = new CharTier_CharTierTable();
  DungeonTier::default_instance_ = new DungeonTier();
  DungeonTier_DungeonTierTable::default_instance_ = new DungeonTier_DungeonTierTable();
  MobAStat::default_instance_ = new MobAStat();
  MobAStat_MobAStatTable::default_instance_ = new MobAStat_MobAStatTable();
  MobBStat::default_instance_ = new MobBStat();
  MobBStat_MobBStatTable::default_instance_ = new MobBStat_MobBStatTable();
  MobCStat::default_instance_ = new MobCStat();
  MobCStat_MobCStatTable::default_instance_ = new MobCStat_MobCStatTable();
  Dungeon::default_instance_ = new Dungeon();
  Dungeon_DungeonTable::default_instance_ = new Dungeon_DungeonTable();
  Item::default_instance_ = new Item();
  Item_ItemTable::default_instance_ = new Item_ItemTable();
  Char::default_instance_->InitAsDefaultInstance();
  Char_CharacterTable::default_instance_->InitAsDefaultInstance();
  Product::default_instance_->InitAsDefaultInstance();
  Product_ProductTable::default_instance_->InitAsDefaultInstance();
  WarriorStat::default_instance_->InitAsDefaultInstance();
  WarriorStat_WarriorStatTable::default_instance_->InitAsDefaultInstance();
  ArcherStat::default_instance_->InitAsDefaultInstance();
  ArcherStat_ArcherStatTable::default_instance_->InitAsDefaultInstance();
  CharTier::default_instance_->InitAsDefaultInstance();
  CharTier_CharTierTable::default_instance_->InitAsDefaultInstance();
  DungeonTier::default_instance_->InitAsDefaultInstance();
  DungeonTier_DungeonTierTable::default_instance_->InitAsDefaultInstance();
  MobAStat::default_instance_->InitAsDefaultInstance();
  MobAStat_MobAStatTable::default_instance_->InitAsDefaultInstance();
  MobBStat::default_instance_->InitAsDefaultInstance();
  MobBStat_MobBStatTable::default_instance_->InitAsDefaultInstance();
  MobCStat::default_instance_->InitAsDefaultInstance();
  MobCStat_MobCStatTable::default_instance_->InitAsDefaultInstance();
  Dungeon::default_instance_->InitAsDefaultInstance();
  Dungeon_DungeonTable::default_instance_->InitAsDefaultInstance();
  Item::default_instance_->InitAsDefaultInstance();
  Item_ItemTable::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_SimTable_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_SimTable_2eproto {
  StaticDescriptorInitializer_SimTable_2eproto() {
    protobuf_AddDesc_SimTable_2eproto();
  }
} static_descriptor_initializer_SimTable_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Char_CharacterTable::kNoFieldNumber;
const int Char_CharacterTable::kNameFieldNumber;
const int Char_CharacterTable::kAttackRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Char_CharacterTable::Char_CharacterTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.Char.CharacterTable)
}

void Char_CharacterTable::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Char_CharacterTable::Char_CharacterTable(const Char_CharacterTable& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.Char.CharacterTable)
}

void Char_CharacterTable::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  no_ = 0u;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attackrange_ = 0u;
}

Char_CharacterTable::~Char_CharacterTable() {
  // @@protoc_insertion_point(destructor:MSG.Char.CharacterTable)
  SharedDtor();
}

void Char_CharacterTable::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Char_CharacterTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Char_CharacterTable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Char_CharacterTable_descriptor_;
}

const Char_CharacterTable& Char_CharacterTable::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

Char_CharacterTable* Char_CharacterTable::default_instance_ = NULL;

Char_CharacterTable* Char_CharacterTable::New(::google::protobuf::Arena* arena) const {
  Char_CharacterTable* n = new Char_CharacterTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Char_CharacterTable::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.Char.CharacterTable)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Char_CharacterTable, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Char_CharacterTable*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(no_, attackrange_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Char_CharacterTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.Char.CharacterTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 No = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &no_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Name;
        break;
      }

      // optional string Name = 2;
      case 2: {
        if (tag == 18) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.Char.CharacterTable.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_AttackRange;
        break;
      }

      // optional uint32 AttackRange = 3;
      case 3: {
        if (tag == 24) {
         parse_AttackRange:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attackrange_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.Char.CharacterTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.Char.CharacterTable)
  return false;
#undef DO_
}

void Char_CharacterTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.Char.CharacterTable)
  // optional uint32 No = 1;
  if (this->no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->no(), output);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Char.CharacterTable.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional uint32 AttackRange = 3;
  if (this->attackrange() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->attackrange(), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.Char.CharacterTable)
}

::google::protobuf::uint8* Char_CharacterTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.Char.CharacterTable)
  // optional uint32 No = 1;
  if (this->no() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->no(), target);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Char.CharacterTable.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional uint32 AttackRange = 3;
  if (this->attackrange() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->attackrange(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.Char.CharacterTable)
  return target;
}

int Char_CharacterTable::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.Char.CharacterTable)
  int total_size = 0;

  // optional uint32 No = 1;
  if (this->no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->no());
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional uint32 AttackRange = 3;
  if (this->attackrange() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->attackrange());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Char_CharacterTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.Char.CharacterTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Char_CharacterTable* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Char_CharacterTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.Char.CharacterTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.Char.CharacterTable)
    MergeFrom(*source);
  }
}

void Char_CharacterTable::MergeFrom(const Char_CharacterTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.Char.CharacterTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.no() != 0) {
    set_no(from.no());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.attackrange() != 0) {
    set_attackrange(from.attackrange());
  }
}

void Char_CharacterTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.Char.CharacterTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Char_CharacterTable::CopyFrom(const Char_CharacterTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.Char.CharacterTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Char_CharacterTable::IsInitialized() const {

  return true;
}

void Char_CharacterTable::Swap(Char_CharacterTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Char_CharacterTable::InternalSwap(Char_CharacterTable* other) {
  std::swap(no_, other->no_);
  name_.Swap(&other->name_);
  std::swap(attackrange_, other->attackrange_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Char_CharacterTable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Char_CharacterTable_descriptor_;
  metadata.reflection = Char_CharacterTable_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Char::kTableNameFieldNumber;
const int Char::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Char::Char()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.Char)
}

void Char::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Char::Char(const Char& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.Char)
}

void Char::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Char::~Char() {
  // @@protoc_insertion_point(destructor:MSG.Char)
  SharedDtor();
}

void Char::SharedDtor() {
  tablename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Char::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Char::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Char_descriptor_;
}

const Char& Char::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

Char* Char::default_instance_ = NULL;

Char* Char::New(::google::protobuf::Arena* arena) const {
  Char* n = new Char;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Char::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.Char)
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.Clear();
}

bool Char::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.Char)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string TableName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tablename().data(), this->tablename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.Char.TableName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .MSG.Char.CharacterTable Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.Char)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.Char)
  return false;
#undef DO_
}

void Char::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.Char)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Char.TableName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tablename(), output);
  }

  // repeated .MSG.Char.CharacterTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.Char)
}

::google::protobuf::uint8* Char::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.Char)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Char.TableName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tablename(), target);
  }

  // repeated .MSG.Char.CharacterTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->data(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.Char)
  return target;
}

int Char::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.Char)
  int total_size = 0;

  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tablename());
  }

  // repeated .MSG.Char.CharacterTable Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Char::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.Char)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Char* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Char>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.Char)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.Char)
    MergeFrom(*source);
  }
}

void Char::MergeFrom(const Char& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.Char)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
  if (from.tablename().size() > 0) {

    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
}

void Char::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.Char)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Char::CopyFrom(const Char& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.Char)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Char::IsInitialized() const {

  return true;
}

void Char::Swap(Char* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Char::InternalSwap(Char* other) {
  tablename_.Swap(&other->tablename_);
  data_.UnsafeArenaSwap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Char::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Char_descriptor_;
  metadata.reflection = Char_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Char_CharacterTable

// optional uint32 No = 1;
void Char_CharacterTable::clear_no() {
  no_ = 0u;
}
 ::google::protobuf::uint32 Char_CharacterTable::no() const {
  // @@protoc_insertion_point(field_get:MSG.Char.CharacterTable.No)
  return no_;
}
 void Char_CharacterTable::set_no(::google::protobuf::uint32 value) {
  
  no_ = value;
  // @@protoc_insertion_point(field_set:MSG.Char.CharacterTable.No)
}

// optional string Name = 2;
void Char_CharacterTable::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Char_CharacterTable::name() const {
  // @@protoc_insertion_point(field_get:MSG.Char.CharacterTable.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Char_CharacterTable::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Char.CharacterTable.Name)
}
 void Char_CharacterTable::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Char.CharacterTable.Name)
}
 void Char_CharacterTable::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Char.CharacterTable.Name)
}
 ::std::string* Char_CharacterTable::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Char.CharacterTable.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Char_CharacterTable::release_name() {
  // @@protoc_insertion_point(field_release:MSG.Char.CharacterTable.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Char_CharacterTable::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.Char.CharacterTable.Name)
}

// optional uint32 AttackRange = 3;
void Char_CharacterTable::clear_attackrange() {
  attackrange_ = 0u;
}
 ::google::protobuf::uint32 Char_CharacterTable::attackrange() const {
  // @@protoc_insertion_point(field_get:MSG.Char.CharacterTable.AttackRange)
  return attackrange_;
}
 void Char_CharacterTable::set_attackrange(::google::protobuf::uint32 value) {
  
  attackrange_ = value;
  // @@protoc_insertion_point(field_set:MSG.Char.CharacterTable.AttackRange)
}

// -------------------------------------------------------------------

// Char

// optional string TableName = 1;
void Char::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Char::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.Char.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Char::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Char.TableName)
}
 void Char::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Char.TableName)
}
 void Char::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Char.TableName)
}
 ::std::string* Char::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Char.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Char::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.Char.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Char::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.Char.TableName)
}

// repeated .MSG.Char.CharacterTable Data = 2;
int Char::data_size() const {
  return data_.size();
}
void Char::clear_data() {
  data_.Clear();
}
const ::MSG::Char_CharacterTable& Char::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.Char.Data)
  return data_.Get(index);
}
::MSG::Char_CharacterTable* Char::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.Char.Data)
  return data_.Mutable(index);
}
::MSG::Char_CharacterTable* Char::add_data() {
  // @@protoc_insertion_point(field_add:MSG.Char.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::Char_CharacterTable >*
Char::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.Char.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::Char_CharacterTable >&
Char::data() const {
  // @@protoc_insertion_point(field_list:MSG.Char.Data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Product_ProductTable::kNoFieldNumber;
const int Product_ProductTable::kProductCodeFieldNumber;
const int Product_ProductTable::kCharNoFieldNumber;
const int Product_ProductTable::kVCTypeFieldNumber;
const int Product_ProductTable::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Product_ProductTable::Product_ProductTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.Product.ProductTable)
}

void Product_ProductTable::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Product_ProductTable::Product_ProductTable(const Product_ProductTable& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.Product.ProductTable)
}

void Product_ProductTable::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  no_ = 0u;
  productcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  charno_ = 0u;
  vctype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0u;
}

Product_ProductTable::~Product_ProductTable() {
  // @@protoc_insertion_point(destructor:MSG.Product.ProductTable)
  SharedDtor();
}

void Product_ProductTable::SharedDtor() {
  productcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vctype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Product_ProductTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Product_ProductTable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Product_ProductTable_descriptor_;
}

const Product_ProductTable& Product_ProductTable::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

Product_ProductTable* Product_ProductTable::default_instance_ = NULL;

Product_ProductTable* Product_ProductTable::New(::google::protobuf::Arena* arena) const {
  Product_ProductTable* n = new Product_ProductTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Product_ProductTable::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.Product.ProductTable)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Product_ProductTable, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Product_ProductTable*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(no_, charno_);
  productcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vctype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0u;

#undef ZR_HELPER_
#undef ZR_

}

bool Product_ProductTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.Product.ProductTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 No = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &no_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ProductCode;
        break;
      }

      // optional string ProductCode = 2;
      case 2: {
        if (tag == 18) {
         parse_ProductCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productcode().data(), this->productcode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.Product.ProductTable.ProductCode"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CharNo;
        break;
      }

      // optional uint32 CharNo = 3;
      case 3: {
        if (tag == 24) {
         parse_CharNo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &charno_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_VCType;
        break;
      }

      // optional string VCType = 4;
      case 4: {
        if (tag == 34) {
         parse_VCType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vctype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vctype().data(), this->vctype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.Product.ProductTable.VCType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Value;
        break;
      }

      // optional uint32 Value = 5;
      case 5: {
        if (tag == 40) {
         parse_Value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.Product.ProductTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.Product.ProductTable)
  return false;
#undef DO_
}

void Product_ProductTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.Product.ProductTable)
  // optional uint32 No = 1;
  if (this->no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->no(), output);
  }

  // optional string ProductCode = 2;
  if (this->productcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productcode().data(), this->productcode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Product.ProductTable.ProductCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->productcode(), output);
  }

  // optional uint32 CharNo = 3;
  if (this->charno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->charno(), output);
  }

  // optional string VCType = 4;
  if (this->vctype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vctype().data(), this->vctype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Product.ProductTable.VCType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->vctype(), output);
  }

  // optional uint32 Value = 5;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.Product.ProductTable)
}

::google::protobuf::uint8* Product_ProductTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.Product.ProductTable)
  // optional uint32 No = 1;
  if (this->no() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->no(), target);
  }

  // optional string ProductCode = 2;
  if (this->productcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productcode().data(), this->productcode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Product.ProductTable.ProductCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->productcode(), target);
  }

  // optional uint32 CharNo = 3;
  if (this->charno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->charno(), target);
  }

  // optional string VCType = 4;
  if (this->vctype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vctype().data(), this->vctype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Product.ProductTable.VCType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->vctype(), target);
  }

  // optional uint32 Value = 5;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.Product.ProductTable)
  return target;
}

int Product_ProductTable::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.Product.ProductTable)
  int total_size = 0;

  // optional uint32 No = 1;
  if (this->no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->no());
  }

  // optional string ProductCode = 2;
  if (this->productcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productcode());
  }

  // optional uint32 CharNo = 3;
  if (this->charno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->charno());
  }

  // optional string VCType = 4;
  if (this->vctype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vctype());
  }

  // optional uint32 Value = 5;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Product_ProductTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.Product.ProductTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Product_ProductTable* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Product_ProductTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.Product.ProductTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.Product.ProductTable)
    MergeFrom(*source);
  }
}

void Product_ProductTable::MergeFrom(const Product_ProductTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.Product.ProductTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.no() != 0) {
    set_no(from.no());
  }
  if (from.productcode().size() > 0) {

    productcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productcode_);
  }
  if (from.charno() != 0) {
    set_charno(from.charno());
  }
  if (from.vctype().size() > 0) {

    vctype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vctype_);
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Product_ProductTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.Product.ProductTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Product_ProductTable::CopyFrom(const Product_ProductTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.Product.ProductTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Product_ProductTable::IsInitialized() const {

  return true;
}

void Product_ProductTable::Swap(Product_ProductTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Product_ProductTable::InternalSwap(Product_ProductTable* other) {
  std::swap(no_, other->no_);
  productcode_.Swap(&other->productcode_);
  std::swap(charno_, other->charno_);
  vctype_.Swap(&other->vctype_);
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Product_ProductTable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Product_ProductTable_descriptor_;
  metadata.reflection = Product_ProductTable_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Product::kTableNameFieldNumber;
const int Product::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Product::Product()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.Product)
}

void Product::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Product::Product(const Product& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.Product)
}

void Product::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Product::~Product() {
  // @@protoc_insertion_point(destructor:MSG.Product)
  SharedDtor();
}

void Product::SharedDtor() {
  tablename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Product::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Product::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Product_descriptor_;
}

const Product& Product::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

Product* Product::default_instance_ = NULL;

Product* Product::New(::google::protobuf::Arena* arena) const {
  Product* n = new Product;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Product::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.Product)
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.Clear();
}

bool Product::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.Product)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string TableName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tablename().data(), this->tablename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.Product.TableName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .MSG.Product.ProductTable Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.Product)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.Product)
  return false;
#undef DO_
}

void Product::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.Product)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Product.TableName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tablename(), output);
  }

  // repeated .MSG.Product.ProductTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.Product)
}

::google::protobuf::uint8* Product::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.Product)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Product.TableName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tablename(), target);
  }

  // repeated .MSG.Product.ProductTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->data(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.Product)
  return target;
}

int Product::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.Product)
  int total_size = 0;

  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tablename());
  }

  // repeated .MSG.Product.ProductTable Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Product::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.Product)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Product* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Product>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.Product)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.Product)
    MergeFrom(*source);
  }
}

void Product::MergeFrom(const Product& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.Product)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
  if (from.tablename().size() > 0) {

    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
}

void Product::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.Product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Product::CopyFrom(const Product& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.Product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Product::IsInitialized() const {

  return true;
}

void Product::Swap(Product* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Product::InternalSwap(Product* other) {
  tablename_.Swap(&other->tablename_);
  data_.UnsafeArenaSwap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Product::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Product_descriptor_;
  metadata.reflection = Product_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Product_ProductTable

// optional uint32 No = 1;
void Product_ProductTable::clear_no() {
  no_ = 0u;
}
 ::google::protobuf::uint32 Product_ProductTable::no() const {
  // @@protoc_insertion_point(field_get:MSG.Product.ProductTable.No)
  return no_;
}
 void Product_ProductTable::set_no(::google::protobuf::uint32 value) {
  
  no_ = value;
  // @@protoc_insertion_point(field_set:MSG.Product.ProductTable.No)
}

// optional string ProductCode = 2;
void Product_ProductTable::clear_productcode() {
  productcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Product_ProductTable::productcode() const {
  // @@protoc_insertion_point(field_get:MSG.Product.ProductTable.ProductCode)
  return productcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Product_ProductTable::set_productcode(const ::std::string& value) {
  
  productcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Product.ProductTable.ProductCode)
}
 void Product_ProductTable::set_productcode(const char* value) {
  
  productcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Product.ProductTable.ProductCode)
}
 void Product_ProductTable::set_productcode(const char* value, size_t size) {
  
  productcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Product.ProductTable.ProductCode)
}
 ::std::string* Product_ProductTable::mutable_productcode() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Product.ProductTable.ProductCode)
  return productcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Product_ProductTable::release_productcode() {
  // @@protoc_insertion_point(field_release:MSG.Product.ProductTable.ProductCode)
  
  return productcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Product_ProductTable::set_allocated_productcode(::std::string* productcode) {
  if (productcode != NULL) {
    
  } else {
    
  }
  productcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productcode);
  // @@protoc_insertion_point(field_set_allocated:MSG.Product.ProductTable.ProductCode)
}

// optional uint32 CharNo = 3;
void Product_ProductTable::clear_charno() {
  charno_ = 0u;
}
 ::google::protobuf::uint32 Product_ProductTable::charno() const {
  // @@protoc_insertion_point(field_get:MSG.Product.ProductTable.CharNo)
  return charno_;
}
 void Product_ProductTable::set_charno(::google::protobuf::uint32 value) {
  
  charno_ = value;
  // @@protoc_insertion_point(field_set:MSG.Product.ProductTable.CharNo)
}

// optional string VCType = 4;
void Product_ProductTable::clear_vctype() {
  vctype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Product_ProductTable::vctype() const {
  // @@protoc_insertion_point(field_get:MSG.Product.ProductTable.VCType)
  return vctype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Product_ProductTable::set_vctype(const ::std::string& value) {
  
  vctype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Product.ProductTable.VCType)
}
 void Product_ProductTable::set_vctype(const char* value) {
  
  vctype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Product.ProductTable.VCType)
}
 void Product_ProductTable::set_vctype(const char* value, size_t size) {
  
  vctype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Product.ProductTable.VCType)
}
 ::std::string* Product_ProductTable::mutable_vctype() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Product.ProductTable.VCType)
  return vctype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Product_ProductTable::release_vctype() {
  // @@protoc_insertion_point(field_release:MSG.Product.ProductTable.VCType)
  
  return vctype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Product_ProductTable::set_allocated_vctype(::std::string* vctype) {
  if (vctype != NULL) {
    
  } else {
    
  }
  vctype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vctype);
  // @@protoc_insertion_point(field_set_allocated:MSG.Product.ProductTable.VCType)
}

// optional uint32 Value = 5;
void Product_ProductTable::clear_value() {
  value_ = 0u;
}
 ::google::protobuf::uint32 Product_ProductTable::value() const {
  // @@protoc_insertion_point(field_get:MSG.Product.ProductTable.Value)
  return value_;
}
 void Product_ProductTable::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:MSG.Product.ProductTable.Value)
}

// -------------------------------------------------------------------

// Product

// optional string TableName = 1;
void Product::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Product::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.Product.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Product::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Product.TableName)
}
 void Product::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Product.TableName)
}
 void Product::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Product.TableName)
}
 ::std::string* Product::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Product.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Product::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.Product.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Product::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.Product.TableName)
}

// repeated .MSG.Product.ProductTable Data = 2;
int Product::data_size() const {
  return data_.size();
}
void Product::clear_data() {
  data_.Clear();
}
const ::MSG::Product_ProductTable& Product::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.Product.Data)
  return data_.Get(index);
}
::MSG::Product_ProductTable* Product::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.Product.Data)
  return data_.Mutable(index);
}
::MSG::Product_ProductTable* Product::add_data() {
  // @@protoc_insertion_point(field_add:MSG.Product.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::Product_ProductTable >*
Product::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.Product.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::Product_ProductTable >&
Product::data() const {
  // @@protoc_insertion_point(field_list:MSG.Product.Data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WarriorStat_WarriorStatTable::kLevelFieldNumber;
const int WarriorStat_WarriorStatTable::kExpFieldNumber;
const int WarriorStat_WarriorStatTable::kAtkFieldNumber;
const int WarriorStat_WarriorStatTable::kDefFieldNumber;
const int WarriorStat_WarriorStatTable::kHpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WarriorStat_WarriorStatTable::WarriorStat_WarriorStatTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.WarriorStat.WarriorStatTable)
}

void WarriorStat_WarriorStatTable::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

WarriorStat_WarriorStatTable::WarriorStat_WarriorStatTable(const WarriorStat_WarriorStatTable& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.WarriorStat.WarriorStatTable)
}

void WarriorStat_WarriorStatTable::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  level_ = 0u;
  exp_ = 0u;
  atk_ = 0u;
  def_ = 0u;
  hp_ = 0u;
}

WarriorStat_WarriorStatTable::~WarriorStat_WarriorStatTable() {
  // @@protoc_insertion_point(destructor:MSG.WarriorStat.WarriorStatTable)
  SharedDtor();
}

void WarriorStat_WarriorStatTable::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WarriorStat_WarriorStatTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WarriorStat_WarriorStatTable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WarriorStat_WarriorStatTable_descriptor_;
}

const WarriorStat_WarriorStatTable& WarriorStat_WarriorStatTable::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

WarriorStat_WarriorStatTable* WarriorStat_WarriorStatTable::default_instance_ = NULL;

WarriorStat_WarriorStatTable* WarriorStat_WarriorStatTable::New(::google::protobuf::Arena* arena) const {
  WarriorStat_WarriorStatTable* n = new WarriorStat_WarriorStatTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WarriorStat_WarriorStatTable::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.WarriorStat.WarriorStatTable)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(WarriorStat_WarriorStatTable, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<WarriorStat_WarriorStatTable*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(level_, hp_);

#undef ZR_HELPER_
#undef ZR_

}

bool WarriorStat_WarriorStatTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.WarriorStat.WarriorStatTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Exp;
        break;
      }

      // optional uint32 Exp = 2;
      case 2: {
        if (tag == 16) {
         parse_Exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Atk;
        break;
      }

      // optional uint32 Atk = 3;
      case 3: {
        if (tag == 24) {
         parse_Atk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &atk_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Def;
        break;
      }

      // optional uint32 Def = 4;
      case 4: {
        if (tag == 32) {
         parse_Def:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Hp;
        break;
      }

      // optional uint32 Hp = 5;
      case 5: {
        if (tag == 40) {
         parse_Hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.WarriorStat.WarriorStatTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.WarriorStat.WarriorStatTable)
  return false;
#undef DO_
}

void WarriorStat_WarriorStatTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.WarriorStat.WarriorStatTable)
  // optional uint32 Level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // optional uint32 Exp = 2;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->exp(), output);
  }

  // optional uint32 Atk = 3;
  if (this->atk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->atk(), output);
  }

  // optional uint32 Def = 4;
  if (this->def() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->def(), output);
  }

  // optional uint32 Hp = 5;
  if (this->hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->hp(), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.WarriorStat.WarriorStatTable)
}

::google::protobuf::uint8* WarriorStat_WarriorStatTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.WarriorStat.WarriorStatTable)
  // optional uint32 Level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // optional uint32 Exp = 2;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->exp(), target);
  }

  // optional uint32 Atk = 3;
  if (this->atk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->atk(), target);
  }

  // optional uint32 Def = 4;
  if (this->def() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->def(), target);
  }

  // optional uint32 Hp = 5;
  if (this->hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->hp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.WarriorStat.WarriorStatTable)
  return target;
}

int WarriorStat_WarriorStatTable::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.WarriorStat.WarriorStatTable)
  int total_size = 0;

  // optional uint32 Level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // optional uint32 Exp = 2;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exp());
  }

  // optional uint32 Atk = 3;
  if (this->atk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->atk());
  }

  // optional uint32 Def = 4;
  if (this->def() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->def());
  }

  // optional uint32 Hp = 5;
  if (this->hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hp());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WarriorStat_WarriorStatTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.WarriorStat.WarriorStatTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const WarriorStat_WarriorStatTable* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const WarriorStat_WarriorStatTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.WarriorStat.WarriorStatTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.WarriorStat.WarriorStatTable)
    MergeFrom(*source);
  }
}

void WarriorStat_WarriorStatTable::MergeFrom(const WarriorStat_WarriorStatTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.WarriorStat.WarriorStatTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.atk() != 0) {
    set_atk(from.atk());
  }
  if (from.def() != 0) {
    set_def(from.def());
  }
  if (from.hp() != 0) {
    set_hp(from.hp());
  }
}

void WarriorStat_WarriorStatTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.WarriorStat.WarriorStatTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WarriorStat_WarriorStatTable::CopyFrom(const WarriorStat_WarriorStatTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.WarriorStat.WarriorStatTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WarriorStat_WarriorStatTable::IsInitialized() const {

  return true;
}

void WarriorStat_WarriorStatTable::Swap(WarriorStat_WarriorStatTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WarriorStat_WarriorStatTable::InternalSwap(WarriorStat_WarriorStatTable* other) {
  std::swap(level_, other->level_);
  std::swap(exp_, other->exp_);
  std::swap(atk_, other->atk_);
  std::swap(def_, other->def_);
  std::swap(hp_, other->hp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WarriorStat_WarriorStatTable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WarriorStat_WarriorStatTable_descriptor_;
  metadata.reflection = WarriorStat_WarriorStatTable_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WarriorStat::kTableNameFieldNumber;
const int WarriorStat::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WarriorStat::WarriorStat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.WarriorStat)
}

void WarriorStat::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

WarriorStat::WarriorStat(const WarriorStat& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.WarriorStat)
}

void WarriorStat::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WarriorStat::~WarriorStat() {
  // @@protoc_insertion_point(destructor:MSG.WarriorStat)
  SharedDtor();
}

void WarriorStat::SharedDtor() {
  tablename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void WarriorStat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WarriorStat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WarriorStat_descriptor_;
}

const WarriorStat& WarriorStat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

WarriorStat* WarriorStat::default_instance_ = NULL;

WarriorStat* WarriorStat::New(::google::protobuf::Arena* arena) const {
  WarriorStat* n = new WarriorStat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WarriorStat::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.WarriorStat)
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.Clear();
}

bool WarriorStat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.WarriorStat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string TableName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tablename().data(), this->tablename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.WarriorStat.TableName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .MSG.WarriorStat.WarriorStatTable Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.WarriorStat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.WarriorStat)
  return false;
#undef DO_
}

void WarriorStat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.WarriorStat)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.WarriorStat.TableName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tablename(), output);
  }

  // repeated .MSG.WarriorStat.WarriorStatTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.WarriorStat)
}

::google::protobuf::uint8* WarriorStat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.WarriorStat)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.WarriorStat.TableName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tablename(), target);
  }

  // repeated .MSG.WarriorStat.WarriorStatTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->data(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.WarriorStat)
  return target;
}

int WarriorStat::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.WarriorStat)
  int total_size = 0;

  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tablename());
  }

  // repeated .MSG.WarriorStat.WarriorStatTable Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WarriorStat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.WarriorStat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const WarriorStat* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const WarriorStat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.WarriorStat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.WarriorStat)
    MergeFrom(*source);
  }
}

void WarriorStat::MergeFrom(const WarriorStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.WarriorStat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
  if (from.tablename().size() > 0) {

    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
}

void WarriorStat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.WarriorStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WarriorStat::CopyFrom(const WarriorStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.WarriorStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WarriorStat::IsInitialized() const {

  return true;
}

void WarriorStat::Swap(WarriorStat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WarriorStat::InternalSwap(WarriorStat* other) {
  tablename_.Swap(&other->tablename_);
  data_.UnsafeArenaSwap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WarriorStat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WarriorStat_descriptor_;
  metadata.reflection = WarriorStat_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WarriorStat_WarriorStatTable

// optional uint32 Level = 1;
void WarriorStat_WarriorStatTable::clear_level() {
  level_ = 0u;
}
 ::google::protobuf::uint32 WarriorStat_WarriorStatTable::level() const {
  // @@protoc_insertion_point(field_get:MSG.WarriorStat.WarriorStatTable.Level)
  return level_;
}
 void WarriorStat_WarriorStatTable::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:MSG.WarriorStat.WarriorStatTable.Level)
}

// optional uint32 Exp = 2;
void WarriorStat_WarriorStatTable::clear_exp() {
  exp_ = 0u;
}
 ::google::protobuf::uint32 WarriorStat_WarriorStatTable::exp() const {
  // @@protoc_insertion_point(field_get:MSG.WarriorStat.WarriorStatTable.Exp)
  return exp_;
}
 void WarriorStat_WarriorStatTable::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:MSG.WarriorStat.WarriorStatTable.Exp)
}

// optional uint32 Atk = 3;
void WarriorStat_WarriorStatTable::clear_atk() {
  atk_ = 0u;
}
 ::google::protobuf::uint32 WarriorStat_WarriorStatTable::atk() const {
  // @@protoc_insertion_point(field_get:MSG.WarriorStat.WarriorStatTable.Atk)
  return atk_;
}
 void WarriorStat_WarriorStatTable::set_atk(::google::protobuf::uint32 value) {
  
  atk_ = value;
  // @@protoc_insertion_point(field_set:MSG.WarriorStat.WarriorStatTable.Atk)
}

// optional uint32 Def = 4;
void WarriorStat_WarriorStatTable::clear_def() {
  def_ = 0u;
}
 ::google::protobuf::uint32 WarriorStat_WarriorStatTable::def() const {
  // @@protoc_insertion_point(field_get:MSG.WarriorStat.WarriorStatTable.Def)
  return def_;
}
 void WarriorStat_WarriorStatTable::set_def(::google::protobuf::uint32 value) {
  
  def_ = value;
  // @@protoc_insertion_point(field_set:MSG.WarriorStat.WarriorStatTable.Def)
}

// optional uint32 Hp = 5;
void WarriorStat_WarriorStatTable::clear_hp() {
  hp_ = 0u;
}
 ::google::protobuf::uint32 WarriorStat_WarriorStatTable::hp() const {
  // @@protoc_insertion_point(field_get:MSG.WarriorStat.WarriorStatTable.Hp)
  return hp_;
}
 void WarriorStat_WarriorStatTable::set_hp(::google::protobuf::uint32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:MSG.WarriorStat.WarriorStatTable.Hp)
}

// -------------------------------------------------------------------

// WarriorStat

// optional string TableName = 1;
void WarriorStat::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& WarriorStat::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.WarriorStat.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WarriorStat::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.WarriorStat.TableName)
}
 void WarriorStat::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.WarriorStat.TableName)
}
 void WarriorStat::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.WarriorStat.TableName)
}
 ::std::string* WarriorStat::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.WarriorStat.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* WarriorStat::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.WarriorStat.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WarriorStat::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.WarriorStat.TableName)
}

// repeated .MSG.WarriorStat.WarriorStatTable Data = 2;
int WarriorStat::data_size() const {
  return data_.size();
}
void WarriorStat::clear_data() {
  data_.Clear();
}
const ::MSG::WarriorStat_WarriorStatTable& WarriorStat::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.WarriorStat.Data)
  return data_.Get(index);
}
::MSG::WarriorStat_WarriorStatTable* WarriorStat::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.WarriorStat.Data)
  return data_.Mutable(index);
}
::MSG::WarriorStat_WarriorStatTable* WarriorStat::add_data() {
  // @@protoc_insertion_point(field_add:MSG.WarriorStat.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::WarriorStat_WarriorStatTable >*
WarriorStat::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.WarriorStat.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::WarriorStat_WarriorStatTable >&
WarriorStat::data() const {
  // @@protoc_insertion_point(field_list:MSG.WarriorStat.Data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArcherStat_ArcherStatTable::kLevelFieldNumber;
const int ArcherStat_ArcherStatTable::kExpFieldNumber;
const int ArcherStat_ArcherStatTable::kAtkFieldNumber;
const int ArcherStat_ArcherStatTable::kDefFieldNumber;
const int ArcherStat_ArcherStatTable::kHpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArcherStat_ArcherStatTable::ArcherStat_ArcherStatTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.ArcherStat.ArcherStatTable)
}

void ArcherStat_ArcherStatTable::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ArcherStat_ArcherStatTable::ArcherStat_ArcherStatTable(const ArcherStat_ArcherStatTable& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.ArcherStat.ArcherStatTable)
}

void ArcherStat_ArcherStatTable::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  level_ = 0u;
  exp_ = 0u;
  atk_ = 0u;
  def_ = 0u;
  hp_ = 0u;
}

ArcherStat_ArcherStatTable::~ArcherStat_ArcherStatTable() {
  // @@protoc_insertion_point(destructor:MSG.ArcherStat.ArcherStatTable)
  SharedDtor();
}

void ArcherStat_ArcherStatTable::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ArcherStat_ArcherStatTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArcherStat_ArcherStatTable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ArcherStat_ArcherStatTable_descriptor_;
}

const ArcherStat_ArcherStatTable& ArcherStat_ArcherStatTable::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

ArcherStat_ArcherStatTable* ArcherStat_ArcherStatTable::default_instance_ = NULL;

ArcherStat_ArcherStatTable* ArcherStat_ArcherStatTable::New(::google::protobuf::Arena* arena) const {
  ArcherStat_ArcherStatTable* n = new ArcherStat_ArcherStatTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ArcherStat_ArcherStatTable::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.ArcherStat.ArcherStatTable)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ArcherStat_ArcherStatTable, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ArcherStat_ArcherStatTable*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(level_, hp_);

#undef ZR_HELPER_
#undef ZR_

}

bool ArcherStat_ArcherStatTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.ArcherStat.ArcherStatTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Exp;
        break;
      }

      // optional uint32 Exp = 2;
      case 2: {
        if (tag == 16) {
         parse_Exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Atk;
        break;
      }

      // optional uint32 Atk = 3;
      case 3: {
        if (tag == 24) {
         parse_Atk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &atk_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Def;
        break;
      }

      // optional uint32 Def = 4;
      case 4: {
        if (tag == 32) {
         parse_Def:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Hp;
        break;
      }

      // optional uint32 Hp = 5;
      case 5: {
        if (tag == 40) {
         parse_Hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.ArcherStat.ArcherStatTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.ArcherStat.ArcherStatTable)
  return false;
#undef DO_
}

void ArcherStat_ArcherStatTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.ArcherStat.ArcherStatTable)
  // optional uint32 Level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // optional uint32 Exp = 2;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->exp(), output);
  }

  // optional uint32 Atk = 3;
  if (this->atk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->atk(), output);
  }

  // optional uint32 Def = 4;
  if (this->def() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->def(), output);
  }

  // optional uint32 Hp = 5;
  if (this->hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->hp(), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.ArcherStat.ArcherStatTable)
}

::google::protobuf::uint8* ArcherStat_ArcherStatTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.ArcherStat.ArcherStatTable)
  // optional uint32 Level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // optional uint32 Exp = 2;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->exp(), target);
  }

  // optional uint32 Atk = 3;
  if (this->atk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->atk(), target);
  }

  // optional uint32 Def = 4;
  if (this->def() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->def(), target);
  }

  // optional uint32 Hp = 5;
  if (this->hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->hp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.ArcherStat.ArcherStatTable)
  return target;
}

int ArcherStat_ArcherStatTable::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.ArcherStat.ArcherStatTable)
  int total_size = 0;

  // optional uint32 Level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // optional uint32 Exp = 2;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exp());
  }

  // optional uint32 Atk = 3;
  if (this->atk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->atk());
  }

  // optional uint32 Def = 4;
  if (this->def() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->def());
  }

  // optional uint32 Hp = 5;
  if (this->hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hp());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArcherStat_ArcherStatTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.ArcherStat.ArcherStatTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ArcherStat_ArcherStatTable* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ArcherStat_ArcherStatTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.ArcherStat.ArcherStatTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.ArcherStat.ArcherStatTable)
    MergeFrom(*source);
  }
}

void ArcherStat_ArcherStatTable::MergeFrom(const ArcherStat_ArcherStatTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.ArcherStat.ArcherStatTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.atk() != 0) {
    set_atk(from.atk());
  }
  if (from.def() != 0) {
    set_def(from.def());
  }
  if (from.hp() != 0) {
    set_hp(from.hp());
  }
}

void ArcherStat_ArcherStatTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.ArcherStat.ArcherStatTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArcherStat_ArcherStatTable::CopyFrom(const ArcherStat_ArcherStatTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.ArcherStat.ArcherStatTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArcherStat_ArcherStatTable::IsInitialized() const {

  return true;
}

void ArcherStat_ArcherStatTable::Swap(ArcherStat_ArcherStatTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArcherStat_ArcherStatTable::InternalSwap(ArcherStat_ArcherStatTable* other) {
  std::swap(level_, other->level_);
  std::swap(exp_, other->exp_);
  std::swap(atk_, other->atk_);
  std::swap(def_, other->def_);
  std::swap(hp_, other->hp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ArcherStat_ArcherStatTable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ArcherStat_ArcherStatTable_descriptor_;
  metadata.reflection = ArcherStat_ArcherStatTable_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArcherStat::kTableNameFieldNumber;
const int ArcherStat::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArcherStat::ArcherStat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.ArcherStat)
}

void ArcherStat::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ArcherStat::ArcherStat(const ArcherStat& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.ArcherStat)
}

void ArcherStat::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ArcherStat::~ArcherStat() {
  // @@protoc_insertion_point(destructor:MSG.ArcherStat)
  SharedDtor();
}

void ArcherStat::SharedDtor() {
  tablename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ArcherStat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArcherStat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ArcherStat_descriptor_;
}

const ArcherStat& ArcherStat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

ArcherStat* ArcherStat::default_instance_ = NULL;

ArcherStat* ArcherStat::New(::google::protobuf::Arena* arena) const {
  ArcherStat* n = new ArcherStat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ArcherStat::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.ArcherStat)
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.Clear();
}

bool ArcherStat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.ArcherStat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string TableName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tablename().data(), this->tablename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.ArcherStat.TableName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .MSG.ArcherStat.ArcherStatTable Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.ArcherStat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.ArcherStat)
  return false;
#undef DO_
}

void ArcherStat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.ArcherStat)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.ArcherStat.TableName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tablename(), output);
  }

  // repeated .MSG.ArcherStat.ArcherStatTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.ArcherStat)
}

::google::protobuf::uint8* ArcherStat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.ArcherStat)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.ArcherStat.TableName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tablename(), target);
  }

  // repeated .MSG.ArcherStat.ArcherStatTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->data(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.ArcherStat)
  return target;
}

int ArcherStat::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.ArcherStat)
  int total_size = 0;

  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tablename());
  }

  // repeated .MSG.ArcherStat.ArcherStatTable Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArcherStat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.ArcherStat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ArcherStat* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ArcherStat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.ArcherStat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.ArcherStat)
    MergeFrom(*source);
  }
}

void ArcherStat::MergeFrom(const ArcherStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.ArcherStat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
  if (from.tablename().size() > 0) {

    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
}

void ArcherStat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.ArcherStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArcherStat::CopyFrom(const ArcherStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.ArcherStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArcherStat::IsInitialized() const {

  return true;
}

void ArcherStat::Swap(ArcherStat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArcherStat::InternalSwap(ArcherStat* other) {
  tablename_.Swap(&other->tablename_);
  data_.UnsafeArenaSwap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ArcherStat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ArcherStat_descriptor_;
  metadata.reflection = ArcherStat_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ArcherStat_ArcherStatTable

// optional uint32 Level = 1;
void ArcherStat_ArcherStatTable::clear_level() {
  level_ = 0u;
}
 ::google::protobuf::uint32 ArcherStat_ArcherStatTable::level() const {
  // @@protoc_insertion_point(field_get:MSG.ArcherStat.ArcherStatTable.Level)
  return level_;
}
 void ArcherStat_ArcherStatTable::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:MSG.ArcherStat.ArcherStatTable.Level)
}

// optional uint32 Exp = 2;
void ArcherStat_ArcherStatTable::clear_exp() {
  exp_ = 0u;
}
 ::google::protobuf::uint32 ArcherStat_ArcherStatTable::exp() const {
  // @@protoc_insertion_point(field_get:MSG.ArcherStat.ArcherStatTable.Exp)
  return exp_;
}
 void ArcherStat_ArcherStatTable::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:MSG.ArcherStat.ArcherStatTable.Exp)
}

// optional uint32 Atk = 3;
void ArcherStat_ArcherStatTable::clear_atk() {
  atk_ = 0u;
}
 ::google::protobuf::uint32 ArcherStat_ArcherStatTable::atk() const {
  // @@protoc_insertion_point(field_get:MSG.ArcherStat.ArcherStatTable.Atk)
  return atk_;
}
 void ArcherStat_ArcherStatTable::set_atk(::google::protobuf::uint32 value) {
  
  atk_ = value;
  // @@protoc_insertion_point(field_set:MSG.ArcherStat.ArcherStatTable.Atk)
}

// optional uint32 Def = 4;
void ArcherStat_ArcherStatTable::clear_def() {
  def_ = 0u;
}
 ::google::protobuf::uint32 ArcherStat_ArcherStatTable::def() const {
  // @@protoc_insertion_point(field_get:MSG.ArcherStat.ArcherStatTable.Def)
  return def_;
}
 void ArcherStat_ArcherStatTable::set_def(::google::protobuf::uint32 value) {
  
  def_ = value;
  // @@protoc_insertion_point(field_set:MSG.ArcherStat.ArcherStatTable.Def)
}

// optional uint32 Hp = 5;
void ArcherStat_ArcherStatTable::clear_hp() {
  hp_ = 0u;
}
 ::google::protobuf::uint32 ArcherStat_ArcherStatTable::hp() const {
  // @@protoc_insertion_point(field_get:MSG.ArcherStat.ArcherStatTable.Hp)
  return hp_;
}
 void ArcherStat_ArcherStatTable::set_hp(::google::protobuf::uint32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:MSG.ArcherStat.ArcherStatTable.Hp)
}

// -------------------------------------------------------------------

// ArcherStat

// optional string TableName = 1;
void ArcherStat::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ArcherStat::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.ArcherStat.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ArcherStat::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.ArcherStat.TableName)
}
 void ArcherStat::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.ArcherStat.TableName)
}
 void ArcherStat::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.ArcherStat.TableName)
}
 ::std::string* ArcherStat::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.ArcherStat.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ArcherStat::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.ArcherStat.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ArcherStat::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.ArcherStat.TableName)
}

// repeated .MSG.ArcherStat.ArcherStatTable Data = 2;
int ArcherStat::data_size() const {
  return data_.size();
}
void ArcherStat::clear_data() {
  data_.Clear();
}
const ::MSG::ArcherStat_ArcherStatTable& ArcherStat::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.ArcherStat.Data)
  return data_.Get(index);
}
::MSG::ArcherStat_ArcherStatTable* ArcherStat::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.ArcherStat.Data)
  return data_.Mutable(index);
}
::MSG::ArcherStat_ArcherStatTable* ArcherStat::add_data() {
  // @@protoc_insertion_point(field_add:MSG.ArcherStat.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::ArcherStat_ArcherStatTable >*
ArcherStat::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.ArcherStat.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::ArcherStat_ArcherStatTable >&
ArcherStat::data() const {
  // @@protoc_insertion_point(field_list:MSG.ArcherStat.Data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CharTier_CharTierTable::kTierFieldNumber;
const int CharTier_CharTierTable::kBuff1TypeFieldNumber;
const int CharTier_CharTierTable::kBuff1ValueFieldNumber;
const int CharTier_CharTierTable::kBuff2TypeFieldNumber;
const int CharTier_CharTierTable::kBuff2ValueFieldNumber;
const int CharTier_CharTierTable::kBuff3TypeFieldNumber;
const int CharTier_CharTierTable::kBuff3ValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CharTier_CharTierTable::CharTier_CharTierTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.CharTier.CharTierTable)
}

void CharTier_CharTierTable::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CharTier_CharTierTable::CharTier_CharTierTable(const CharTier_CharTierTable& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.CharTier.CharTierTable)
}

void CharTier_CharTierTable::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tier_ = 0u;
  buff1type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff1value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff2type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff2value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff3type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff3value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CharTier_CharTierTable::~CharTier_CharTierTable() {
  // @@protoc_insertion_point(destructor:MSG.CharTier.CharTierTable)
  SharedDtor();
}

void CharTier_CharTierTable::SharedDtor() {
  buff1type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff1value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff2type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff2value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff3type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff3value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CharTier_CharTierTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CharTier_CharTierTable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CharTier_CharTierTable_descriptor_;
}

const CharTier_CharTierTable& CharTier_CharTierTable::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

CharTier_CharTierTable* CharTier_CharTierTable::default_instance_ = NULL;

CharTier_CharTierTable* CharTier_CharTierTable::New(::google::protobuf::Arena* arena) const {
  CharTier_CharTierTable* n = new CharTier_CharTierTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CharTier_CharTierTable::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.CharTier.CharTierTable)
  tier_ = 0u;
  buff1type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff1value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff2type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff2value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff3type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff3value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CharTier_CharTierTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.CharTier.CharTierTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tier = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tier_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Buff1Type;
        break;
      }

      // optional string Buff1Type = 2;
      case 2: {
        if (tag == 18) {
         parse_Buff1Type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buff1type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buff1type().data(), this->buff1type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.CharTier.CharTierTable.Buff1Type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Buff1Value;
        break;
      }

      // optional string Buff1Value = 3;
      case 3: {
        if (tag == 26) {
         parse_Buff1Value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buff1value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buff1value().data(), this->buff1value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.CharTier.CharTierTable.Buff1Value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Buff2Type;
        break;
      }

      // optional string Buff2Type = 4;
      case 4: {
        if (tag == 34) {
         parse_Buff2Type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buff2type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buff2type().data(), this->buff2type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.CharTier.CharTierTable.Buff2Type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Buff2Value;
        break;
      }

      // optional string Buff2Value = 5;
      case 5: {
        if (tag == 42) {
         parse_Buff2Value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buff2value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buff2value().data(), this->buff2value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.CharTier.CharTierTable.Buff2Value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Buff3Type;
        break;
      }

      // optional string Buff3Type = 6;
      case 6: {
        if (tag == 50) {
         parse_Buff3Type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buff3type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buff3type().data(), this->buff3type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.CharTier.CharTierTable.Buff3Type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Buff3Value;
        break;
      }

      // optional string Buff3Value = 7;
      case 7: {
        if (tag == 58) {
         parse_Buff3Value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buff3value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buff3value().data(), this->buff3value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.CharTier.CharTierTable.Buff3Value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.CharTier.CharTierTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.CharTier.CharTierTable)
  return false;
#undef DO_
}

void CharTier_CharTierTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.CharTier.CharTierTable)
  // optional uint32 Tier = 1;
  if (this->tier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tier(), output);
  }

  // optional string Buff1Type = 2;
  if (this->buff1type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff1type().data(), this->buff1type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.CharTier.CharTierTable.Buff1Type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->buff1type(), output);
  }

  // optional string Buff1Value = 3;
  if (this->buff1value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff1value().data(), this->buff1value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.CharTier.CharTierTable.Buff1Value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->buff1value(), output);
  }

  // optional string Buff2Type = 4;
  if (this->buff2type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff2type().data(), this->buff2type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.CharTier.CharTierTable.Buff2Type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->buff2type(), output);
  }

  // optional string Buff2Value = 5;
  if (this->buff2value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff2value().data(), this->buff2value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.CharTier.CharTierTable.Buff2Value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->buff2value(), output);
  }

  // optional string Buff3Type = 6;
  if (this->buff3type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff3type().data(), this->buff3type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.CharTier.CharTierTable.Buff3Type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->buff3type(), output);
  }

  // optional string Buff3Value = 7;
  if (this->buff3value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff3value().data(), this->buff3value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.CharTier.CharTierTable.Buff3Value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->buff3value(), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.CharTier.CharTierTable)
}

::google::protobuf::uint8* CharTier_CharTierTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.CharTier.CharTierTable)
  // optional uint32 Tier = 1;
  if (this->tier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tier(), target);
  }

  // optional string Buff1Type = 2;
  if (this->buff1type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff1type().data(), this->buff1type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.CharTier.CharTierTable.Buff1Type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->buff1type(), target);
  }

  // optional string Buff1Value = 3;
  if (this->buff1value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff1value().data(), this->buff1value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.CharTier.CharTierTable.Buff1Value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->buff1value(), target);
  }

  // optional string Buff2Type = 4;
  if (this->buff2type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff2type().data(), this->buff2type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.CharTier.CharTierTable.Buff2Type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->buff2type(), target);
  }

  // optional string Buff2Value = 5;
  if (this->buff2value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff2value().data(), this->buff2value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.CharTier.CharTierTable.Buff2Value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->buff2value(), target);
  }

  // optional string Buff3Type = 6;
  if (this->buff3type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff3type().data(), this->buff3type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.CharTier.CharTierTable.Buff3Type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->buff3type(), target);
  }

  // optional string Buff3Value = 7;
  if (this->buff3value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff3value().data(), this->buff3value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.CharTier.CharTierTable.Buff3Value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->buff3value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.CharTier.CharTierTable)
  return target;
}

int CharTier_CharTierTable::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.CharTier.CharTierTable)
  int total_size = 0;

  // optional uint32 Tier = 1;
  if (this->tier() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tier());
  }

  // optional string Buff1Type = 2;
  if (this->buff1type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buff1type());
  }

  // optional string Buff1Value = 3;
  if (this->buff1value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buff1value());
  }

  // optional string Buff2Type = 4;
  if (this->buff2type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buff2type());
  }

  // optional string Buff2Value = 5;
  if (this->buff2value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buff2value());
  }

  // optional string Buff3Type = 6;
  if (this->buff3type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buff3type());
  }

  // optional string Buff3Value = 7;
  if (this->buff3value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buff3value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CharTier_CharTierTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.CharTier.CharTierTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CharTier_CharTierTable* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CharTier_CharTierTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.CharTier.CharTierTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.CharTier.CharTierTable)
    MergeFrom(*source);
  }
}

void CharTier_CharTierTable::MergeFrom(const CharTier_CharTierTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.CharTier.CharTierTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.tier() != 0) {
    set_tier(from.tier());
  }
  if (from.buff1type().size() > 0) {

    buff1type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buff1type_);
  }
  if (from.buff1value().size() > 0) {

    buff1value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buff1value_);
  }
  if (from.buff2type().size() > 0) {

    buff2type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buff2type_);
  }
  if (from.buff2value().size() > 0) {

    buff2value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buff2value_);
  }
  if (from.buff3type().size() > 0) {

    buff3type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buff3type_);
  }
  if (from.buff3value().size() > 0) {

    buff3value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buff3value_);
  }
}

void CharTier_CharTierTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.CharTier.CharTierTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharTier_CharTierTable::CopyFrom(const CharTier_CharTierTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.CharTier.CharTierTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharTier_CharTierTable::IsInitialized() const {

  return true;
}

void CharTier_CharTierTable::Swap(CharTier_CharTierTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CharTier_CharTierTable::InternalSwap(CharTier_CharTierTable* other) {
  std::swap(tier_, other->tier_);
  buff1type_.Swap(&other->buff1type_);
  buff1value_.Swap(&other->buff1value_);
  buff2type_.Swap(&other->buff2type_);
  buff2value_.Swap(&other->buff2value_);
  buff3type_.Swap(&other->buff3type_);
  buff3value_.Swap(&other->buff3value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CharTier_CharTierTable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CharTier_CharTierTable_descriptor_;
  metadata.reflection = CharTier_CharTierTable_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CharTier::kTableNameFieldNumber;
const int CharTier::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CharTier::CharTier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.CharTier)
}

void CharTier::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CharTier::CharTier(const CharTier& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.CharTier)
}

void CharTier::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CharTier::~CharTier() {
  // @@protoc_insertion_point(destructor:MSG.CharTier)
  SharedDtor();
}

void CharTier::SharedDtor() {
  tablename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CharTier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CharTier::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CharTier_descriptor_;
}

const CharTier& CharTier::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

CharTier* CharTier::default_instance_ = NULL;

CharTier* CharTier::New(::google::protobuf::Arena* arena) const {
  CharTier* n = new CharTier;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CharTier::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.CharTier)
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.Clear();
}

bool CharTier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.CharTier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string TableName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tablename().data(), this->tablename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.CharTier.TableName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .MSG.CharTier.CharTierTable Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.CharTier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.CharTier)
  return false;
#undef DO_
}

void CharTier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.CharTier)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.CharTier.TableName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tablename(), output);
  }

  // repeated .MSG.CharTier.CharTierTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.CharTier)
}

::google::protobuf::uint8* CharTier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.CharTier)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.CharTier.TableName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tablename(), target);
  }

  // repeated .MSG.CharTier.CharTierTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->data(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.CharTier)
  return target;
}

int CharTier::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.CharTier)
  int total_size = 0;

  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tablename());
  }

  // repeated .MSG.CharTier.CharTierTable Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CharTier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.CharTier)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CharTier* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CharTier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.CharTier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.CharTier)
    MergeFrom(*source);
  }
}

void CharTier::MergeFrom(const CharTier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.CharTier)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
  if (from.tablename().size() > 0) {

    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
}

void CharTier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.CharTier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharTier::CopyFrom(const CharTier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.CharTier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharTier::IsInitialized() const {

  return true;
}

void CharTier::Swap(CharTier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CharTier::InternalSwap(CharTier* other) {
  tablename_.Swap(&other->tablename_);
  data_.UnsafeArenaSwap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CharTier::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CharTier_descriptor_;
  metadata.reflection = CharTier_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CharTier_CharTierTable

// optional uint32 Tier = 1;
void CharTier_CharTierTable::clear_tier() {
  tier_ = 0u;
}
 ::google::protobuf::uint32 CharTier_CharTierTable::tier() const {
  // @@protoc_insertion_point(field_get:MSG.CharTier.CharTierTable.Tier)
  return tier_;
}
 void CharTier_CharTierTable::set_tier(::google::protobuf::uint32 value) {
  
  tier_ = value;
  // @@protoc_insertion_point(field_set:MSG.CharTier.CharTierTable.Tier)
}

// optional string Buff1Type = 2;
void CharTier_CharTierTable::clear_buff1type() {
  buff1type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CharTier_CharTierTable::buff1type() const {
  // @@protoc_insertion_point(field_get:MSG.CharTier.CharTierTable.Buff1Type)
  return buff1type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CharTier_CharTierTable::set_buff1type(const ::std::string& value) {
  
  buff1type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.CharTier.CharTierTable.Buff1Type)
}
 void CharTier_CharTierTable::set_buff1type(const char* value) {
  
  buff1type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.CharTier.CharTierTable.Buff1Type)
}
 void CharTier_CharTierTable::set_buff1type(const char* value, size_t size) {
  
  buff1type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.CharTier.CharTierTable.Buff1Type)
}
 ::std::string* CharTier_CharTierTable::mutable_buff1type() {
  
  // @@protoc_insertion_point(field_mutable:MSG.CharTier.CharTierTable.Buff1Type)
  return buff1type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CharTier_CharTierTable::release_buff1type() {
  // @@protoc_insertion_point(field_release:MSG.CharTier.CharTierTable.Buff1Type)
  
  return buff1type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CharTier_CharTierTable::set_allocated_buff1type(::std::string* buff1type) {
  if (buff1type != NULL) {
    
  } else {
    
  }
  buff1type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff1type);
  // @@protoc_insertion_point(field_set_allocated:MSG.CharTier.CharTierTable.Buff1Type)
}

// optional string Buff1Value = 3;
void CharTier_CharTierTable::clear_buff1value() {
  buff1value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CharTier_CharTierTable::buff1value() const {
  // @@protoc_insertion_point(field_get:MSG.CharTier.CharTierTable.Buff1Value)
  return buff1value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CharTier_CharTierTable::set_buff1value(const ::std::string& value) {
  
  buff1value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.CharTier.CharTierTable.Buff1Value)
}
 void CharTier_CharTierTable::set_buff1value(const char* value) {
  
  buff1value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.CharTier.CharTierTable.Buff1Value)
}
 void CharTier_CharTierTable::set_buff1value(const char* value, size_t size) {
  
  buff1value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.CharTier.CharTierTable.Buff1Value)
}
 ::std::string* CharTier_CharTierTable::mutable_buff1value() {
  
  // @@protoc_insertion_point(field_mutable:MSG.CharTier.CharTierTable.Buff1Value)
  return buff1value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CharTier_CharTierTable::release_buff1value() {
  // @@protoc_insertion_point(field_release:MSG.CharTier.CharTierTable.Buff1Value)
  
  return buff1value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CharTier_CharTierTable::set_allocated_buff1value(::std::string* buff1value) {
  if (buff1value != NULL) {
    
  } else {
    
  }
  buff1value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff1value);
  // @@protoc_insertion_point(field_set_allocated:MSG.CharTier.CharTierTable.Buff1Value)
}

// optional string Buff2Type = 4;
void CharTier_CharTierTable::clear_buff2type() {
  buff2type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CharTier_CharTierTable::buff2type() const {
  // @@protoc_insertion_point(field_get:MSG.CharTier.CharTierTable.Buff2Type)
  return buff2type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CharTier_CharTierTable::set_buff2type(const ::std::string& value) {
  
  buff2type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.CharTier.CharTierTable.Buff2Type)
}
 void CharTier_CharTierTable::set_buff2type(const char* value) {
  
  buff2type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.CharTier.CharTierTable.Buff2Type)
}
 void CharTier_CharTierTable::set_buff2type(const char* value, size_t size) {
  
  buff2type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.CharTier.CharTierTable.Buff2Type)
}
 ::std::string* CharTier_CharTierTable::mutable_buff2type() {
  
  // @@protoc_insertion_point(field_mutable:MSG.CharTier.CharTierTable.Buff2Type)
  return buff2type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CharTier_CharTierTable::release_buff2type() {
  // @@protoc_insertion_point(field_release:MSG.CharTier.CharTierTable.Buff2Type)
  
  return buff2type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CharTier_CharTierTable::set_allocated_buff2type(::std::string* buff2type) {
  if (buff2type != NULL) {
    
  } else {
    
  }
  buff2type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff2type);
  // @@protoc_insertion_point(field_set_allocated:MSG.CharTier.CharTierTable.Buff2Type)
}

// optional string Buff2Value = 5;
void CharTier_CharTierTable::clear_buff2value() {
  buff2value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CharTier_CharTierTable::buff2value() const {
  // @@protoc_insertion_point(field_get:MSG.CharTier.CharTierTable.Buff2Value)
  return buff2value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CharTier_CharTierTable::set_buff2value(const ::std::string& value) {
  
  buff2value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.CharTier.CharTierTable.Buff2Value)
}
 void CharTier_CharTierTable::set_buff2value(const char* value) {
  
  buff2value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.CharTier.CharTierTable.Buff2Value)
}
 void CharTier_CharTierTable::set_buff2value(const char* value, size_t size) {
  
  buff2value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.CharTier.CharTierTable.Buff2Value)
}
 ::std::string* CharTier_CharTierTable::mutable_buff2value() {
  
  // @@protoc_insertion_point(field_mutable:MSG.CharTier.CharTierTable.Buff2Value)
  return buff2value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CharTier_CharTierTable::release_buff2value() {
  // @@protoc_insertion_point(field_release:MSG.CharTier.CharTierTable.Buff2Value)
  
  return buff2value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CharTier_CharTierTable::set_allocated_buff2value(::std::string* buff2value) {
  if (buff2value != NULL) {
    
  } else {
    
  }
  buff2value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff2value);
  // @@protoc_insertion_point(field_set_allocated:MSG.CharTier.CharTierTable.Buff2Value)
}

// optional string Buff3Type = 6;
void CharTier_CharTierTable::clear_buff3type() {
  buff3type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CharTier_CharTierTable::buff3type() const {
  // @@protoc_insertion_point(field_get:MSG.CharTier.CharTierTable.Buff3Type)
  return buff3type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CharTier_CharTierTable::set_buff3type(const ::std::string& value) {
  
  buff3type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.CharTier.CharTierTable.Buff3Type)
}
 void CharTier_CharTierTable::set_buff3type(const char* value) {
  
  buff3type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.CharTier.CharTierTable.Buff3Type)
}
 void CharTier_CharTierTable::set_buff3type(const char* value, size_t size) {
  
  buff3type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.CharTier.CharTierTable.Buff3Type)
}
 ::std::string* CharTier_CharTierTable::mutable_buff3type() {
  
  // @@protoc_insertion_point(field_mutable:MSG.CharTier.CharTierTable.Buff3Type)
  return buff3type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CharTier_CharTierTable::release_buff3type() {
  // @@protoc_insertion_point(field_release:MSG.CharTier.CharTierTable.Buff3Type)
  
  return buff3type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CharTier_CharTierTable::set_allocated_buff3type(::std::string* buff3type) {
  if (buff3type != NULL) {
    
  } else {
    
  }
  buff3type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff3type);
  // @@protoc_insertion_point(field_set_allocated:MSG.CharTier.CharTierTable.Buff3Type)
}

// optional string Buff3Value = 7;
void CharTier_CharTierTable::clear_buff3value() {
  buff3value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CharTier_CharTierTable::buff3value() const {
  // @@protoc_insertion_point(field_get:MSG.CharTier.CharTierTable.Buff3Value)
  return buff3value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CharTier_CharTierTable::set_buff3value(const ::std::string& value) {
  
  buff3value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.CharTier.CharTierTable.Buff3Value)
}
 void CharTier_CharTierTable::set_buff3value(const char* value) {
  
  buff3value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.CharTier.CharTierTable.Buff3Value)
}
 void CharTier_CharTierTable::set_buff3value(const char* value, size_t size) {
  
  buff3value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.CharTier.CharTierTable.Buff3Value)
}
 ::std::string* CharTier_CharTierTable::mutable_buff3value() {
  
  // @@protoc_insertion_point(field_mutable:MSG.CharTier.CharTierTable.Buff3Value)
  return buff3value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CharTier_CharTierTable::release_buff3value() {
  // @@protoc_insertion_point(field_release:MSG.CharTier.CharTierTable.Buff3Value)
  
  return buff3value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CharTier_CharTierTable::set_allocated_buff3value(::std::string* buff3value) {
  if (buff3value != NULL) {
    
  } else {
    
  }
  buff3value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff3value);
  // @@protoc_insertion_point(field_set_allocated:MSG.CharTier.CharTierTable.Buff3Value)
}

// -------------------------------------------------------------------

// CharTier

// optional string TableName = 1;
void CharTier::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CharTier::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.CharTier.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CharTier::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.CharTier.TableName)
}
 void CharTier::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.CharTier.TableName)
}
 void CharTier::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.CharTier.TableName)
}
 ::std::string* CharTier::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.CharTier.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CharTier::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.CharTier.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CharTier::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.CharTier.TableName)
}

// repeated .MSG.CharTier.CharTierTable Data = 2;
int CharTier::data_size() const {
  return data_.size();
}
void CharTier::clear_data() {
  data_.Clear();
}
const ::MSG::CharTier_CharTierTable& CharTier::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.CharTier.Data)
  return data_.Get(index);
}
::MSG::CharTier_CharTierTable* CharTier::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.CharTier.Data)
  return data_.Mutable(index);
}
::MSG::CharTier_CharTierTable* CharTier::add_data() {
  // @@protoc_insertion_point(field_add:MSG.CharTier.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::CharTier_CharTierTable >*
CharTier::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.CharTier.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::CharTier_CharTierTable >&
CharTier::data() const {
  // @@protoc_insertion_point(field_list:MSG.CharTier.Data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DungeonTier_DungeonTierTable::kTierFieldNumber;
const int DungeonTier_DungeonTierTable::kBuff1TypeFieldNumber;
const int DungeonTier_DungeonTierTable::kBuff1ValueFieldNumber;
const int DungeonTier_DungeonTierTable::kBuff2TypeFieldNumber;
const int DungeonTier_DungeonTierTable::kBuff2ValueFieldNumber;
const int DungeonTier_DungeonTierTable::kBuff3TypeFieldNumber;
const int DungeonTier_DungeonTierTable::kBuff3ValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DungeonTier_DungeonTierTable::DungeonTier_DungeonTierTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.DungeonTier.DungeonTierTable)
}

void DungeonTier_DungeonTierTable::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DungeonTier_DungeonTierTable::DungeonTier_DungeonTierTable(const DungeonTier_DungeonTierTable& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.DungeonTier.DungeonTierTable)
}

void DungeonTier_DungeonTierTable::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tier_ = 0u;
  buff1type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff1value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff2type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff2value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff3type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff3value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DungeonTier_DungeonTierTable::~DungeonTier_DungeonTierTable() {
  // @@protoc_insertion_point(destructor:MSG.DungeonTier.DungeonTierTable)
  SharedDtor();
}

void DungeonTier_DungeonTierTable::SharedDtor() {
  buff1type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff1value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff2type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff2value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff3type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff3value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DungeonTier_DungeonTierTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DungeonTier_DungeonTierTable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DungeonTier_DungeonTierTable_descriptor_;
}

const DungeonTier_DungeonTierTable& DungeonTier_DungeonTierTable::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

DungeonTier_DungeonTierTable* DungeonTier_DungeonTierTable::default_instance_ = NULL;

DungeonTier_DungeonTierTable* DungeonTier_DungeonTierTable::New(::google::protobuf::Arena* arena) const {
  DungeonTier_DungeonTierTable* n = new DungeonTier_DungeonTierTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DungeonTier_DungeonTierTable::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.DungeonTier.DungeonTierTable)
  tier_ = 0u;
  buff1type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff1value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff2type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff2value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff3type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buff3value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DungeonTier_DungeonTierTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.DungeonTier.DungeonTierTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tier = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tier_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Buff1Type;
        break;
      }

      // optional string Buff1Type = 2;
      case 2: {
        if (tag == 18) {
         parse_Buff1Type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buff1type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buff1type().data(), this->buff1type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.DungeonTier.DungeonTierTable.Buff1Type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Buff1Value;
        break;
      }

      // optional string Buff1Value = 3;
      case 3: {
        if (tag == 26) {
         parse_Buff1Value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buff1value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buff1value().data(), this->buff1value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.DungeonTier.DungeonTierTable.Buff1Value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Buff2Type;
        break;
      }

      // optional string Buff2Type = 4;
      case 4: {
        if (tag == 34) {
         parse_Buff2Type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buff2type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buff2type().data(), this->buff2type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.DungeonTier.DungeonTierTable.Buff2Type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Buff2Value;
        break;
      }

      // optional string Buff2Value = 5;
      case 5: {
        if (tag == 42) {
         parse_Buff2Value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buff2value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buff2value().data(), this->buff2value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.DungeonTier.DungeonTierTable.Buff2Value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Buff3Type;
        break;
      }

      // optional string Buff3Type = 6;
      case 6: {
        if (tag == 50) {
         parse_Buff3Type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buff3type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buff3type().data(), this->buff3type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.DungeonTier.DungeonTierTable.Buff3Type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Buff3Value;
        break;
      }

      // optional string Buff3Value = 7;
      case 7: {
        if (tag == 58) {
         parse_Buff3Value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buff3value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buff3value().data(), this->buff3value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.DungeonTier.DungeonTierTable.Buff3Value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.DungeonTier.DungeonTierTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.DungeonTier.DungeonTierTable)
  return false;
#undef DO_
}

void DungeonTier_DungeonTierTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.DungeonTier.DungeonTierTable)
  // optional uint32 Tier = 1;
  if (this->tier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tier(), output);
  }

  // optional string Buff1Type = 2;
  if (this->buff1type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff1type().data(), this->buff1type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.DungeonTier.DungeonTierTable.Buff1Type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->buff1type(), output);
  }

  // optional string Buff1Value = 3;
  if (this->buff1value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff1value().data(), this->buff1value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.DungeonTier.DungeonTierTable.Buff1Value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->buff1value(), output);
  }

  // optional string Buff2Type = 4;
  if (this->buff2type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff2type().data(), this->buff2type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.DungeonTier.DungeonTierTable.Buff2Type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->buff2type(), output);
  }

  // optional string Buff2Value = 5;
  if (this->buff2value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff2value().data(), this->buff2value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.DungeonTier.DungeonTierTable.Buff2Value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->buff2value(), output);
  }

  // optional string Buff3Type = 6;
  if (this->buff3type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff3type().data(), this->buff3type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.DungeonTier.DungeonTierTable.Buff3Type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->buff3type(), output);
  }

  // optional string Buff3Value = 7;
  if (this->buff3value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff3value().data(), this->buff3value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.DungeonTier.DungeonTierTable.Buff3Value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->buff3value(), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.DungeonTier.DungeonTierTable)
}

::google::protobuf::uint8* DungeonTier_DungeonTierTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.DungeonTier.DungeonTierTable)
  // optional uint32 Tier = 1;
  if (this->tier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tier(), target);
  }

  // optional string Buff1Type = 2;
  if (this->buff1type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff1type().data(), this->buff1type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.DungeonTier.DungeonTierTable.Buff1Type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->buff1type(), target);
  }

  // optional string Buff1Value = 3;
  if (this->buff1value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff1value().data(), this->buff1value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.DungeonTier.DungeonTierTable.Buff1Value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->buff1value(), target);
  }

  // optional string Buff2Type = 4;
  if (this->buff2type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff2type().data(), this->buff2type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.DungeonTier.DungeonTierTable.Buff2Type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->buff2type(), target);
  }

  // optional string Buff2Value = 5;
  if (this->buff2value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff2value().data(), this->buff2value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.DungeonTier.DungeonTierTable.Buff2Value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->buff2value(), target);
  }

  // optional string Buff3Type = 6;
  if (this->buff3type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff3type().data(), this->buff3type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.DungeonTier.DungeonTierTable.Buff3Type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->buff3type(), target);
  }

  // optional string Buff3Value = 7;
  if (this->buff3value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buff3value().data(), this->buff3value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.DungeonTier.DungeonTierTable.Buff3Value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->buff3value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.DungeonTier.DungeonTierTable)
  return target;
}

int DungeonTier_DungeonTierTable::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.DungeonTier.DungeonTierTable)
  int total_size = 0;

  // optional uint32 Tier = 1;
  if (this->tier() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tier());
  }

  // optional string Buff1Type = 2;
  if (this->buff1type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buff1type());
  }

  // optional string Buff1Value = 3;
  if (this->buff1value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buff1value());
  }

  // optional string Buff2Type = 4;
  if (this->buff2type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buff2type());
  }

  // optional string Buff2Value = 5;
  if (this->buff2value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buff2value());
  }

  // optional string Buff3Type = 6;
  if (this->buff3type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buff3type());
  }

  // optional string Buff3Value = 7;
  if (this->buff3value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buff3value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DungeonTier_DungeonTierTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.DungeonTier.DungeonTierTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DungeonTier_DungeonTierTable* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DungeonTier_DungeonTierTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.DungeonTier.DungeonTierTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.DungeonTier.DungeonTierTable)
    MergeFrom(*source);
  }
}

void DungeonTier_DungeonTierTable::MergeFrom(const DungeonTier_DungeonTierTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.DungeonTier.DungeonTierTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.tier() != 0) {
    set_tier(from.tier());
  }
  if (from.buff1type().size() > 0) {

    buff1type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buff1type_);
  }
  if (from.buff1value().size() > 0) {

    buff1value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buff1value_);
  }
  if (from.buff2type().size() > 0) {

    buff2type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buff2type_);
  }
  if (from.buff2value().size() > 0) {

    buff2value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buff2value_);
  }
  if (from.buff3type().size() > 0) {

    buff3type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buff3type_);
  }
  if (from.buff3value().size() > 0) {

    buff3value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buff3value_);
  }
}

void DungeonTier_DungeonTierTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.DungeonTier.DungeonTierTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DungeonTier_DungeonTierTable::CopyFrom(const DungeonTier_DungeonTierTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.DungeonTier.DungeonTierTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonTier_DungeonTierTable::IsInitialized() const {

  return true;
}

void DungeonTier_DungeonTierTable::Swap(DungeonTier_DungeonTierTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DungeonTier_DungeonTierTable::InternalSwap(DungeonTier_DungeonTierTable* other) {
  std::swap(tier_, other->tier_);
  buff1type_.Swap(&other->buff1type_);
  buff1value_.Swap(&other->buff1value_);
  buff2type_.Swap(&other->buff2type_);
  buff2value_.Swap(&other->buff2value_);
  buff3type_.Swap(&other->buff3type_);
  buff3value_.Swap(&other->buff3value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DungeonTier_DungeonTierTable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DungeonTier_DungeonTierTable_descriptor_;
  metadata.reflection = DungeonTier_DungeonTierTable_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DungeonTier::kTableNameFieldNumber;
const int DungeonTier::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DungeonTier::DungeonTier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.DungeonTier)
}

void DungeonTier::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DungeonTier::DungeonTier(const DungeonTier& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.DungeonTier)
}

void DungeonTier::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DungeonTier::~DungeonTier() {
  // @@protoc_insertion_point(destructor:MSG.DungeonTier)
  SharedDtor();
}

void DungeonTier::SharedDtor() {
  tablename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DungeonTier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DungeonTier::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DungeonTier_descriptor_;
}

const DungeonTier& DungeonTier::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

DungeonTier* DungeonTier::default_instance_ = NULL;

DungeonTier* DungeonTier::New(::google::protobuf::Arena* arena) const {
  DungeonTier* n = new DungeonTier;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DungeonTier::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.DungeonTier)
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.Clear();
}

bool DungeonTier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.DungeonTier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string TableName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tablename().data(), this->tablename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.DungeonTier.TableName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .MSG.DungeonTier.DungeonTierTable Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.DungeonTier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.DungeonTier)
  return false;
#undef DO_
}

void DungeonTier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.DungeonTier)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.DungeonTier.TableName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tablename(), output);
  }

  // repeated .MSG.DungeonTier.DungeonTierTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.DungeonTier)
}

::google::protobuf::uint8* DungeonTier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.DungeonTier)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.DungeonTier.TableName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tablename(), target);
  }

  // repeated .MSG.DungeonTier.DungeonTierTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->data(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.DungeonTier)
  return target;
}

int DungeonTier::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.DungeonTier)
  int total_size = 0;

  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tablename());
  }

  // repeated .MSG.DungeonTier.DungeonTierTable Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DungeonTier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.DungeonTier)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DungeonTier* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DungeonTier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.DungeonTier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.DungeonTier)
    MergeFrom(*source);
  }
}

void DungeonTier::MergeFrom(const DungeonTier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.DungeonTier)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
  if (from.tablename().size() > 0) {

    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
}

void DungeonTier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.DungeonTier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DungeonTier::CopyFrom(const DungeonTier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.DungeonTier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonTier::IsInitialized() const {

  return true;
}

void DungeonTier::Swap(DungeonTier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DungeonTier::InternalSwap(DungeonTier* other) {
  tablename_.Swap(&other->tablename_);
  data_.UnsafeArenaSwap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DungeonTier::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DungeonTier_descriptor_;
  metadata.reflection = DungeonTier_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DungeonTier_DungeonTierTable

// optional uint32 Tier = 1;
void DungeonTier_DungeonTierTable::clear_tier() {
  tier_ = 0u;
}
 ::google::protobuf::uint32 DungeonTier_DungeonTierTable::tier() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonTier.DungeonTierTable.Tier)
  return tier_;
}
 void DungeonTier_DungeonTierTable::set_tier(::google::protobuf::uint32 value) {
  
  tier_ = value;
  // @@protoc_insertion_point(field_set:MSG.DungeonTier.DungeonTierTable.Tier)
}

// optional string Buff1Type = 2;
void DungeonTier_DungeonTierTable::clear_buff1type() {
  buff1type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DungeonTier_DungeonTierTable::buff1type() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonTier.DungeonTierTable.Buff1Type)
  return buff1type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DungeonTier_DungeonTierTable::set_buff1type(const ::std::string& value) {
  
  buff1type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.DungeonTier.DungeonTierTable.Buff1Type)
}
 void DungeonTier_DungeonTierTable::set_buff1type(const char* value) {
  
  buff1type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.DungeonTier.DungeonTierTable.Buff1Type)
}
 void DungeonTier_DungeonTierTable::set_buff1type(const char* value, size_t size) {
  
  buff1type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.DungeonTier.DungeonTierTable.Buff1Type)
}
 ::std::string* DungeonTier_DungeonTierTable::mutable_buff1type() {
  
  // @@protoc_insertion_point(field_mutable:MSG.DungeonTier.DungeonTierTable.Buff1Type)
  return buff1type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DungeonTier_DungeonTierTable::release_buff1type() {
  // @@protoc_insertion_point(field_release:MSG.DungeonTier.DungeonTierTable.Buff1Type)
  
  return buff1type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DungeonTier_DungeonTierTable::set_allocated_buff1type(::std::string* buff1type) {
  if (buff1type != NULL) {
    
  } else {
    
  }
  buff1type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff1type);
  // @@protoc_insertion_point(field_set_allocated:MSG.DungeonTier.DungeonTierTable.Buff1Type)
}

// optional string Buff1Value = 3;
void DungeonTier_DungeonTierTable::clear_buff1value() {
  buff1value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DungeonTier_DungeonTierTable::buff1value() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonTier.DungeonTierTable.Buff1Value)
  return buff1value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DungeonTier_DungeonTierTable::set_buff1value(const ::std::string& value) {
  
  buff1value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.DungeonTier.DungeonTierTable.Buff1Value)
}
 void DungeonTier_DungeonTierTable::set_buff1value(const char* value) {
  
  buff1value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.DungeonTier.DungeonTierTable.Buff1Value)
}
 void DungeonTier_DungeonTierTable::set_buff1value(const char* value, size_t size) {
  
  buff1value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.DungeonTier.DungeonTierTable.Buff1Value)
}
 ::std::string* DungeonTier_DungeonTierTable::mutable_buff1value() {
  
  // @@protoc_insertion_point(field_mutable:MSG.DungeonTier.DungeonTierTable.Buff1Value)
  return buff1value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DungeonTier_DungeonTierTable::release_buff1value() {
  // @@protoc_insertion_point(field_release:MSG.DungeonTier.DungeonTierTable.Buff1Value)
  
  return buff1value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DungeonTier_DungeonTierTable::set_allocated_buff1value(::std::string* buff1value) {
  if (buff1value != NULL) {
    
  } else {
    
  }
  buff1value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff1value);
  // @@protoc_insertion_point(field_set_allocated:MSG.DungeonTier.DungeonTierTable.Buff1Value)
}

// optional string Buff2Type = 4;
void DungeonTier_DungeonTierTable::clear_buff2type() {
  buff2type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DungeonTier_DungeonTierTable::buff2type() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonTier.DungeonTierTable.Buff2Type)
  return buff2type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DungeonTier_DungeonTierTable::set_buff2type(const ::std::string& value) {
  
  buff2type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.DungeonTier.DungeonTierTable.Buff2Type)
}
 void DungeonTier_DungeonTierTable::set_buff2type(const char* value) {
  
  buff2type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.DungeonTier.DungeonTierTable.Buff2Type)
}
 void DungeonTier_DungeonTierTable::set_buff2type(const char* value, size_t size) {
  
  buff2type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.DungeonTier.DungeonTierTable.Buff2Type)
}
 ::std::string* DungeonTier_DungeonTierTable::mutable_buff2type() {
  
  // @@protoc_insertion_point(field_mutable:MSG.DungeonTier.DungeonTierTable.Buff2Type)
  return buff2type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DungeonTier_DungeonTierTable::release_buff2type() {
  // @@protoc_insertion_point(field_release:MSG.DungeonTier.DungeonTierTable.Buff2Type)
  
  return buff2type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DungeonTier_DungeonTierTable::set_allocated_buff2type(::std::string* buff2type) {
  if (buff2type != NULL) {
    
  } else {
    
  }
  buff2type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff2type);
  // @@protoc_insertion_point(field_set_allocated:MSG.DungeonTier.DungeonTierTable.Buff2Type)
}

// optional string Buff2Value = 5;
void DungeonTier_DungeonTierTable::clear_buff2value() {
  buff2value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DungeonTier_DungeonTierTable::buff2value() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonTier.DungeonTierTable.Buff2Value)
  return buff2value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DungeonTier_DungeonTierTable::set_buff2value(const ::std::string& value) {
  
  buff2value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.DungeonTier.DungeonTierTable.Buff2Value)
}
 void DungeonTier_DungeonTierTable::set_buff2value(const char* value) {
  
  buff2value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.DungeonTier.DungeonTierTable.Buff2Value)
}
 void DungeonTier_DungeonTierTable::set_buff2value(const char* value, size_t size) {
  
  buff2value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.DungeonTier.DungeonTierTable.Buff2Value)
}
 ::std::string* DungeonTier_DungeonTierTable::mutable_buff2value() {
  
  // @@protoc_insertion_point(field_mutable:MSG.DungeonTier.DungeonTierTable.Buff2Value)
  return buff2value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DungeonTier_DungeonTierTable::release_buff2value() {
  // @@protoc_insertion_point(field_release:MSG.DungeonTier.DungeonTierTable.Buff2Value)
  
  return buff2value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DungeonTier_DungeonTierTable::set_allocated_buff2value(::std::string* buff2value) {
  if (buff2value != NULL) {
    
  } else {
    
  }
  buff2value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff2value);
  // @@protoc_insertion_point(field_set_allocated:MSG.DungeonTier.DungeonTierTable.Buff2Value)
}

// optional string Buff3Type = 6;
void DungeonTier_DungeonTierTable::clear_buff3type() {
  buff3type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DungeonTier_DungeonTierTable::buff3type() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonTier.DungeonTierTable.Buff3Type)
  return buff3type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DungeonTier_DungeonTierTable::set_buff3type(const ::std::string& value) {
  
  buff3type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.DungeonTier.DungeonTierTable.Buff3Type)
}
 void DungeonTier_DungeonTierTable::set_buff3type(const char* value) {
  
  buff3type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.DungeonTier.DungeonTierTable.Buff3Type)
}
 void DungeonTier_DungeonTierTable::set_buff3type(const char* value, size_t size) {
  
  buff3type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.DungeonTier.DungeonTierTable.Buff3Type)
}
 ::std::string* DungeonTier_DungeonTierTable::mutable_buff3type() {
  
  // @@protoc_insertion_point(field_mutable:MSG.DungeonTier.DungeonTierTable.Buff3Type)
  return buff3type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DungeonTier_DungeonTierTable::release_buff3type() {
  // @@protoc_insertion_point(field_release:MSG.DungeonTier.DungeonTierTable.Buff3Type)
  
  return buff3type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DungeonTier_DungeonTierTable::set_allocated_buff3type(::std::string* buff3type) {
  if (buff3type != NULL) {
    
  } else {
    
  }
  buff3type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff3type);
  // @@protoc_insertion_point(field_set_allocated:MSG.DungeonTier.DungeonTierTable.Buff3Type)
}

// optional string Buff3Value = 7;
void DungeonTier_DungeonTierTable::clear_buff3value() {
  buff3value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DungeonTier_DungeonTierTable::buff3value() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonTier.DungeonTierTable.Buff3Value)
  return buff3value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DungeonTier_DungeonTierTable::set_buff3value(const ::std::string& value) {
  
  buff3value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.DungeonTier.DungeonTierTable.Buff3Value)
}
 void DungeonTier_DungeonTierTable::set_buff3value(const char* value) {
  
  buff3value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.DungeonTier.DungeonTierTable.Buff3Value)
}
 void DungeonTier_DungeonTierTable::set_buff3value(const char* value, size_t size) {
  
  buff3value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.DungeonTier.DungeonTierTable.Buff3Value)
}
 ::std::string* DungeonTier_DungeonTierTable::mutable_buff3value() {
  
  // @@protoc_insertion_point(field_mutable:MSG.DungeonTier.DungeonTierTable.Buff3Value)
  return buff3value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DungeonTier_DungeonTierTable::release_buff3value() {
  // @@protoc_insertion_point(field_release:MSG.DungeonTier.DungeonTierTable.Buff3Value)
  
  return buff3value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DungeonTier_DungeonTierTable::set_allocated_buff3value(::std::string* buff3value) {
  if (buff3value != NULL) {
    
  } else {
    
  }
  buff3value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff3value);
  // @@protoc_insertion_point(field_set_allocated:MSG.DungeonTier.DungeonTierTable.Buff3Value)
}

// -------------------------------------------------------------------

// DungeonTier

// optional string TableName = 1;
void DungeonTier::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DungeonTier::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonTier.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DungeonTier::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.DungeonTier.TableName)
}
 void DungeonTier::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.DungeonTier.TableName)
}
 void DungeonTier::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.DungeonTier.TableName)
}
 ::std::string* DungeonTier::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.DungeonTier.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DungeonTier::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.DungeonTier.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DungeonTier::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.DungeonTier.TableName)
}

// repeated .MSG.DungeonTier.DungeonTierTable Data = 2;
int DungeonTier::data_size() const {
  return data_.size();
}
void DungeonTier::clear_data() {
  data_.Clear();
}
const ::MSG::DungeonTier_DungeonTierTable& DungeonTier::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.DungeonTier.Data)
  return data_.Get(index);
}
::MSG::DungeonTier_DungeonTierTable* DungeonTier::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.DungeonTier.Data)
  return data_.Mutable(index);
}
::MSG::DungeonTier_DungeonTierTable* DungeonTier::add_data() {
  // @@protoc_insertion_point(field_add:MSG.DungeonTier.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::DungeonTier_DungeonTierTable >*
DungeonTier::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.DungeonTier.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::DungeonTier_DungeonTierTable >&
DungeonTier::data() const {
  // @@protoc_insertion_point(field_list:MSG.DungeonTier.Data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MobAStat_MobAStatTable::kLevelFieldNumber;
const int MobAStat_MobAStatTable::kExpFieldNumber;
const int MobAStat_MobAStatTable::kAtkFieldNumber;
const int MobAStat_MobAStatTable::kDefFieldNumber;
const int MobAStat_MobAStatTable::kHpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MobAStat_MobAStatTable::MobAStat_MobAStatTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.MobAStat.MobAStatTable)
}

void MobAStat_MobAStatTable::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MobAStat_MobAStatTable::MobAStat_MobAStatTable(const MobAStat_MobAStatTable& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.MobAStat.MobAStatTable)
}

void MobAStat_MobAStatTable::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  level_ = 0u;
  exp_ = 0u;
  atk_ = 0u;
  def_ = 0u;
  hp_ = 0u;
}

MobAStat_MobAStatTable::~MobAStat_MobAStatTable() {
  // @@protoc_insertion_point(destructor:MSG.MobAStat.MobAStatTable)
  SharedDtor();
}

void MobAStat_MobAStatTable::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MobAStat_MobAStatTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobAStat_MobAStatTable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobAStat_MobAStatTable_descriptor_;
}

const MobAStat_MobAStatTable& MobAStat_MobAStatTable::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

MobAStat_MobAStatTable* MobAStat_MobAStatTable::default_instance_ = NULL;

MobAStat_MobAStatTable* MobAStat_MobAStatTable::New(::google::protobuf::Arena* arena) const {
  MobAStat_MobAStatTable* n = new MobAStat_MobAStatTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MobAStat_MobAStatTable::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.MobAStat.MobAStatTable)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MobAStat_MobAStatTable, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MobAStat_MobAStatTable*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(level_, hp_);

#undef ZR_HELPER_
#undef ZR_

}

bool MobAStat_MobAStatTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.MobAStat.MobAStatTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Exp;
        break;
      }

      // optional uint32 Exp = 2;
      case 2: {
        if (tag == 16) {
         parse_Exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Atk;
        break;
      }

      // optional uint32 Atk = 3;
      case 3: {
        if (tag == 24) {
         parse_Atk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &atk_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Def;
        break;
      }

      // optional uint32 Def = 4;
      case 4: {
        if (tag == 32) {
         parse_Def:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Hp;
        break;
      }

      // optional uint32 Hp = 5;
      case 5: {
        if (tag == 40) {
         parse_Hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.MobAStat.MobAStatTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.MobAStat.MobAStatTable)
  return false;
#undef DO_
}

void MobAStat_MobAStatTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.MobAStat.MobAStatTable)
  // optional uint32 Level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // optional uint32 Exp = 2;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->exp(), output);
  }

  // optional uint32 Atk = 3;
  if (this->atk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->atk(), output);
  }

  // optional uint32 Def = 4;
  if (this->def() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->def(), output);
  }

  // optional uint32 Hp = 5;
  if (this->hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->hp(), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.MobAStat.MobAStatTable)
}

::google::protobuf::uint8* MobAStat_MobAStatTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.MobAStat.MobAStatTable)
  // optional uint32 Level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // optional uint32 Exp = 2;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->exp(), target);
  }

  // optional uint32 Atk = 3;
  if (this->atk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->atk(), target);
  }

  // optional uint32 Def = 4;
  if (this->def() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->def(), target);
  }

  // optional uint32 Hp = 5;
  if (this->hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->hp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.MobAStat.MobAStatTable)
  return target;
}

int MobAStat_MobAStatTable::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.MobAStat.MobAStatTable)
  int total_size = 0;

  // optional uint32 Level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // optional uint32 Exp = 2;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exp());
  }

  // optional uint32 Atk = 3;
  if (this->atk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->atk());
  }

  // optional uint32 Def = 4;
  if (this->def() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->def());
  }

  // optional uint32 Hp = 5;
  if (this->hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hp());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobAStat_MobAStatTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.MobAStat.MobAStatTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MobAStat_MobAStatTable* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MobAStat_MobAStatTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.MobAStat.MobAStatTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.MobAStat.MobAStatTable)
    MergeFrom(*source);
  }
}

void MobAStat_MobAStatTable::MergeFrom(const MobAStat_MobAStatTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.MobAStat.MobAStatTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.atk() != 0) {
    set_atk(from.atk());
  }
  if (from.def() != 0) {
    set_def(from.def());
  }
  if (from.hp() != 0) {
    set_hp(from.hp());
  }
}

void MobAStat_MobAStatTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.MobAStat.MobAStatTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobAStat_MobAStatTable::CopyFrom(const MobAStat_MobAStatTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.MobAStat.MobAStatTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobAStat_MobAStatTable::IsInitialized() const {

  return true;
}

void MobAStat_MobAStatTable::Swap(MobAStat_MobAStatTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MobAStat_MobAStatTable::InternalSwap(MobAStat_MobAStatTable* other) {
  std::swap(level_, other->level_);
  std::swap(exp_, other->exp_);
  std::swap(atk_, other->atk_);
  std::swap(def_, other->def_);
  std::swap(hp_, other->hp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MobAStat_MobAStatTable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobAStat_MobAStatTable_descriptor_;
  metadata.reflection = MobAStat_MobAStatTable_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MobAStat::kTableNameFieldNumber;
const int MobAStat::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MobAStat::MobAStat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.MobAStat)
}

void MobAStat::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MobAStat::MobAStat(const MobAStat& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.MobAStat)
}

void MobAStat::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MobAStat::~MobAStat() {
  // @@protoc_insertion_point(destructor:MSG.MobAStat)
  SharedDtor();
}

void MobAStat::SharedDtor() {
  tablename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MobAStat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobAStat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobAStat_descriptor_;
}

const MobAStat& MobAStat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

MobAStat* MobAStat::default_instance_ = NULL;

MobAStat* MobAStat::New(::google::protobuf::Arena* arena) const {
  MobAStat* n = new MobAStat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MobAStat::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.MobAStat)
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.Clear();
}

bool MobAStat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.MobAStat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string TableName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tablename().data(), this->tablename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.MobAStat.TableName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .MSG.MobAStat.MobAStatTable Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.MobAStat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.MobAStat)
  return false;
#undef DO_
}

void MobAStat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.MobAStat)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.MobAStat.TableName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tablename(), output);
  }

  // repeated .MSG.MobAStat.MobAStatTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.MobAStat)
}

::google::protobuf::uint8* MobAStat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.MobAStat)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.MobAStat.TableName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tablename(), target);
  }

  // repeated .MSG.MobAStat.MobAStatTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->data(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.MobAStat)
  return target;
}

int MobAStat::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.MobAStat)
  int total_size = 0;

  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tablename());
  }

  // repeated .MSG.MobAStat.MobAStatTable Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobAStat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.MobAStat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MobAStat* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MobAStat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.MobAStat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.MobAStat)
    MergeFrom(*source);
  }
}

void MobAStat::MergeFrom(const MobAStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.MobAStat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
  if (from.tablename().size() > 0) {

    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
}

void MobAStat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.MobAStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobAStat::CopyFrom(const MobAStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.MobAStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobAStat::IsInitialized() const {

  return true;
}

void MobAStat::Swap(MobAStat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MobAStat::InternalSwap(MobAStat* other) {
  tablename_.Swap(&other->tablename_);
  data_.UnsafeArenaSwap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MobAStat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobAStat_descriptor_;
  metadata.reflection = MobAStat_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MobAStat_MobAStatTable

// optional uint32 Level = 1;
void MobAStat_MobAStatTable::clear_level() {
  level_ = 0u;
}
 ::google::protobuf::uint32 MobAStat_MobAStatTable::level() const {
  // @@protoc_insertion_point(field_get:MSG.MobAStat.MobAStatTable.Level)
  return level_;
}
 void MobAStat_MobAStatTable::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobAStat.MobAStatTable.Level)
}

// optional uint32 Exp = 2;
void MobAStat_MobAStatTable::clear_exp() {
  exp_ = 0u;
}
 ::google::protobuf::uint32 MobAStat_MobAStatTable::exp() const {
  // @@protoc_insertion_point(field_get:MSG.MobAStat.MobAStatTable.Exp)
  return exp_;
}
 void MobAStat_MobAStatTable::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobAStat.MobAStatTable.Exp)
}

// optional uint32 Atk = 3;
void MobAStat_MobAStatTable::clear_atk() {
  atk_ = 0u;
}
 ::google::protobuf::uint32 MobAStat_MobAStatTable::atk() const {
  // @@protoc_insertion_point(field_get:MSG.MobAStat.MobAStatTable.Atk)
  return atk_;
}
 void MobAStat_MobAStatTable::set_atk(::google::protobuf::uint32 value) {
  
  atk_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobAStat.MobAStatTable.Atk)
}

// optional uint32 Def = 4;
void MobAStat_MobAStatTable::clear_def() {
  def_ = 0u;
}
 ::google::protobuf::uint32 MobAStat_MobAStatTable::def() const {
  // @@protoc_insertion_point(field_get:MSG.MobAStat.MobAStatTable.Def)
  return def_;
}
 void MobAStat_MobAStatTable::set_def(::google::protobuf::uint32 value) {
  
  def_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobAStat.MobAStatTable.Def)
}

// optional uint32 Hp = 5;
void MobAStat_MobAStatTable::clear_hp() {
  hp_ = 0u;
}
 ::google::protobuf::uint32 MobAStat_MobAStatTable::hp() const {
  // @@protoc_insertion_point(field_get:MSG.MobAStat.MobAStatTable.Hp)
  return hp_;
}
 void MobAStat_MobAStatTable::set_hp(::google::protobuf::uint32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobAStat.MobAStatTable.Hp)
}

// -------------------------------------------------------------------

// MobAStat

// optional string TableName = 1;
void MobAStat::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MobAStat::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.MobAStat.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MobAStat::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.MobAStat.TableName)
}
 void MobAStat::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.MobAStat.TableName)
}
 void MobAStat::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.MobAStat.TableName)
}
 ::std::string* MobAStat::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.MobAStat.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MobAStat::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.MobAStat.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MobAStat::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.MobAStat.TableName)
}

// repeated .MSG.MobAStat.MobAStatTable Data = 2;
int MobAStat::data_size() const {
  return data_.size();
}
void MobAStat::clear_data() {
  data_.Clear();
}
const ::MSG::MobAStat_MobAStatTable& MobAStat::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.MobAStat.Data)
  return data_.Get(index);
}
::MSG::MobAStat_MobAStatTable* MobAStat::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.MobAStat.Data)
  return data_.Mutable(index);
}
::MSG::MobAStat_MobAStatTable* MobAStat::add_data() {
  // @@protoc_insertion_point(field_add:MSG.MobAStat.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::MobAStat_MobAStatTable >*
MobAStat::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.MobAStat.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::MobAStat_MobAStatTable >&
MobAStat::data() const {
  // @@protoc_insertion_point(field_list:MSG.MobAStat.Data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MobBStat_MobBStatTable::kLevelFieldNumber;
const int MobBStat_MobBStatTable::kExpFieldNumber;
const int MobBStat_MobBStatTable::kAtkFieldNumber;
const int MobBStat_MobBStatTable::kDefFieldNumber;
const int MobBStat_MobBStatTable::kHpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MobBStat_MobBStatTable::MobBStat_MobBStatTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.MobBStat.MobBStatTable)
}

void MobBStat_MobBStatTable::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MobBStat_MobBStatTable::MobBStat_MobBStatTable(const MobBStat_MobBStatTable& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.MobBStat.MobBStatTable)
}

void MobBStat_MobBStatTable::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  level_ = 0u;
  exp_ = 0u;
  atk_ = 0u;
  def_ = 0u;
  hp_ = 0u;
}

MobBStat_MobBStatTable::~MobBStat_MobBStatTable() {
  // @@protoc_insertion_point(destructor:MSG.MobBStat.MobBStatTable)
  SharedDtor();
}

void MobBStat_MobBStatTable::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MobBStat_MobBStatTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobBStat_MobBStatTable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobBStat_MobBStatTable_descriptor_;
}

const MobBStat_MobBStatTable& MobBStat_MobBStatTable::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

MobBStat_MobBStatTable* MobBStat_MobBStatTable::default_instance_ = NULL;

MobBStat_MobBStatTable* MobBStat_MobBStatTable::New(::google::protobuf::Arena* arena) const {
  MobBStat_MobBStatTable* n = new MobBStat_MobBStatTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MobBStat_MobBStatTable::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.MobBStat.MobBStatTable)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MobBStat_MobBStatTable, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MobBStat_MobBStatTable*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(level_, hp_);

#undef ZR_HELPER_
#undef ZR_

}

bool MobBStat_MobBStatTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.MobBStat.MobBStatTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Exp;
        break;
      }

      // optional uint32 Exp = 2;
      case 2: {
        if (tag == 16) {
         parse_Exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Atk;
        break;
      }

      // optional uint32 Atk = 3;
      case 3: {
        if (tag == 24) {
         parse_Atk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &atk_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Def;
        break;
      }

      // optional uint32 Def = 4;
      case 4: {
        if (tag == 32) {
         parse_Def:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Hp;
        break;
      }

      // optional uint32 Hp = 5;
      case 5: {
        if (tag == 40) {
         parse_Hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.MobBStat.MobBStatTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.MobBStat.MobBStatTable)
  return false;
#undef DO_
}

void MobBStat_MobBStatTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.MobBStat.MobBStatTable)
  // optional uint32 Level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // optional uint32 Exp = 2;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->exp(), output);
  }

  // optional uint32 Atk = 3;
  if (this->atk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->atk(), output);
  }

  // optional uint32 Def = 4;
  if (this->def() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->def(), output);
  }

  // optional uint32 Hp = 5;
  if (this->hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->hp(), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.MobBStat.MobBStatTable)
}

::google::protobuf::uint8* MobBStat_MobBStatTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.MobBStat.MobBStatTable)
  // optional uint32 Level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // optional uint32 Exp = 2;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->exp(), target);
  }

  // optional uint32 Atk = 3;
  if (this->atk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->atk(), target);
  }

  // optional uint32 Def = 4;
  if (this->def() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->def(), target);
  }

  // optional uint32 Hp = 5;
  if (this->hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->hp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.MobBStat.MobBStatTable)
  return target;
}

int MobBStat_MobBStatTable::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.MobBStat.MobBStatTable)
  int total_size = 0;

  // optional uint32 Level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // optional uint32 Exp = 2;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exp());
  }

  // optional uint32 Atk = 3;
  if (this->atk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->atk());
  }

  // optional uint32 Def = 4;
  if (this->def() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->def());
  }

  // optional uint32 Hp = 5;
  if (this->hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hp());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobBStat_MobBStatTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.MobBStat.MobBStatTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MobBStat_MobBStatTable* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MobBStat_MobBStatTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.MobBStat.MobBStatTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.MobBStat.MobBStatTable)
    MergeFrom(*source);
  }
}

void MobBStat_MobBStatTable::MergeFrom(const MobBStat_MobBStatTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.MobBStat.MobBStatTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.atk() != 0) {
    set_atk(from.atk());
  }
  if (from.def() != 0) {
    set_def(from.def());
  }
  if (from.hp() != 0) {
    set_hp(from.hp());
  }
}

void MobBStat_MobBStatTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.MobBStat.MobBStatTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobBStat_MobBStatTable::CopyFrom(const MobBStat_MobBStatTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.MobBStat.MobBStatTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobBStat_MobBStatTable::IsInitialized() const {

  return true;
}

void MobBStat_MobBStatTable::Swap(MobBStat_MobBStatTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MobBStat_MobBStatTable::InternalSwap(MobBStat_MobBStatTable* other) {
  std::swap(level_, other->level_);
  std::swap(exp_, other->exp_);
  std::swap(atk_, other->atk_);
  std::swap(def_, other->def_);
  std::swap(hp_, other->hp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MobBStat_MobBStatTable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobBStat_MobBStatTable_descriptor_;
  metadata.reflection = MobBStat_MobBStatTable_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MobBStat::kTableNameFieldNumber;
const int MobBStat::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MobBStat::MobBStat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.MobBStat)
}

void MobBStat::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MobBStat::MobBStat(const MobBStat& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.MobBStat)
}

void MobBStat::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MobBStat::~MobBStat() {
  // @@protoc_insertion_point(destructor:MSG.MobBStat)
  SharedDtor();
}

void MobBStat::SharedDtor() {
  tablename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MobBStat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobBStat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobBStat_descriptor_;
}

const MobBStat& MobBStat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

MobBStat* MobBStat::default_instance_ = NULL;

MobBStat* MobBStat::New(::google::protobuf::Arena* arena) const {
  MobBStat* n = new MobBStat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MobBStat::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.MobBStat)
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.Clear();
}

bool MobBStat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.MobBStat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string TableName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tablename().data(), this->tablename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.MobBStat.TableName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .MSG.MobBStat.MobBStatTable Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.MobBStat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.MobBStat)
  return false;
#undef DO_
}

void MobBStat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.MobBStat)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.MobBStat.TableName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tablename(), output);
  }

  // repeated .MSG.MobBStat.MobBStatTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.MobBStat)
}

::google::protobuf::uint8* MobBStat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.MobBStat)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.MobBStat.TableName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tablename(), target);
  }

  // repeated .MSG.MobBStat.MobBStatTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->data(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.MobBStat)
  return target;
}

int MobBStat::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.MobBStat)
  int total_size = 0;

  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tablename());
  }

  // repeated .MSG.MobBStat.MobBStatTable Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobBStat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.MobBStat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MobBStat* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MobBStat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.MobBStat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.MobBStat)
    MergeFrom(*source);
  }
}

void MobBStat::MergeFrom(const MobBStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.MobBStat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
  if (from.tablename().size() > 0) {

    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
}

void MobBStat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.MobBStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobBStat::CopyFrom(const MobBStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.MobBStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobBStat::IsInitialized() const {

  return true;
}

void MobBStat::Swap(MobBStat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MobBStat::InternalSwap(MobBStat* other) {
  tablename_.Swap(&other->tablename_);
  data_.UnsafeArenaSwap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MobBStat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobBStat_descriptor_;
  metadata.reflection = MobBStat_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MobBStat_MobBStatTable

// optional uint32 Level = 1;
void MobBStat_MobBStatTable::clear_level() {
  level_ = 0u;
}
 ::google::protobuf::uint32 MobBStat_MobBStatTable::level() const {
  // @@protoc_insertion_point(field_get:MSG.MobBStat.MobBStatTable.Level)
  return level_;
}
 void MobBStat_MobBStatTable::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobBStat.MobBStatTable.Level)
}

// optional uint32 Exp = 2;
void MobBStat_MobBStatTable::clear_exp() {
  exp_ = 0u;
}
 ::google::protobuf::uint32 MobBStat_MobBStatTable::exp() const {
  // @@protoc_insertion_point(field_get:MSG.MobBStat.MobBStatTable.Exp)
  return exp_;
}
 void MobBStat_MobBStatTable::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobBStat.MobBStatTable.Exp)
}

// optional uint32 Atk = 3;
void MobBStat_MobBStatTable::clear_atk() {
  atk_ = 0u;
}
 ::google::protobuf::uint32 MobBStat_MobBStatTable::atk() const {
  // @@protoc_insertion_point(field_get:MSG.MobBStat.MobBStatTable.Atk)
  return atk_;
}
 void MobBStat_MobBStatTable::set_atk(::google::protobuf::uint32 value) {
  
  atk_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobBStat.MobBStatTable.Atk)
}

// optional uint32 Def = 4;
void MobBStat_MobBStatTable::clear_def() {
  def_ = 0u;
}
 ::google::protobuf::uint32 MobBStat_MobBStatTable::def() const {
  // @@protoc_insertion_point(field_get:MSG.MobBStat.MobBStatTable.Def)
  return def_;
}
 void MobBStat_MobBStatTable::set_def(::google::protobuf::uint32 value) {
  
  def_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobBStat.MobBStatTable.Def)
}

// optional uint32 Hp = 5;
void MobBStat_MobBStatTable::clear_hp() {
  hp_ = 0u;
}
 ::google::protobuf::uint32 MobBStat_MobBStatTable::hp() const {
  // @@protoc_insertion_point(field_get:MSG.MobBStat.MobBStatTable.Hp)
  return hp_;
}
 void MobBStat_MobBStatTable::set_hp(::google::protobuf::uint32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobBStat.MobBStatTable.Hp)
}

// -------------------------------------------------------------------

// MobBStat

// optional string TableName = 1;
void MobBStat::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MobBStat::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.MobBStat.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MobBStat::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.MobBStat.TableName)
}
 void MobBStat::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.MobBStat.TableName)
}
 void MobBStat::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.MobBStat.TableName)
}
 ::std::string* MobBStat::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.MobBStat.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MobBStat::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.MobBStat.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MobBStat::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.MobBStat.TableName)
}

// repeated .MSG.MobBStat.MobBStatTable Data = 2;
int MobBStat::data_size() const {
  return data_.size();
}
void MobBStat::clear_data() {
  data_.Clear();
}
const ::MSG::MobBStat_MobBStatTable& MobBStat::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.MobBStat.Data)
  return data_.Get(index);
}
::MSG::MobBStat_MobBStatTable* MobBStat::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.MobBStat.Data)
  return data_.Mutable(index);
}
::MSG::MobBStat_MobBStatTable* MobBStat::add_data() {
  // @@protoc_insertion_point(field_add:MSG.MobBStat.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::MobBStat_MobBStatTable >*
MobBStat::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.MobBStat.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::MobBStat_MobBStatTable >&
MobBStat::data() const {
  // @@protoc_insertion_point(field_list:MSG.MobBStat.Data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MobCStat_MobCStatTable::kLevelFieldNumber;
const int MobCStat_MobCStatTable::kExpFieldNumber;
const int MobCStat_MobCStatTable::kAtkFieldNumber;
const int MobCStat_MobCStatTable::kDefFieldNumber;
const int MobCStat_MobCStatTable::kHpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MobCStat_MobCStatTable::MobCStat_MobCStatTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.MobCStat.MobCStatTable)
}

void MobCStat_MobCStatTable::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MobCStat_MobCStatTable::MobCStat_MobCStatTable(const MobCStat_MobCStatTable& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.MobCStat.MobCStatTable)
}

void MobCStat_MobCStatTable::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  level_ = 0u;
  exp_ = 0u;
  atk_ = 0u;
  def_ = 0u;
  hp_ = 0u;
}

MobCStat_MobCStatTable::~MobCStat_MobCStatTable() {
  // @@protoc_insertion_point(destructor:MSG.MobCStat.MobCStatTable)
  SharedDtor();
}

void MobCStat_MobCStatTable::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MobCStat_MobCStatTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobCStat_MobCStatTable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobCStat_MobCStatTable_descriptor_;
}

const MobCStat_MobCStatTable& MobCStat_MobCStatTable::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

MobCStat_MobCStatTable* MobCStat_MobCStatTable::default_instance_ = NULL;

MobCStat_MobCStatTable* MobCStat_MobCStatTable::New(::google::protobuf::Arena* arena) const {
  MobCStat_MobCStatTable* n = new MobCStat_MobCStatTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MobCStat_MobCStatTable::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.MobCStat.MobCStatTable)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MobCStat_MobCStatTable, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MobCStat_MobCStatTable*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(level_, hp_);

#undef ZR_HELPER_
#undef ZR_

}

bool MobCStat_MobCStatTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.MobCStat.MobCStatTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Exp;
        break;
      }

      // optional uint32 Exp = 2;
      case 2: {
        if (tag == 16) {
         parse_Exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Atk;
        break;
      }

      // optional uint32 Atk = 3;
      case 3: {
        if (tag == 24) {
         parse_Atk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &atk_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Def;
        break;
      }

      // optional uint32 Def = 4;
      case 4: {
        if (tag == 32) {
         parse_Def:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Hp;
        break;
      }

      // optional uint32 Hp = 5;
      case 5: {
        if (tag == 40) {
         parse_Hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.MobCStat.MobCStatTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.MobCStat.MobCStatTable)
  return false;
#undef DO_
}

void MobCStat_MobCStatTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.MobCStat.MobCStatTable)
  // optional uint32 Level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // optional uint32 Exp = 2;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->exp(), output);
  }

  // optional uint32 Atk = 3;
  if (this->atk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->atk(), output);
  }

  // optional uint32 Def = 4;
  if (this->def() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->def(), output);
  }

  // optional uint32 Hp = 5;
  if (this->hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->hp(), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.MobCStat.MobCStatTable)
}

::google::protobuf::uint8* MobCStat_MobCStatTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.MobCStat.MobCStatTable)
  // optional uint32 Level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // optional uint32 Exp = 2;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->exp(), target);
  }

  // optional uint32 Atk = 3;
  if (this->atk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->atk(), target);
  }

  // optional uint32 Def = 4;
  if (this->def() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->def(), target);
  }

  // optional uint32 Hp = 5;
  if (this->hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->hp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.MobCStat.MobCStatTable)
  return target;
}

int MobCStat_MobCStatTable::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.MobCStat.MobCStatTable)
  int total_size = 0;

  // optional uint32 Level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // optional uint32 Exp = 2;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exp());
  }

  // optional uint32 Atk = 3;
  if (this->atk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->atk());
  }

  // optional uint32 Def = 4;
  if (this->def() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->def());
  }

  // optional uint32 Hp = 5;
  if (this->hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hp());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobCStat_MobCStatTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.MobCStat.MobCStatTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MobCStat_MobCStatTable* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MobCStat_MobCStatTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.MobCStat.MobCStatTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.MobCStat.MobCStatTable)
    MergeFrom(*source);
  }
}

void MobCStat_MobCStatTable::MergeFrom(const MobCStat_MobCStatTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.MobCStat.MobCStatTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.atk() != 0) {
    set_atk(from.atk());
  }
  if (from.def() != 0) {
    set_def(from.def());
  }
  if (from.hp() != 0) {
    set_hp(from.hp());
  }
}

void MobCStat_MobCStatTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.MobCStat.MobCStatTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobCStat_MobCStatTable::CopyFrom(const MobCStat_MobCStatTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.MobCStat.MobCStatTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobCStat_MobCStatTable::IsInitialized() const {

  return true;
}

void MobCStat_MobCStatTable::Swap(MobCStat_MobCStatTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MobCStat_MobCStatTable::InternalSwap(MobCStat_MobCStatTable* other) {
  std::swap(level_, other->level_);
  std::swap(exp_, other->exp_);
  std::swap(atk_, other->atk_);
  std::swap(def_, other->def_);
  std::swap(hp_, other->hp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MobCStat_MobCStatTable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobCStat_MobCStatTable_descriptor_;
  metadata.reflection = MobCStat_MobCStatTable_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MobCStat::kTableNameFieldNumber;
const int MobCStat::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MobCStat::MobCStat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.MobCStat)
}

void MobCStat::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MobCStat::MobCStat(const MobCStat& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.MobCStat)
}

void MobCStat::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MobCStat::~MobCStat() {
  // @@protoc_insertion_point(destructor:MSG.MobCStat)
  SharedDtor();
}

void MobCStat::SharedDtor() {
  tablename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MobCStat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobCStat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobCStat_descriptor_;
}

const MobCStat& MobCStat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

MobCStat* MobCStat::default_instance_ = NULL;

MobCStat* MobCStat::New(::google::protobuf::Arena* arena) const {
  MobCStat* n = new MobCStat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MobCStat::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.MobCStat)
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.Clear();
}

bool MobCStat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.MobCStat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string TableName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tablename().data(), this->tablename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.MobCStat.TableName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .MSG.MobCStat.MobCStatTable Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.MobCStat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.MobCStat)
  return false;
#undef DO_
}

void MobCStat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.MobCStat)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.MobCStat.TableName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tablename(), output);
  }

  // repeated .MSG.MobCStat.MobCStatTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.MobCStat)
}

::google::protobuf::uint8* MobCStat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.MobCStat)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.MobCStat.TableName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tablename(), target);
  }

  // repeated .MSG.MobCStat.MobCStatTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->data(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.MobCStat)
  return target;
}

int MobCStat::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.MobCStat)
  int total_size = 0;

  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tablename());
  }

  // repeated .MSG.MobCStat.MobCStatTable Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobCStat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.MobCStat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MobCStat* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MobCStat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.MobCStat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.MobCStat)
    MergeFrom(*source);
  }
}

void MobCStat::MergeFrom(const MobCStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.MobCStat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
  if (from.tablename().size() > 0) {

    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
}

void MobCStat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.MobCStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobCStat::CopyFrom(const MobCStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.MobCStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobCStat::IsInitialized() const {

  return true;
}

void MobCStat::Swap(MobCStat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MobCStat::InternalSwap(MobCStat* other) {
  tablename_.Swap(&other->tablename_);
  data_.UnsafeArenaSwap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MobCStat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobCStat_descriptor_;
  metadata.reflection = MobCStat_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MobCStat_MobCStatTable

// optional uint32 Level = 1;
void MobCStat_MobCStatTable::clear_level() {
  level_ = 0u;
}
 ::google::protobuf::uint32 MobCStat_MobCStatTable::level() const {
  // @@protoc_insertion_point(field_get:MSG.MobCStat.MobCStatTable.Level)
  return level_;
}
 void MobCStat_MobCStatTable::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobCStat.MobCStatTable.Level)
}

// optional uint32 Exp = 2;
void MobCStat_MobCStatTable::clear_exp() {
  exp_ = 0u;
}
 ::google::protobuf::uint32 MobCStat_MobCStatTable::exp() const {
  // @@protoc_insertion_point(field_get:MSG.MobCStat.MobCStatTable.Exp)
  return exp_;
}
 void MobCStat_MobCStatTable::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobCStat.MobCStatTable.Exp)
}

// optional uint32 Atk = 3;
void MobCStat_MobCStatTable::clear_atk() {
  atk_ = 0u;
}
 ::google::protobuf::uint32 MobCStat_MobCStatTable::atk() const {
  // @@protoc_insertion_point(field_get:MSG.MobCStat.MobCStatTable.Atk)
  return atk_;
}
 void MobCStat_MobCStatTable::set_atk(::google::protobuf::uint32 value) {
  
  atk_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobCStat.MobCStatTable.Atk)
}

// optional uint32 Def = 4;
void MobCStat_MobCStatTable::clear_def() {
  def_ = 0u;
}
 ::google::protobuf::uint32 MobCStat_MobCStatTable::def() const {
  // @@protoc_insertion_point(field_get:MSG.MobCStat.MobCStatTable.Def)
  return def_;
}
 void MobCStat_MobCStatTable::set_def(::google::protobuf::uint32 value) {
  
  def_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobCStat.MobCStatTable.Def)
}

// optional uint32 Hp = 5;
void MobCStat_MobCStatTable::clear_hp() {
  hp_ = 0u;
}
 ::google::protobuf::uint32 MobCStat_MobCStatTable::hp() const {
  // @@protoc_insertion_point(field_get:MSG.MobCStat.MobCStatTable.Hp)
  return hp_;
}
 void MobCStat_MobCStatTable::set_hp(::google::protobuf::uint32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:MSG.MobCStat.MobCStatTable.Hp)
}

// -------------------------------------------------------------------

// MobCStat

// optional string TableName = 1;
void MobCStat::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MobCStat::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.MobCStat.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MobCStat::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.MobCStat.TableName)
}
 void MobCStat::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.MobCStat.TableName)
}
 void MobCStat::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.MobCStat.TableName)
}
 ::std::string* MobCStat::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.MobCStat.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MobCStat::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.MobCStat.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MobCStat::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.MobCStat.TableName)
}

// repeated .MSG.MobCStat.MobCStatTable Data = 2;
int MobCStat::data_size() const {
  return data_.size();
}
void MobCStat::clear_data() {
  data_.Clear();
}
const ::MSG::MobCStat_MobCStatTable& MobCStat::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.MobCStat.Data)
  return data_.Get(index);
}
::MSG::MobCStat_MobCStatTable* MobCStat::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.MobCStat.Data)
  return data_.Mutable(index);
}
::MSG::MobCStat_MobCStatTable* MobCStat::add_data() {
  // @@protoc_insertion_point(field_add:MSG.MobCStat.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::MobCStat_MobCStatTable >*
MobCStat::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.MobCStat.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::MobCStat_MobCStatTable >&
MobCStat::data() const {
  // @@protoc_insertion_point(field_list:MSG.MobCStat.Data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dungeon_DungeonTable::kNoFieldNumber;
const int Dungeon_DungeonTable::kNameFieldNumber;
const int Dungeon_DungeonTable::kLevelFieldNumber;
const int Dungeon_DungeonTable::kRewardFieldNumber;
const int Dungeon_DungeonTable::kMobALvFieldNumber;
const int Dungeon_DungeonTable::kMobBLvFieldNumber;
const int Dungeon_DungeonTable::kMobCLvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dungeon_DungeonTable::Dungeon_DungeonTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.Dungeon.DungeonTable)
}

void Dungeon_DungeonTable::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Dungeon_DungeonTable::Dungeon_DungeonTable(const Dungeon_DungeonTable& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.Dungeon.DungeonTable)
}

void Dungeon_DungeonTable::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  no_ = 0u;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0u;
  reward_ = 0u;
  mobalv_ = 0u;
  mobblv_ = 0u;
  mobclv_ = 0u;
}

Dungeon_DungeonTable::~Dungeon_DungeonTable() {
  // @@protoc_insertion_point(destructor:MSG.Dungeon.DungeonTable)
  SharedDtor();
}

void Dungeon_DungeonTable::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Dungeon_DungeonTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Dungeon_DungeonTable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Dungeon_DungeonTable_descriptor_;
}

const Dungeon_DungeonTable& Dungeon_DungeonTable::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

Dungeon_DungeonTable* Dungeon_DungeonTable::default_instance_ = NULL;

Dungeon_DungeonTable* Dungeon_DungeonTable::New(::google::protobuf::Arena* arena) const {
  Dungeon_DungeonTable* n = new Dungeon_DungeonTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Dungeon_DungeonTable::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.Dungeon.DungeonTable)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Dungeon_DungeonTable, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Dungeon_DungeonTable*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(no_, mobclv_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Dungeon_DungeonTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.Dungeon.DungeonTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 No = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &no_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Name;
        break;
      }

      // optional string Name = 2;
      case 2: {
        if (tag == 18) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.Dungeon.DungeonTable.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Level;
        break;
      }

      // optional uint32 Level = 3;
      case 3: {
        if (tag == 24) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Reward;
        break;
      }

      // optional uint32 Reward = 4;
      case 4: {
        if (tag == 32) {
         parse_Reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reward_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_MobALv;
        break;
      }

      // optional uint32 MobALv = 5;
      case 5: {
        if (tag == 40) {
         parse_MobALv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mobalv_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_MobBLv;
        break;
      }

      // optional uint32 MobBLv = 6;
      case 6: {
        if (tag == 48) {
         parse_MobBLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mobblv_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_MobCLv;
        break;
      }

      // optional uint32 MobCLv = 7;
      case 7: {
        if (tag == 56) {
         parse_MobCLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mobclv_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.Dungeon.DungeonTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.Dungeon.DungeonTable)
  return false;
#undef DO_
}

void Dungeon_DungeonTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.Dungeon.DungeonTable)
  // optional uint32 No = 1;
  if (this->no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->no(), output);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Dungeon.DungeonTable.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional uint32 Level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // optional uint32 Reward = 4;
  if (this->reward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->reward(), output);
  }

  // optional uint32 MobALv = 5;
  if (this->mobalv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->mobalv(), output);
  }

  // optional uint32 MobBLv = 6;
  if (this->mobblv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->mobblv(), output);
  }

  // optional uint32 MobCLv = 7;
  if (this->mobclv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->mobclv(), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.Dungeon.DungeonTable)
}

::google::protobuf::uint8* Dungeon_DungeonTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.Dungeon.DungeonTable)
  // optional uint32 No = 1;
  if (this->no() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->no(), target);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Dungeon.DungeonTable.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional uint32 Level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // optional uint32 Reward = 4;
  if (this->reward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->reward(), target);
  }

  // optional uint32 MobALv = 5;
  if (this->mobalv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->mobalv(), target);
  }

  // optional uint32 MobBLv = 6;
  if (this->mobblv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->mobblv(), target);
  }

  // optional uint32 MobCLv = 7;
  if (this->mobclv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->mobclv(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.Dungeon.DungeonTable)
  return target;
}

int Dungeon_DungeonTable::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.Dungeon.DungeonTable)
  int total_size = 0;

  // optional uint32 No = 1;
  if (this->no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->no());
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional uint32 Level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // optional uint32 Reward = 4;
  if (this->reward() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reward());
  }

  // optional uint32 MobALv = 5;
  if (this->mobalv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mobalv());
  }

  // optional uint32 MobBLv = 6;
  if (this->mobblv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mobblv());
  }

  // optional uint32 MobCLv = 7;
  if (this->mobclv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mobclv());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Dungeon_DungeonTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.Dungeon.DungeonTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Dungeon_DungeonTable* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Dungeon_DungeonTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.Dungeon.DungeonTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.Dungeon.DungeonTable)
    MergeFrom(*source);
  }
}

void Dungeon_DungeonTable::MergeFrom(const Dungeon_DungeonTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.Dungeon.DungeonTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.no() != 0) {
    set_no(from.no());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.reward() != 0) {
    set_reward(from.reward());
  }
  if (from.mobalv() != 0) {
    set_mobalv(from.mobalv());
  }
  if (from.mobblv() != 0) {
    set_mobblv(from.mobblv());
  }
  if (from.mobclv() != 0) {
    set_mobclv(from.mobclv());
  }
}

void Dungeon_DungeonTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.Dungeon.DungeonTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dungeon_DungeonTable::CopyFrom(const Dungeon_DungeonTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.Dungeon.DungeonTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dungeon_DungeonTable::IsInitialized() const {

  return true;
}

void Dungeon_DungeonTable::Swap(Dungeon_DungeonTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dungeon_DungeonTable::InternalSwap(Dungeon_DungeonTable* other) {
  std::swap(no_, other->no_);
  name_.Swap(&other->name_);
  std::swap(level_, other->level_);
  std::swap(reward_, other->reward_);
  std::swap(mobalv_, other->mobalv_);
  std::swap(mobblv_, other->mobblv_);
  std::swap(mobclv_, other->mobclv_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Dungeon_DungeonTable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Dungeon_DungeonTable_descriptor_;
  metadata.reflection = Dungeon_DungeonTable_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dungeon::kTableNameFieldNumber;
const int Dungeon::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dungeon::Dungeon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.Dungeon)
}

void Dungeon::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Dungeon::Dungeon(const Dungeon& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.Dungeon)
}

void Dungeon::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Dungeon::~Dungeon() {
  // @@protoc_insertion_point(destructor:MSG.Dungeon)
  SharedDtor();
}

void Dungeon::SharedDtor() {
  tablename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Dungeon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Dungeon::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Dungeon_descriptor_;
}

const Dungeon& Dungeon::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

Dungeon* Dungeon::default_instance_ = NULL;

Dungeon* Dungeon::New(::google::protobuf::Arena* arena) const {
  Dungeon* n = new Dungeon;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Dungeon::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.Dungeon)
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.Clear();
}

bool Dungeon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.Dungeon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string TableName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tablename().data(), this->tablename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.Dungeon.TableName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .MSG.Dungeon.DungeonTable Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.Dungeon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.Dungeon)
  return false;
#undef DO_
}

void Dungeon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.Dungeon)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Dungeon.TableName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tablename(), output);
  }

  // repeated .MSG.Dungeon.DungeonTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.Dungeon)
}

::google::protobuf::uint8* Dungeon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.Dungeon)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Dungeon.TableName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tablename(), target);
  }

  // repeated .MSG.Dungeon.DungeonTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->data(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.Dungeon)
  return target;
}

int Dungeon::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.Dungeon)
  int total_size = 0;

  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tablename());
  }

  // repeated .MSG.Dungeon.DungeonTable Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Dungeon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.Dungeon)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Dungeon* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Dungeon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.Dungeon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.Dungeon)
    MergeFrom(*source);
  }
}

void Dungeon::MergeFrom(const Dungeon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.Dungeon)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
  if (from.tablename().size() > 0) {

    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
}

void Dungeon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.Dungeon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dungeon::CopyFrom(const Dungeon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.Dungeon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dungeon::IsInitialized() const {

  return true;
}

void Dungeon::Swap(Dungeon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dungeon::InternalSwap(Dungeon* other) {
  tablename_.Swap(&other->tablename_);
  data_.UnsafeArenaSwap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Dungeon::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Dungeon_descriptor_;
  metadata.reflection = Dungeon_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Dungeon_DungeonTable

// optional uint32 No = 1;
void Dungeon_DungeonTable::clear_no() {
  no_ = 0u;
}
 ::google::protobuf::uint32 Dungeon_DungeonTable::no() const {
  // @@protoc_insertion_point(field_get:MSG.Dungeon.DungeonTable.No)
  return no_;
}
 void Dungeon_DungeonTable::set_no(::google::protobuf::uint32 value) {
  
  no_ = value;
  // @@protoc_insertion_point(field_set:MSG.Dungeon.DungeonTable.No)
}

// optional string Name = 2;
void Dungeon_DungeonTable::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Dungeon_DungeonTable::name() const {
  // @@protoc_insertion_point(field_get:MSG.Dungeon.DungeonTable.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Dungeon_DungeonTable::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Dungeon.DungeonTable.Name)
}
 void Dungeon_DungeonTable::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Dungeon.DungeonTable.Name)
}
 void Dungeon_DungeonTable::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Dungeon.DungeonTable.Name)
}
 ::std::string* Dungeon_DungeonTable::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Dungeon.DungeonTable.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Dungeon_DungeonTable::release_name() {
  // @@protoc_insertion_point(field_release:MSG.Dungeon.DungeonTable.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Dungeon_DungeonTable::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.Dungeon.DungeonTable.Name)
}

// optional uint32 Level = 3;
void Dungeon_DungeonTable::clear_level() {
  level_ = 0u;
}
 ::google::protobuf::uint32 Dungeon_DungeonTable::level() const {
  // @@protoc_insertion_point(field_get:MSG.Dungeon.DungeonTable.Level)
  return level_;
}
 void Dungeon_DungeonTable::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:MSG.Dungeon.DungeonTable.Level)
}

// optional uint32 Reward = 4;
void Dungeon_DungeonTable::clear_reward() {
  reward_ = 0u;
}
 ::google::protobuf::uint32 Dungeon_DungeonTable::reward() const {
  // @@protoc_insertion_point(field_get:MSG.Dungeon.DungeonTable.Reward)
  return reward_;
}
 void Dungeon_DungeonTable::set_reward(::google::protobuf::uint32 value) {
  
  reward_ = value;
  // @@protoc_insertion_point(field_set:MSG.Dungeon.DungeonTable.Reward)
}

// optional uint32 MobALv = 5;
void Dungeon_DungeonTable::clear_mobalv() {
  mobalv_ = 0u;
}
 ::google::protobuf::uint32 Dungeon_DungeonTable::mobalv() const {
  // @@protoc_insertion_point(field_get:MSG.Dungeon.DungeonTable.MobALv)
  return mobalv_;
}
 void Dungeon_DungeonTable::set_mobalv(::google::protobuf::uint32 value) {
  
  mobalv_ = value;
  // @@protoc_insertion_point(field_set:MSG.Dungeon.DungeonTable.MobALv)
}

// optional uint32 MobBLv = 6;
void Dungeon_DungeonTable::clear_mobblv() {
  mobblv_ = 0u;
}
 ::google::protobuf::uint32 Dungeon_DungeonTable::mobblv() const {
  // @@protoc_insertion_point(field_get:MSG.Dungeon.DungeonTable.MobBLv)
  return mobblv_;
}
 void Dungeon_DungeonTable::set_mobblv(::google::protobuf::uint32 value) {
  
  mobblv_ = value;
  // @@protoc_insertion_point(field_set:MSG.Dungeon.DungeonTable.MobBLv)
}

// optional uint32 MobCLv = 7;
void Dungeon_DungeonTable::clear_mobclv() {
  mobclv_ = 0u;
}
 ::google::protobuf::uint32 Dungeon_DungeonTable::mobclv() const {
  // @@protoc_insertion_point(field_get:MSG.Dungeon.DungeonTable.MobCLv)
  return mobclv_;
}
 void Dungeon_DungeonTable::set_mobclv(::google::protobuf::uint32 value) {
  
  mobclv_ = value;
  // @@protoc_insertion_point(field_set:MSG.Dungeon.DungeonTable.MobCLv)
}

// -------------------------------------------------------------------

// Dungeon

// optional string TableName = 1;
void Dungeon::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Dungeon::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.Dungeon.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Dungeon::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Dungeon.TableName)
}
 void Dungeon::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Dungeon.TableName)
}
 void Dungeon::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Dungeon.TableName)
}
 ::std::string* Dungeon::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Dungeon.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Dungeon::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.Dungeon.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Dungeon::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.Dungeon.TableName)
}

// repeated .MSG.Dungeon.DungeonTable Data = 2;
int Dungeon::data_size() const {
  return data_.size();
}
void Dungeon::clear_data() {
  data_.Clear();
}
const ::MSG::Dungeon_DungeonTable& Dungeon::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.Dungeon.Data)
  return data_.Get(index);
}
::MSG::Dungeon_DungeonTable* Dungeon::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.Dungeon.Data)
  return data_.Mutable(index);
}
::MSG::Dungeon_DungeonTable* Dungeon::add_data() {
  // @@protoc_insertion_point(field_add:MSG.Dungeon.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::Dungeon_DungeonTable >*
Dungeon::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.Dungeon.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::Dungeon_DungeonTable >&
Dungeon::data() const {
  // @@protoc_insertion_point(field_list:MSG.Dungeon.Data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Item_ItemTable::kNoFieldNumber;
const int Item_ItemTable::kNameFieldNumber;
const int Item_ItemTable::kCategoryFieldNumber;
const int Item_ItemTable::kCharNoFieldNumber;
const int Item_ItemTable::kStatFieldNumber;
const int Item_ItemTable::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Item_ItemTable::Item_ItemTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.Item.ItemTable)
}

void Item_ItemTable::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Item_ItemTable::Item_ItemTable(const Item_ItemTable& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.Item.ItemTable)
}

void Item_ItemTable::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  no_ = 0u;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  charno_ = 0u;
  stat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0u;
}

Item_ItemTable::~Item_ItemTable() {
  // @@protoc_insertion_point(destructor:MSG.Item.ItemTable)
  SharedDtor();
}

void Item_ItemTable::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Item_ItemTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Item_ItemTable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Item_ItemTable_descriptor_;
}

const Item_ItemTable& Item_ItemTable::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

Item_ItemTable* Item_ItemTable::default_instance_ = NULL;

Item_ItemTable* Item_ItemTable::New(::google::protobuf::Arena* arena) const {
  Item_ItemTable* n = new Item_ItemTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Item_ItemTable::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.Item.ItemTable)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Item_ItemTable, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Item_ItemTable*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(no_, charno_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0u;

#undef ZR_HELPER_
#undef ZR_

}

bool Item_ItemTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.Item.ItemTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 No = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &no_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Name;
        break;
      }

      // optional string Name = 2;
      case 2: {
        if (tag == 18) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.Item.ItemTable.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Category;
        break;
      }

      // optional string Category = 3;
      case 3: {
        if (tag == 26) {
         parse_Category:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_category()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->category().data(), this->category().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.Item.ItemTable.Category"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_CharNo;
        break;
      }

      // optional uint32 CharNo = 4;
      case 4: {
        if (tag == 32) {
         parse_CharNo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &charno_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Stat;
        break;
      }

      // optional string Stat = 5;
      case 5: {
        if (tag == 42) {
         parse_Stat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stat().data(), this->stat().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.Item.ItemTable.Stat"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Value;
        break;
      }

      // optional uint32 Value = 6;
      case 6: {
        if (tag == 48) {
         parse_Value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.Item.ItemTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.Item.ItemTable)
  return false;
#undef DO_
}

void Item_ItemTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.Item.ItemTable)
  // optional uint32 No = 1;
  if (this->no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->no(), output);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Item.ItemTable.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string Category = 3;
  if (this->category().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->category().data(), this->category().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Item.ItemTable.Category");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->category(), output);
  }

  // optional uint32 CharNo = 4;
  if (this->charno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->charno(), output);
  }

  // optional string Stat = 5;
  if (this->stat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stat().data(), this->stat().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Item.ItemTable.Stat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->stat(), output);
  }

  // optional uint32 Value = 6;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.Item.ItemTable)
}

::google::protobuf::uint8* Item_ItemTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.Item.ItemTable)
  // optional uint32 No = 1;
  if (this->no() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->no(), target);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Item.ItemTable.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string Category = 3;
  if (this->category().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->category().data(), this->category().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Item.ItemTable.Category");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->category(), target);
  }

  // optional uint32 CharNo = 4;
  if (this->charno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->charno(), target);
  }

  // optional string Stat = 5;
  if (this->stat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stat().data(), this->stat().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Item.ItemTable.Stat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->stat(), target);
  }

  // optional uint32 Value = 6;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.Item.ItemTable)
  return target;
}

int Item_ItemTable::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.Item.ItemTable)
  int total_size = 0;

  // optional uint32 No = 1;
  if (this->no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->no());
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string Category = 3;
  if (this->category().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->category());
  }

  // optional uint32 CharNo = 4;
  if (this->charno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->charno());
  }

  // optional string Stat = 5;
  if (this->stat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stat());
  }

  // optional uint32 Value = 6;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Item_ItemTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.Item.ItemTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Item_ItemTable* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Item_ItemTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.Item.ItemTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.Item.ItemTable)
    MergeFrom(*source);
  }
}

void Item_ItemTable::MergeFrom(const Item_ItemTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.Item.ItemTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.no() != 0) {
    set_no(from.no());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.category().size() > 0) {

    category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  if (from.charno() != 0) {
    set_charno(from.charno());
  }
  if (from.stat().size() > 0) {

    stat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stat_);
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Item_ItemTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.Item.ItemTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Item_ItemTable::CopyFrom(const Item_ItemTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.Item.ItemTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Item_ItemTable::IsInitialized() const {

  return true;
}

void Item_ItemTable::Swap(Item_ItemTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Item_ItemTable::InternalSwap(Item_ItemTable* other) {
  std::swap(no_, other->no_);
  name_.Swap(&other->name_);
  category_.Swap(&other->category_);
  std::swap(charno_, other->charno_);
  stat_.Swap(&other->stat_);
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Item_ItemTable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Item_ItemTable_descriptor_;
  metadata.reflection = Item_ItemTable_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Item::kTableNameFieldNumber;
const int Item::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Item::Item()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.Item)
}

void Item::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Item::Item(const Item& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.Item)
}

void Item::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Item::~Item() {
  // @@protoc_insertion_point(destructor:MSG.Item)
  SharedDtor();
}

void Item::SharedDtor() {
  tablename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Item::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Item_descriptor_;
}

const Item& Item::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SimTable_2eproto();
  return *default_instance_;
}

Item* Item::default_instance_ = NULL;

Item* Item::New(::google::protobuf::Arena* arena) const {
  Item* n = new Item;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Item::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.Item)
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.Clear();
}

bool Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string TableName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tablename().data(), this->tablename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MSG.Item.TableName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .MSG.Item.ItemTable Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.Item)
  return false;
#undef DO_
}

void Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.Item)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Item.TableName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tablename(), output);
  }

  // repeated .MSG.Item.ItemTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:MSG.Item)
}

::google::protobuf::uint8* Item::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.Item)
  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MSG.Item.TableName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tablename(), target);
  }

  // repeated .MSG.Item.ItemTable Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->data(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MSG.Item)
  return target;
}

int Item::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.Item)
  int total_size = 0;

  // optional string TableName = 1;
  if (this->tablename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tablename());
  }

  // repeated .MSG.Item.ItemTable Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.Item)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Item* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Item>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.Item)
    MergeFrom(*source);
  }
}

void Item::MergeFrom(const Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.Item)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
  if (from.tablename().size() > 0) {

    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
}

void Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Item::CopyFrom(const Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Item::IsInitialized() const {

  return true;
}

void Item::Swap(Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Item::InternalSwap(Item* other) {
  tablename_.Swap(&other->tablename_);
  data_.UnsafeArenaSwap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Item::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Item_descriptor_;
  metadata.reflection = Item_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Item_ItemTable

// optional uint32 No = 1;
void Item_ItemTable::clear_no() {
  no_ = 0u;
}
 ::google::protobuf::uint32 Item_ItemTable::no() const {
  // @@protoc_insertion_point(field_get:MSG.Item.ItemTable.No)
  return no_;
}
 void Item_ItemTable::set_no(::google::protobuf::uint32 value) {
  
  no_ = value;
  // @@protoc_insertion_point(field_set:MSG.Item.ItemTable.No)
}

// optional string Name = 2;
void Item_ItemTable::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Item_ItemTable::name() const {
  // @@protoc_insertion_point(field_get:MSG.Item.ItemTable.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Item_ItemTable::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Item.ItemTable.Name)
}
 void Item_ItemTable::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Item.ItemTable.Name)
}
 void Item_ItemTable::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Item.ItemTable.Name)
}
 ::std::string* Item_ItemTable::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Item.ItemTable.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Item_ItemTable::release_name() {
  // @@protoc_insertion_point(field_release:MSG.Item.ItemTable.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Item_ItemTable::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.Item.ItemTable.Name)
}

// optional string Category = 3;
void Item_ItemTable::clear_category() {
  category_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Item_ItemTable::category() const {
  // @@protoc_insertion_point(field_get:MSG.Item.ItemTable.Category)
  return category_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Item_ItemTable::set_category(const ::std::string& value) {
  
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Item.ItemTable.Category)
}
 void Item_ItemTable::set_category(const char* value) {
  
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Item.ItemTable.Category)
}
 void Item_ItemTable::set_category(const char* value, size_t size) {
  
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Item.ItemTable.Category)
}
 ::std::string* Item_ItemTable::mutable_category() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Item.ItemTable.Category)
  return category_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Item_ItemTable::release_category() {
  // @@protoc_insertion_point(field_release:MSG.Item.ItemTable.Category)
  
  return category_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Item_ItemTable::set_allocated_category(::std::string* category) {
  if (category != NULL) {
    
  } else {
    
  }
  category_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), category);
  // @@protoc_insertion_point(field_set_allocated:MSG.Item.ItemTable.Category)
}

// optional uint32 CharNo = 4;
void Item_ItemTable::clear_charno() {
  charno_ = 0u;
}
 ::google::protobuf::uint32 Item_ItemTable::charno() const {
  // @@protoc_insertion_point(field_get:MSG.Item.ItemTable.CharNo)
  return charno_;
}
 void Item_ItemTable::set_charno(::google::protobuf::uint32 value) {
  
  charno_ = value;
  // @@protoc_insertion_point(field_set:MSG.Item.ItemTable.CharNo)
}

// optional string Stat = 5;
void Item_ItemTable::clear_stat() {
  stat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Item_ItemTable::stat() const {
  // @@protoc_insertion_point(field_get:MSG.Item.ItemTable.Stat)
  return stat_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Item_ItemTable::set_stat(const ::std::string& value) {
  
  stat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Item.ItemTable.Stat)
}
 void Item_ItemTable::set_stat(const char* value) {
  
  stat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Item.ItemTable.Stat)
}
 void Item_ItemTable::set_stat(const char* value, size_t size) {
  
  stat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Item.ItemTable.Stat)
}
 ::std::string* Item_ItemTable::mutable_stat() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Item.ItemTable.Stat)
  return stat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Item_ItemTable::release_stat() {
  // @@protoc_insertion_point(field_release:MSG.Item.ItemTable.Stat)
  
  return stat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Item_ItemTable::set_allocated_stat(::std::string* stat) {
  if (stat != NULL) {
    
  } else {
    
  }
  stat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stat);
  // @@protoc_insertion_point(field_set_allocated:MSG.Item.ItemTable.Stat)
}

// optional uint32 Value = 6;
void Item_ItemTable::clear_value() {
  value_ = 0u;
}
 ::google::protobuf::uint32 Item_ItemTable::value() const {
  // @@protoc_insertion_point(field_get:MSG.Item.ItemTable.Value)
  return value_;
}
 void Item_ItemTable::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:MSG.Item.ItemTable.Value)
}

// -------------------------------------------------------------------

// Item

// optional string TableName = 1;
void Item::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Item::tablename() const {
  // @@protoc_insertion_point(field_get:MSG.Item.TableName)
  return tablename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Item::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Item.TableName)
}
 void Item::set_tablename(const char* value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Item.TableName)
}
 void Item::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Item.TableName)
}
 ::std::string* Item::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:MSG.Item.TableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Item::release_tablename() {
  // @@protoc_insertion_point(field_release:MSG.Item.TableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Item::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:MSG.Item.TableName)
}

// repeated .MSG.Item.ItemTable Data = 2;
int Item::data_size() const {
  return data_.size();
}
void Item::clear_data() {
  data_.Clear();
}
const ::MSG::Item_ItemTable& Item::data(int index) const {
  // @@protoc_insertion_point(field_get:MSG.Item.Data)
  return data_.Get(index);
}
::MSG::Item_ItemTable* Item::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.Item.Data)
  return data_.Mutable(index);
}
::MSG::Item_ItemTable* Item::add_data() {
  // @@protoc_insertion_point(field_add:MSG.Item.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::Item_ItemTable >*
Item::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MSG.Item.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::Item_ItemTable >&
Item::data() const {
  // @@protoc_insertion_point(field_list:MSG.Item.Data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace MSG

// @@protoc_insertion_point(global_scope)
