// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "game.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MSG {

namespace {

const ::google::protobuf::Descriptor* ContentsNot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContentsNot_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayDungeonNot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayDungeonNot_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayDungeonNot_DungeonPlay_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayDungeonNot_DungeonPlay_reflection_ = NULL;
const ::google::protobuf::Descriptor* OwnedCharacterNot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OwnedCharacterNot_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateCharReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateCharReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateCharAns_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateCharAns_reflection_ = NULL;
const ::google::protobuf::Descriptor* CurrencyNot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CurrencyNot_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayDungeonReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayDungeonReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayDungeonAns_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayDungeonAns_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_game_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_game_2eproto() {
  protobuf_AddDesc_game_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "game.proto");
  GOOGLE_CHECK(file != NULL);
  ContentsNot_descriptor_ = file->message_type(0);
  static const int ContentsNot_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentsNot, contents_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentsNot, dungeonno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentsNot, tier_),
  };
  ContentsNot_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ContentsNot_descriptor_,
      ContentsNot::default_instance_,
      ContentsNot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentsNot, _has_bits_[0]),
      -1,
      -1,
      sizeof(ContentsNot),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentsNot, _internal_metadata_),
      -1);
  PlayDungeonNot_descriptor_ = file->message_type(1);
  static const int PlayDungeonNot_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayDungeonNot, plays_),
  };
  PlayDungeonNot_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PlayDungeonNot_descriptor_,
      PlayDungeonNot::default_instance_,
      PlayDungeonNot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayDungeonNot, _has_bits_[0]),
      -1,
      -1,
      sizeof(PlayDungeonNot),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayDungeonNot, _internal_metadata_),
      -1);
  PlayDungeonNot_DungeonPlay_descriptor_ = PlayDungeonNot_descriptor_->nested_type(0);
  static const int PlayDungeonNot_DungeonPlay_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayDungeonNot_DungeonPlay, dungeonno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayDungeonNot_DungeonPlay, tier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayDungeonNot_DungeonPlay, battles_),
  };
  PlayDungeonNot_DungeonPlay_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PlayDungeonNot_DungeonPlay_descriptor_,
      PlayDungeonNot_DungeonPlay::default_instance_,
      PlayDungeonNot_DungeonPlay_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayDungeonNot_DungeonPlay, _has_bits_[0]),
      -1,
      -1,
      sizeof(PlayDungeonNot_DungeonPlay),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayDungeonNot_DungeonPlay, _internal_metadata_),
      -1);
  OwnedCharacterNot_descriptor_ = file->message_type(2);
  static const int OwnedCharacterNot_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OwnedCharacterNot, chars_),
  };
  OwnedCharacterNot_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OwnedCharacterNot_descriptor_,
      OwnedCharacterNot::default_instance_,
      OwnedCharacterNot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OwnedCharacterNot, _has_bits_[0]),
      -1,
      -1,
      sizeof(OwnedCharacterNot),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OwnedCharacterNot, _internal_metadata_),
      -1);
  CreateCharReq_descriptor_ = file->message_type(3);
  static const int CreateCharReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCharReq, charno_),
  };
  CreateCharReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateCharReq_descriptor_,
      CreateCharReq::default_instance_,
      CreateCharReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCharReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(CreateCharReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCharReq, _internal_metadata_),
      -1);
  CreateCharAns_descriptor_ = file->message_type(4);
  static const int CreateCharAns_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCharAns, err_),
  };
  CreateCharAns_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateCharAns_descriptor_,
      CreateCharAns::default_instance_,
      CreateCharAns_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCharAns, _has_bits_[0]),
      -1,
      -1,
      sizeof(CreateCharAns),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCharAns, _internal_metadata_),
      -1);
  CurrencyNot_descriptor_ = file->message_type(5);
  static const int CurrencyNot_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencyNot, vc1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencyNot, vc2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencyNot, vc3_),
  };
  CurrencyNot_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CurrencyNot_descriptor_,
      CurrencyNot::default_instance_,
      CurrencyNot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencyNot, _has_bits_[0]),
      -1,
      -1,
      sizeof(CurrencyNot),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencyNot, _internal_metadata_),
      -1);
  PlayDungeonReq_descriptor_ = file->message_type(6);
  static const int PlayDungeonReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayDungeonReq, dungeonno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayDungeonReq, tier_),
  };
  PlayDungeonReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PlayDungeonReq_descriptor_,
      PlayDungeonReq::default_instance_,
      PlayDungeonReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayDungeonReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PlayDungeonReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayDungeonReq, _internal_metadata_),
      -1);
  PlayDungeonAns_descriptor_ = file->message_type(7);
  static const int PlayDungeonAns_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayDungeonAns, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayDungeonAns, battles_),
  };
  PlayDungeonAns_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PlayDungeonAns_descriptor_,
      PlayDungeonAns::default_instance_,
      PlayDungeonAns_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayDungeonAns, _has_bits_[0]),
      -1,
      -1,
      sizeof(PlayDungeonAns),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayDungeonAns, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_game_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ContentsNot_descriptor_, &ContentsNot::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PlayDungeonNot_descriptor_, &PlayDungeonNot::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PlayDungeonNot_DungeonPlay_descriptor_, &PlayDungeonNot_DungeonPlay::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OwnedCharacterNot_descriptor_, &OwnedCharacterNot::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateCharReq_descriptor_, &CreateCharReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateCharAns_descriptor_, &CreateCharAns::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CurrencyNot_descriptor_, &CurrencyNot::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PlayDungeonReq_descriptor_, &PlayDungeonReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PlayDungeonAns_descriptor_, &PlayDungeonAns::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_game_2eproto() {
  delete ContentsNot::default_instance_;
  delete ContentsNot_reflection_;
  delete PlayDungeonNot::default_instance_;
  delete PlayDungeonNot_reflection_;
  delete PlayDungeonNot_DungeonPlay::default_instance_;
  delete PlayDungeonNot_DungeonPlay_reflection_;
  delete OwnedCharacterNot::default_instance_;
  delete OwnedCharacterNot_reflection_;
  delete CreateCharReq::default_instance_;
  delete CreateCharReq_reflection_;
  delete CreateCharAns::default_instance_;
  delete CreateCharAns_reflection_;
  delete CurrencyNot::default_instance_;
  delete CurrencyNot_reflection_;
  delete PlayDungeonReq::default_instance_;
  delete PlayDungeonReq_reflection_;
  delete PlayDungeonAns::default_instance_;
  delete PlayDungeonAns_reflection_;
}

void protobuf_AddDesc_game_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_game_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::MSG::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ngame.proto\022\003MSG\032\014common.proto\"@\n\013Conte"
    "ntsNot\022\020\n\010contents\030\001 \003(\t\022\021\n\tdungeonNo\030\002 "
    "\002(\r\022\014\n\004tier\030\003 \002(\r\"\223\001\n\016PlayDungeonNot\022.\n\005"
    "plays\030\001 \003(\0132\037.MSG.PlayDungeonNot.Dungeon"
    "Play\032Q\n\013DungeonPlay\022\021\n\tdungeonNo\030\001 \002(\r\022\014"
    "\n\004tier\030\002 \002(\r\022!\n\007battles\030\003 \003(\0132\020.MSG.Batt"
    "leData_\"2\n\021OwnedCharacterNot\022\035\n\005chars\030\001 "
    "\003(\0132\016.MSG.CharData_\"\037\n\rCreateCharReq\022\016\n\006"
    "charNo\030\001 \002(\r\",\n\rCreateCharAns\022\033\n\003err\030\001 \002"
    "(\0162\016.MSG.ErrorCode\"4\n\013CurrencyNot\022\013\n\003vc1"
    "\030\001 \002(\r\022\013\n\003vc2\030\002 \002(\r\022\013\n\003vc3\030\003 \002(\r\"1\n\016Play"
    "DungeonReq\022\021\n\tdungeonNo\030\001 \002(\r\022\014\n\004tier\030\002 "
    "\002(\r\"P\n\016PlayDungeonAns\022\033\n\003err\030\001 \002(\0162\016.MSG"
    ".ErrorCode\022!\n\007battles\030\002 \003(\0132\020.MSG.Battle"
    "Data_", 565);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "game.proto", &protobuf_RegisterTypes);
  ContentsNot::default_instance_ = new ContentsNot();
  PlayDungeonNot::default_instance_ = new PlayDungeonNot();
  PlayDungeonNot_DungeonPlay::default_instance_ = new PlayDungeonNot_DungeonPlay();
  OwnedCharacterNot::default_instance_ = new OwnedCharacterNot();
  CreateCharReq::default_instance_ = new CreateCharReq();
  CreateCharAns::default_instance_ = new CreateCharAns();
  CurrencyNot::default_instance_ = new CurrencyNot();
  PlayDungeonReq::default_instance_ = new PlayDungeonReq();
  PlayDungeonAns::default_instance_ = new PlayDungeonAns();
  ContentsNot::default_instance_->InitAsDefaultInstance();
  PlayDungeonNot::default_instance_->InitAsDefaultInstance();
  PlayDungeonNot_DungeonPlay::default_instance_->InitAsDefaultInstance();
  OwnedCharacterNot::default_instance_->InitAsDefaultInstance();
  CreateCharReq::default_instance_->InitAsDefaultInstance();
  CreateCharAns::default_instance_->InitAsDefaultInstance();
  CurrencyNot::default_instance_->InitAsDefaultInstance();
  PlayDungeonReq::default_instance_->InitAsDefaultInstance();
  PlayDungeonAns::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_game_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_game_2eproto {
  StaticDescriptorInitializer_game_2eproto() {
    protobuf_AddDesc_game_2eproto();
  }
} static_descriptor_initializer_game_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContentsNot::kContentsFieldNumber;
const int ContentsNot::kDungeonNoFieldNumber;
const int ContentsNot::kTierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContentsNot::ContentsNot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.ContentsNot)
}

void ContentsNot::InitAsDefaultInstance() {
}

ContentsNot::ContentsNot(const ContentsNot& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.ContentsNot)
}

void ContentsNot::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  dungeonno_ = 0u;
  tier_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ContentsNot::~ContentsNot() {
  // @@protoc_insertion_point(destructor:MSG.ContentsNot)
  SharedDtor();
}

void ContentsNot::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ContentsNot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContentsNot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContentsNot_descriptor_;
}

const ContentsNot& ContentsNot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_2eproto();
  return *default_instance_;
}

ContentsNot* ContentsNot::default_instance_ = NULL;

ContentsNot* ContentsNot::New(::google::protobuf::Arena* arena) const {
  ContentsNot* n = new ContentsNot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContentsNot::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.ContentsNot)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ContentsNot, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ContentsNot*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(dungeonno_, tier_);

#undef ZR_HELPER_
#undef ZR_

  contents_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ContentsNot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.ContentsNot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string contents = 1;
      case 1: {
        if (tag == 10) {
         parse_contents:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_contents()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->contents(this->contents_size() - 1).data(),
            this->contents(this->contents_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.ContentsNot.contents");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_contents;
        if (input->ExpectTag(16)) goto parse_dungeonNo;
        break;
      }

      // required uint32 dungeonNo = 2;
      case 2: {
        if (tag == 16) {
         parse_dungeonNo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dungeonno_)));
          set_has_dungeonno();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_tier;
        break;
      }

      // required uint32 tier = 3;
      case 3: {
        if (tag == 24) {
         parse_tier:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tier_)));
          set_has_tier();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.ContentsNot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.ContentsNot)
  return false;
#undef DO_
}

void ContentsNot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.ContentsNot)
  // repeated string contents = 1;
  for (int i = 0; i < this->contents_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->contents(i).data(), this->contents(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.ContentsNot.contents");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->contents(i), output);
  }

  // required uint32 dungeonNo = 2;
  if (has_dungeonno()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dungeonno(), output);
  }

  // required uint32 tier = 3;
  if (has_tier()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->tier(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.ContentsNot)
}

::google::protobuf::uint8* ContentsNot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.ContentsNot)
  // repeated string contents = 1;
  for (int i = 0; i < this->contents_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->contents(i).data(), this->contents(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.ContentsNot.contents");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->contents(i), target);
  }

  // required uint32 dungeonNo = 2;
  if (has_dungeonno()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dungeonno(), target);
  }

  // required uint32 tier = 3;
  if (has_tier()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->tier(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.ContentsNot)
  return target;
}

int ContentsNot::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.ContentsNot)
  int total_size = 0;

  if (has_dungeonno()) {
    // required uint32 dungeonNo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dungeonno());
  }

  if (has_tier()) {
    // required uint32 tier = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tier());
  }

  return total_size;
}
int ContentsNot::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.ContentsNot)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 dungeonNo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dungeonno());

    // required uint32 tier = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tier());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string contents = 1;
  total_size += 1 * this->contents_size();
  for (int i = 0; i < this->contents_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->contents(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContentsNot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.ContentsNot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ContentsNot* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ContentsNot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.ContentsNot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.ContentsNot)
    MergeFrom(*source);
  }
}

void ContentsNot::MergeFrom(const ContentsNot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.ContentsNot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  contents_.MergeFrom(from.contents_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_dungeonno()) {
      set_dungeonno(from.dungeonno());
    }
    if (from.has_tier()) {
      set_tier(from.tier());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ContentsNot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.ContentsNot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContentsNot::CopyFrom(const ContentsNot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.ContentsNot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContentsNot::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;

  return true;
}

void ContentsNot::Swap(ContentsNot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContentsNot::InternalSwap(ContentsNot* other) {
  contents_.UnsafeArenaSwap(&other->contents_);
  std::swap(dungeonno_, other->dungeonno_);
  std::swap(tier_, other->tier_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContentsNot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContentsNot_descriptor_;
  metadata.reflection = ContentsNot_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ContentsNot

// repeated string contents = 1;
int ContentsNot::contents_size() const {
  return contents_.size();
}
void ContentsNot::clear_contents() {
  contents_.Clear();
}
 const ::std::string& ContentsNot::contents(int index) const {
  // @@protoc_insertion_point(field_get:MSG.ContentsNot.contents)
  return contents_.Get(index);
}
 ::std::string* ContentsNot::mutable_contents(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.ContentsNot.contents)
  return contents_.Mutable(index);
}
 void ContentsNot::set_contents(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MSG.ContentsNot.contents)
  contents_.Mutable(index)->assign(value);
}
 void ContentsNot::set_contents(int index, const char* value) {
  contents_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MSG.ContentsNot.contents)
}
 void ContentsNot::set_contents(int index, const char* value, size_t size) {
  contents_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MSG.ContentsNot.contents)
}
 ::std::string* ContentsNot::add_contents() {
  // @@protoc_insertion_point(field_add_mutable:MSG.ContentsNot.contents)
  return contents_.Add();
}
 void ContentsNot::add_contents(const ::std::string& value) {
  contents_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MSG.ContentsNot.contents)
}
 void ContentsNot::add_contents(const char* value) {
  contents_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MSG.ContentsNot.contents)
}
 void ContentsNot::add_contents(const char* value, size_t size) {
  contents_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MSG.ContentsNot.contents)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
ContentsNot::contents() const {
  // @@protoc_insertion_point(field_list:MSG.ContentsNot.contents)
  return contents_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
ContentsNot::mutable_contents() {
  // @@protoc_insertion_point(field_mutable_list:MSG.ContentsNot.contents)
  return &contents_;
}

// required uint32 dungeonNo = 2;
bool ContentsNot::has_dungeonno() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ContentsNot::set_has_dungeonno() {
  _has_bits_[0] |= 0x00000002u;
}
void ContentsNot::clear_has_dungeonno() {
  _has_bits_[0] &= ~0x00000002u;
}
void ContentsNot::clear_dungeonno() {
  dungeonno_ = 0u;
  clear_has_dungeonno();
}
 ::google::protobuf::uint32 ContentsNot::dungeonno() const {
  // @@protoc_insertion_point(field_get:MSG.ContentsNot.dungeonNo)
  return dungeonno_;
}
 void ContentsNot::set_dungeonno(::google::protobuf::uint32 value) {
  set_has_dungeonno();
  dungeonno_ = value;
  // @@protoc_insertion_point(field_set:MSG.ContentsNot.dungeonNo)
}

// required uint32 tier = 3;
bool ContentsNot::has_tier() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ContentsNot::set_has_tier() {
  _has_bits_[0] |= 0x00000004u;
}
void ContentsNot::clear_has_tier() {
  _has_bits_[0] &= ~0x00000004u;
}
void ContentsNot::clear_tier() {
  tier_ = 0u;
  clear_has_tier();
}
 ::google::protobuf::uint32 ContentsNot::tier() const {
  // @@protoc_insertion_point(field_get:MSG.ContentsNot.tier)
  return tier_;
}
 void ContentsNot::set_tier(::google::protobuf::uint32 value) {
  set_has_tier();
  tier_ = value;
  // @@protoc_insertion_point(field_set:MSG.ContentsNot.tier)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayDungeonNot_DungeonPlay::kDungeonNoFieldNumber;
const int PlayDungeonNot_DungeonPlay::kTierFieldNumber;
const int PlayDungeonNot_DungeonPlay::kBattlesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayDungeonNot_DungeonPlay::PlayDungeonNot_DungeonPlay()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.PlayDungeonNot.DungeonPlay)
}

void PlayDungeonNot_DungeonPlay::InitAsDefaultInstance() {
}

PlayDungeonNot_DungeonPlay::PlayDungeonNot_DungeonPlay(const PlayDungeonNot_DungeonPlay& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.PlayDungeonNot.DungeonPlay)
}

void PlayDungeonNot_DungeonPlay::SharedCtor() {
  _cached_size_ = 0;
  dungeonno_ = 0u;
  tier_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PlayDungeonNot_DungeonPlay::~PlayDungeonNot_DungeonPlay() {
  // @@protoc_insertion_point(destructor:MSG.PlayDungeonNot.DungeonPlay)
  SharedDtor();
}

void PlayDungeonNot_DungeonPlay::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PlayDungeonNot_DungeonPlay::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayDungeonNot_DungeonPlay::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayDungeonNot_DungeonPlay_descriptor_;
}

const PlayDungeonNot_DungeonPlay& PlayDungeonNot_DungeonPlay::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_2eproto();
  return *default_instance_;
}

PlayDungeonNot_DungeonPlay* PlayDungeonNot_DungeonPlay::default_instance_ = NULL;

PlayDungeonNot_DungeonPlay* PlayDungeonNot_DungeonPlay::New(::google::protobuf::Arena* arena) const {
  PlayDungeonNot_DungeonPlay* n = new PlayDungeonNot_DungeonPlay;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayDungeonNot_DungeonPlay::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.PlayDungeonNot.DungeonPlay)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PlayDungeonNot_DungeonPlay, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PlayDungeonNot_DungeonPlay*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(dungeonno_, tier_);

#undef ZR_HELPER_
#undef ZR_

  battles_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PlayDungeonNot_DungeonPlay::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.PlayDungeonNot.DungeonPlay)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 dungeonNo = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dungeonno_)));
          set_has_dungeonno();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_tier;
        break;
      }

      // required uint32 tier = 2;
      case 2: {
        if (tag == 16) {
         parse_tier:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tier_)));
          set_has_tier();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_battles;
        break;
      }

      // repeated .MSG.BattleData_ battles = 3;
      case 3: {
        if (tag == 26) {
         parse_battles:
          DO_(input->IncrementRecursionDepth());
         parse_loop_battles:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_battles()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_battles;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.PlayDungeonNot.DungeonPlay)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.PlayDungeonNot.DungeonPlay)
  return false;
#undef DO_
}

void PlayDungeonNot_DungeonPlay::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.PlayDungeonNot.DungeonPlay)
  // required uint32 dungeonNo = 1;
  if (has_dungeonno()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dungeonno(), output);
  }

  // required uint32 tier = 2;
  if (has_tier()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->tier(), output);
  }

  // repeated .MSG.BattleData_ battles = 3;
  for (unsigned int i = 0, n = this->battles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->battles(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.PlayDungeonNot.DungeonPlay)
}

::google::protobuf::uint8* PlayDungeonNot_DungeonPlay::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.PlayDungeonNot.DungeonPlay)
  // required uint32 dungeonNo = 1;
  if (has_dungeonno()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dungeonno(), target);
  }

  // required uint32 tier = 2;
  if (has_tier()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->tier(), target);
  }

  // repeated .MSG.BattleData_ battles = 3;
  for (unsigned int i = 0, n = this->battles_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->battles(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.PlayDungeonNot.DungeonPlay)
  return target;
}

int PlayDungeonNot_DungeonPlay::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.PlayDungeonNot.DungeonPlay)
  int total_size = 0;

  if (has_dungeonno()) {
    // required uint32 dungeonNo = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dungeonno());
  }

  if (has_tier()) {
    // required uint32 tier = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tier());
  }

  return total_size;
}
int PlayDungeonNot_DungeonPlay::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.PlayDungeonNot.DungeonPlay)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 dungeonNo = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dungeonno());

    // required uint32 tier = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tier());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .MSG.BattleData_ battles = 3;
  total_size += 1 * this->battles_size();
  for (int i = 0; i < this->battles_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->battles(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayDungeonNot_DungeonPlay::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.PlayDungeonNot.DungeonPlay)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PlayDungeonNot_DungeonPlay* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayDungeonNot_DungeonPlay>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.PlayDungeonNot.DungeonPlay)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.PlayDungeonNot.DungeonPlay)
    MergeFrom(*source);
  }
}

void PlayDungeonNot_DungeonPlay::MergeFrom(const PlayDungeonNot_DungeonPlay& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.PlayDungeonNot.DungeonPlay)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  battles_.MergeFrom(from.battles_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dungeonno()) {
      set_dungeonno(from.dungeonno());
    }
    if (from.has_tier()) {
      set_tier(from.tier());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PlayDungeonNot_DungeonPlay::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.PlayDungeonNot.DungeonPlay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayDungeonNot_DungeonPlay::CopyFrom(const PlayDungeonNot_DungeonPlay& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.PlayDungeonNot.DungeonPlay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayDungeonNot_DungeonPlay::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->battles())) return false;
  return true;
}

void PlayDungeonNot_DungeonPlay::Swap(PlayDungeonNot_DungeonPlay* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayDungeonNot_DungeonPlay::InternalSwap(PlayDungeonNot_DungeonPlay* other) {
  std::swap(dungeonno_, other->dungeonno_);
  std::swap(tier_, other->tier_);
  battles_.UnsafeArenaSwap(&other->battles_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayDungeonNot_DungeonPlay::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayDungeonNot_DungeonPlay_descriptor_;
  metadata.reflection = PlayDungeonNot_DungeonPlay_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayDungeonNot::kPlaysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayDungeonNot::PlayDungeonNot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.PlayDungeonNot)
}

void PlayDungeonNot::InitAsDefaultInstance() {
}

PlayDungeonNot::PlayDungeonNot(const PlayDungeonNot& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.PlayDungeonNot)
}

void PlayDungeonNot::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PlayDungeonNot::~PlayDungeonNot() {
  // @@protoc_insertion_point(destructor:MSG.PlayDungeonNot)
  SharedDtor();
}

void PlayDungeonNot::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PlayDungeonNot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayDungeonNot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayDungeonNot_descriptor_;
}

const PlayDungeonNot& PlayDungeonNot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_2eproto();
  return *default_instance_;
}

PlayDungeonNot* PlayDungeonNot::default_instance_ = NULL;

PlayDungeonNot* PlayDungeonNot::New(::google::protobuf::Arena* arena) const {
  PlayDungeonNot* n = new PlayDungeonNot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayDungeonNot::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.PlayDungeonNot)
  plays_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PlayDungeonNot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.PlayDungeonNot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MSG.PlayDungeonNot.DungeonPlay plays = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_plays:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_plays()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_plays;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.PlayDungeonNot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.PlayDungeonNot)
  return false;
#undef DO_
}

void PlayDungeonNot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.PlayDungeonNot)
  // repeated .MSG.PlayDungeonNot.DungeonPlay plays = 1;
  for (unsigned int i = 0, n = this->plays_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->plays(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.PlayDungeonNot)
}

::google::protobuf::uint8* PlayDungeonNot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.PlayDungeonNot)
  // repeated .MSG.PlayDungeonNot.DungeonPlay plays = 1;
  for (unsigned int i = 0, n = this->plays_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->plays(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.PlayDungeonNot)
  return target;
}

int PlayDungeonNot::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.PlayDungeonNot)
  int total_size = 0;

  // repeated .MSG.PlayDungeonNot.DungeonPlay plays = 1;
  total_size += 1 * this->plays_size();
  for (int i = 0; i < this->plays_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->plays(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayDungeonNot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.PlayDungeonNot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PlayDungeonNot* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayDungeonNot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.PlayDungeonNot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.PlayDungeonNot)
    MergeFrom(*source);
  }
}

void PlayDungeonNot::MergeFrom(const PlayDungeonNot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.PlayDungeonNot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  plays_.MergeFrom(from.plays_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PlayDungeonNot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.PlayDungeonNot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayDungeonNot::CopyFrom(const PlayDungeonNot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.PlayDungeonNot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayDungeonNot::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->plays())) return false;
  return true;
}

void PlayDungeonNot::Swap(PlayDungeonNot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayDungeonNot::InternalSwap(PlayDungeonNot* other) {
  plays_.UnsafeArenaSwap(&other->plays_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayDungeonNot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayDungeonNot_descriptor_;
  metadata.reflection = PlayDungeonNot_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayDungeonNot_DungeonPlay

// required uint32 dungeonNo = 1;
bool PlayDungeonNot_DungeonPlay::has_dungeonno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PlayDungeonNot_DungeonPlay::set_has_dungeonno() {
  _has_bits_[0] |= 0x00000001u;
}
void PlayDungeonNot_DungeonPlay::clear_has_dungeonno() {
  _has_bits_[0] &= ~0x00000001u;
}
void PlayDungeonNot_DungeonPlay::clear_dungeonno() {
  dungeonno_ = 0u;
  clear_has_dungeonno();
}
 ::google::protobuf::uint32 PlayDungeonNot_DungeonPlay::dungeonno() const {
  // @@protoc_insertion_point(field_get:MSG.PlayDungeonNot.DungeonPlay.dungeonNo)
  return dungeonno_;
}
 void PlayDungeonNot_DungeonPlay::set_dungeonno(::google::protobuf::uint32 value) {
  set_has_dungeonno();
  dungeonno_ = value;
  // @@protoc_insertion_point(field_set:MSG.PlayDungeonNot.DungeonPlay.dungeonNo)
}

// required uint32 tier = 2;
bool PlayDungeonNot_DungeonPlay::has_tier() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PlayDungeonNot_DungeonPlay::set_has_tier() {
  _has_bits_[0] |= 0x00000002u;
}
void PlayDungeonNot_DungeonPlay::clear_has_tier() {
  _has_bits_[0] &= ~0x00000002u;
}
void PlayDungeonNot_DungeonPlay::clear_tier() {
  tier_ = 0u;
  clear_has_tier();
}
 ::google::protobuf::uint32 PlayDungeonNot_DungeonPlay::tier() const {
  // @@protoc_insertion_point(field_get:MSG.PlayDungeonNot.DungeonPlay.tier)
  return tier_;
}
 void PlayDungeonNot_DungeonPlay::set_tier(::google::protobuf::uint32 value) {
  set_has_tier();
  tier_ = value;
  // @@protoc_insertion_point(field_set:MSG.PlayDungeonNot.DungeonPlay.tier)
}

// repeated .MSG.BattleData_ battles = 3;
int PlayDungeonNot_DungeonPlay::battles_size() const {
  return battles_.size();
}
void PlayDungeonNot_DungeonPlay::clear_battles() {
  battles_.Clear();
}
const ::MSG::BattleData_& PlayDungeonNot_DungeonPlay::battles(int index) const {
  // @@protoc_insertion_point(field_get:MSG.PlayDungeonNot.DungeonPlay.battles)
  return battles_.Get(index);
}
::MSG::BattleData_* PlayDungeonNot_DungeonPlay::mutable_battles(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.PlayDungeonNot.DungeonPlay.battles)
  return battles_.Mutable(index);
}
::MSG::BattleData_* PlayDungeonNot_DungeonPlay::add_battles() {
  // @@protoc_insertion_point(field_add:MSG.PlayDungeonNot.DungeonPlay.battles)
  return battles_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::BattleData_ >*
PlayDungeonNot_DungeonPlay::mutable_battles() {
  // @@protoc_insertion_point(field_mutable_list:MSG.PlayDungeonNot.DungeonPlay.battles)
  return &battles_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::BattleData_ >&
PlayDungeonNot_DungeonPlay::battles() const {
  // @@protoc_insertion_point(field_list:MSG.PlayDungeonNot.DungeonPlay.battles)
  return battles_;
}

// -------------------------------------------------------------------

// PlayDungeonNot

// repeated .MSG.PlayDungeonNot.DungeonPlay plays = 1;
int PlayDungeonNot::plays_size() const {
  return plays_.size();
}
void PlayDungeonNot::clear_plays() {
  plays_.Clear();
}
const ::MSG::PlayDungeonNot_DungeonPlay& PlayDungeonNot::plays(int index) const {
  // @@protoc_insertion_point(field_get:MSG.PlayDungeonNot.plays)
  return plays_.Get(index);
}
::MSG::PlayDungeonNot_DungeonPlay* PlayDungeonNot::mutable_plays(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.PlayDungeonNot.plays)
  return plays_.Mutable(index);
}
::MSG::PlayDungeonNot_DungeonPlay* PlayDungeonNot::add_plays() {
  // @@protoc_insertion_point(field_add:MSG.PlayDungeonNot.plays)
  return plays_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::PlayDungeonNot_DungeonPlay >*
PlayDungeonNot::mutable_plays() {
  // @@protoc_insertion_point(field_mutable_list:MSG.PlayDungeonNot.plays)
  return &plays_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::PlayDungeonNot_DungeonPlay >&
PlayDungeonNot::plays() const {
  // @@protoc_insertion_point(field_list:MSG.PlayDungeonNot.plays)
  return plays_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OwnedCharacterNot::kCharsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OwnedCharacterNot::OwnedCharacterNot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.OwnedCharacterNot)
}

void OwnedCharacterNot::InitAsDefaultInstance() {
}

OwnedCharacterNot::OwnedCharacterNot(const OwnedCharacterNot& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.OwnedCharacterNot)
}

void OwnedCharacterNot::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OwnedCharacterNot::~OwnedCharacterNot() {
  // @@protoc_insertion_point(destructor:MSG.OwnedCharacterNot)
  SharedDtor();
}

void OwnedCharacterNot::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OwnedCharacterNot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OwnedCharacterNot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OwnedCharacterNot_descriptor_;
}

const OwnedCharacterNot& OwnedCharacterNot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_2eproto();
  return *default_instance_;
}

OwnedCharacterNot* OwnedCharacterNot::default_instance_ = NULL;

OwnedCharacterNot* OwnedCharacterNot::New(::google::protobuf::Arena* arena) const {
  OwnedCharacterNot* n = new OwnedCharacterNot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OwnedCharacterNot::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.OwnedCharacterNot)
  chars_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OwnedCharacterNot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.OwnedCharacterNot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MSG.CharData_ chars = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_chars:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_chars()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_chars;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.OwnedCharacterNot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.OwnedCharacterNot)
  return false;
#undef DO_
}

void OwnedCharacterNot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.OwnedCharacterNot)
  // repeated .MSG.CharData_ chars = 1;
  for (unsigned int i = 0, n = this->chars_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->chars(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.OwnedCharacterNot)
}

::google::protobuf::uint8* OwnedCharacterNot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.OwnedCharacterNot)
  // repeated .MSG.CharData_ chars = 1;
  for (unsigned int i = 0, n = this->chars_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->chars(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.OwnedCharacterNot)
  return target;
}

int OwnedCharacterNot::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.OwnedCharacterNot)
  int total_size = 0;

  // repeated .MSG.CharData_ chars = 1;
  total_size += 1 * this->chars_size();
  for (int i = 0; i < this->chars_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->chars(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OwnedCharacterNot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.OwnedCharacterNot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OwnedCharacterNot* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OwnedCharacterNot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.OwnedCharacterNot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.OwnedCharacterNot)
    MergeFrom(*source);
  }
}

void OwnedCharacterNot::MergeFrom(const OwnedCharacterNot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.OwnedCharacterNot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  chars_.MergeFrom(from.chars_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void OwnedCharacterNot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.OwnedCharacterNot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OwnedCharacterNot::CopyFrom(const OwnedCharacterNot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.OwnedCharacterNot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OwnedCharacterNot::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->chars())) return false;
  return true;
}

void OwnedCharacterNot::Swap(OwnedCharacterNot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OwnedCharacterNot::InternalSwap(OwnedCharacterNot* other) {
  chars_.UnsafeArenaSwap(&other->chars_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OwnedCharacterNot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OwnedCharacterNot_descriptor_;
  metadata.reflection = OwnedCharacterNot_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OwnedCharacterNot

// repeated .MSG.CharData_ chars = 1;
int OwnedCharacterNot::chars_size() const {
  return chars_.size();
}
void OwnedCharacterNot::clear_chars() {
  chars_.Clear();
}
const ::MSG::CharData_& OwnedCharacterNot::chars(int index) const {
  // @@protoc_insertion_point(field_get:MSG.OwnedCharacterNot.chars)
  return chars_.Get(index);
}
::MSG::CharData_* OwnedCharacterNot::mutable_chars(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.OwnedCharacterNot.chars)
  return chars_.Mutable(index);
}
::MSG::CharData_* OwnedCharacterNot::add_chars() {
  // @@protoc_insertion_point(field_add:MSG.OwnedCharacterNot.chars)
  return chars_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::CharData_ >*
OwnedCharacterNot::mutable_chars() {
  // @@protoc_insertion_point(field_mutable_list:MSG.OwnedCharacterNot.chars)
  return &chars_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::CharData_ >&
OwnedCharacterNot::chars() const {
  // @@protoc_insertion_point(field_list:MSG.OwnedCharacterNot.chars)
  return chars_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateCharReq::kCharNoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateCharReq::CreateCharReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.CreateCharReq)
}

void CreateCharReq::InitAsDefaultInstance() {
}

CreateCharReq::CreateCharReq(const CreateCharReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.CreateCharReq)
}

void CreateCharReq::SharedCtor() {
  _cached_size_ = 0;
  charno_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateCharReq::~CreateCharReq() {
  // @@protoc_insertion_point(destructor:MSG.CreateCharReq)
  SharedDtor();
}

void CreateCharReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateCharReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateCharReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateCharReq_descriptor_;
}

const CreateCharReq& CreateCharReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_2eproto();
  return *default_instance_;
}

CreateCharReq* CreateCharReq::default_instance_ = NULL;

CreateCharReq* CreateCharReq::New(::google::protobuf::Arena* arena) const {
  CreateCharReq* n = new CreateCharReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateCharReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.CreateCharReq)
  charno_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CreateCharReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.CreateCharReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 charNo = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &charno_)));
          set_has_charno();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.CreateCharReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.CreateCharReq)
  return false;
#undef DO_
}

void CreateCharReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.CreateCharReq)
  // required uint32 charNo = 1;
  if (has_charno()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->charno(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.CreateCharReq)
}

::google::protobuf::uint8* CreateCharReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.CreateCharReq)
  // required uint32 charNo = 1;
  if (has_charno()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->charno(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.CreateCharReq)
  return target;
}

int CreateCharReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.CreateCharReq)
  int total_size = 0;

  // required uint32 charNo = 1;
  if (has_charno()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->charno());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateCharReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.CreateCharReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CreateCharReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateCharReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.CreateCharReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.CreateCharReq)
    MergeFrom(*source);
  }
}

void CreateCharReq::MergeFrom(const CreateCharReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.CreateCharReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_charno()) {
      set_charno(from.charno());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CreateCharReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.CreateCharReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCharReq::CopyFrom(const CreateCharReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.CreateCharReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCharReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CreateCharReq::Swap(CreateCharReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateCharReq::InternalSwap(CreateCharReq* other) {
  std::swap(charno_, other->charno_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateCharReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateCharReq_descriptor_;
  metadata.reflection = CreateCharReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateCharReq

// required uint32 charNo = 1;
bool CreateCharReq::has_charno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateCharReq::set_has_charno() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateCharReq::clear_has_charno() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateCharReq::clear_charno() {
  charno_ = 0u;
  clear_has_charno();
}
 ::google::protobuf::uint32 CreateCharReq::charno() const {
  // @@protoc_insertion_point(field_get:MSG.CreateCharReq.charNo)
  return charno_;
}
 void CreateCharReq::set_charno(::google::protobuf::uint32 value) {
  set_has_charno();
  charno_ = value;
  // @@protoc_insertion_point(field_set:MSG.CreateCharReq.charNo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateCharAns::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateCharAns::CreateCharAns()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.CreateCharAns)
}

void CreateCharAns::InitAsDefaultInstance() {
}

CreateCharAns::CreateCharAns(const CreateCharAns& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.CreateCharAns)
}

void CreateCharAns::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateCharAns::~CreateCharAns() {
  // @@protoc_insertion_point(destructor:MSG.CreateCharAns)
  SharedDtor();
}

void CreateCharAns::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateCharAns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateCharAns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateCharAns_descriptor_;
}

const CreateCharAns& CreateCharAns::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_2eproto();
  return *default_instance_;
}

CreateCharAns* CreateCharAns::default_instance_ = NULL;

CreateCharAns* CreateCharAns::New(::google::protobuf::Arena* arena) const {
  CreateCharAns* n = new CreateCharAns;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateCharAns::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.CreateCharAns)
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CreateCharAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.CreateCharAns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MSG.ErrorCode err = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MSG::ErrorCode_IsValid(value)) {
            set_err(static_cast< ::MSG::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.CreateCharAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.CreateCharAns)
  return false;
#undef DO_
}

void CreateCharAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.CreateCharAns)
  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.CreateCharAns)
}

::google::protobuf::uint8* CreateCharAns::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.CreateCharAns)
  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.CreateCharAns)
  return target;
}

int CreateCharAns::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.CreateCharAns)
  int total_size = 0;

  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->err());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateCharAns::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.CreateCharAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CreateCharAns* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateCharAns>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.CreateCharAns)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.CreateCharAns)
    MergeFrom(*source);
  }
}

void CreateCharAns::MergeFrom(const CreateCharAns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.CreateCharAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CreateCharAns::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.CreateCharAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCharAns::CopyFrom(const CreateCharAns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.CreateCharAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCharAns::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CreateCharAns::Swap(CreateCharAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateCharAns::InternalSwap(CreateCharAns* other) {
  std::swap(err_, other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateCharAns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateCharAns_descriptor_;
  metadata.reflection = CreateCharAns_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateCharAns

// required .MSG.ErrorCode err = 1;
bool CreateCharAns::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateCharAns::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateCharAns::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateCharAns::clear_err() {
  err_ = 0;
  clear_has_err();
}
 ::MSG::ErrorCode CreateCharAns::err() const {
  // @@protoc_insertion_point(field_get:MSG.CreateCharAns.err)
  return static_cast< ::MSG::ErrorCode >(err_);
}
 void CreateCharAns::set_err(::MSG::ErrorCode value) {
  assert(::MSG::ErrorCode_IsValid(value));
  set_has_err();
  err_ = value;
  // @@protoc_insertion_point(field_set:MSG.CreateCharAns.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CurrencyNot::kVc1FieldNumber;
const int CurrencyNot::kVc2FieldNumber;
const int CurrencyNot::kVc3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CurrencyNot::CurrencyNot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.CurrencyNot)
}

void CurrencyNot::InitAsDefaultInstance() {
}

CurrencyNot::CurrencyNot(const CurrencyNot& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.CurrencyNot)
}

void CurrencyNot::SharedCtor() {
  _cached_size_ = 0;
  vc1_ = 0u;
  vc2_ = 0u;
  vc3_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CurrencyNot::~CurrencyNot() {
  // @@protoc_insertion_point(destructor:MSG.CurrencyNot)
  SharedDtor();
}

void CurrencyNot::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CurrencyNot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CurrencyNot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CurrencyNot_descriptor_;
}

const CurrencyNot& CurrencyNot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_2eproto();
  return *default_instance_;
}

CurrencyNot* CurrencyNot::default_instance_ = NULL;

CurrencyNot* CurrencyNot::New(::google::protobuf::Arena* arena) const {
  CurrencyNot* n = new CurrencyNot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CurrencyNot::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.CurrencyNot)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CurrencyNot, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CurrencyNot*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vc1_, vc3_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CurrencyNot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.CurrencyNot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 vc1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vc1_)));
          set_has_vc1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_vc2;
        break;
      }

      // required uint32 vc2 = 2;
      case 2: {
        if (tag == 16) {
         parse_vc2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vc2_)));
          set_has_vc2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_vc3;
        break;
      }

      // required uint32 vc3 = 3;
      case 3: {
        if (tag == 24) {
         parse_vc3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vc3_)));
          set_has_vc3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.CurrencyNot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.CurrencyNot)
  return false;
#undef DO_
}

void CurrencyNot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.CurrencyNot)
  // required uint32 vc1 = 1;
  if (has_vc1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vc1(), output);
  }

  // required uint32 vc2 = 2;
  if (has_vc2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vc2(), output);
  }

  // required uint32 vc3 = 3;
  if (has_vc3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->vc3(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.CurrencyNot)
}

::google::protobuf::uint8* CurrencyNot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.CurrencyNot)
  // required uint32 vc1 = 1;
  if (has_vc1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vc1(), target);
  }

  // required uint32 vc2 = 2;
  if (has_vc2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vc2(), target);
  }

  // required uint32 vc3 = 3;
  if (has_vc3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->vc3(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.CurrencyNot)
  return target;
}

int CurrencyNot::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.CurrencyNot)
  int total_size = 0;

  if (has_vc1()) {
    // required uint32 vc1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vc1());
  }

  if (has_vc2()) {
    // required uint32 vc2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vc2());
  }

  if (has_vc3()) {
    // required uint32 vc3 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vc3());
  }

  return total_size;
}
int CurrencyNot::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.CurrencyNot)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 vc1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vc1());

    // required uint32 vc2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vc2());

    // required uint32 vc3 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vc3());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CurrencyNot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.CurrencyNot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CurrencyNot* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CurrencyNot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.CurrencyNot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.CurrencyNot)
    MergeFrom(*source);
  }
}

void CurrencyNot::MergeFrom(const CurrencyNot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.CurrencyNot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_vc1()) {
      set_vc1(from.vc1());
    }
    if (from.has_vc2()) {
      set_vc2(from.vc2());
    }
    if (from.has_vc3()) {
      set_vc3(from.vc3());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CurrencyNot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.CurrencyNot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CurrencyNot::CopyFrom(const CurrencyNot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.CurrencyNot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CurrencyNot::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void CurrencyNot::Swap(CurrencyNot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CurrencyNot::InternalSwap(CurrencyNot* other) {
  std::swap(vc1_, other->vc1_);
  std::swap(vc2_, other->vc2_);
  std::swap(vc3_, other->vc3_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CurrencyNot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CurrencyNot_descriptor_;
  metadata.reflection = CurrencyNot_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CurrencyNot

// required uint32 vc1 = 1;
bool CurrencyNot::has_vc1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CurrencyNot::set_has_vc1() {
  _has_bits_[0] |= 0x00000001u;
}
void CurrencyNot::clear_has_vc1() {
  _has_bits_[0] &= ~0x00000001u;
}
void CurrencyNot::clear_vc1() {
  vc1_ = 0u;
  clear_has_vc1();
}
 ::google::protobuf::uint32 CurrencyNot::vc1() const {
  // @@protoc_insertion_point(field_get:MSG.CurrencyNot.vc1)
  return vc1_;
}
 void CurrencyNot::set_vc1(::google::protobuf::uint32 value) {
  set_has_vc1();
  vc1_ = value;
  // @@protoc_insertion_point(field_set:MSG.CurrencyNot.vc1)
}

// required uint32 vc2 = 2;
bool CurrencyNot::has_vc2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CurrencyNot::set_has_vc2() {
  _has_bits_[0] |= 0x00000002u;
}
void CurrencyNot::clear_has_vc2() {
  _has_bits_[0] &= ~0x00000002u;
}
void CurrencyNot::clear_vc2() {
  vc2_ = 0u;
  clear_has_vc2();
}
 ::google::protobuf::uint32 CurrencyNot::vc2() const {
  // @@protoc_insertion_point(field_get:MSG.CurrencyNot.vc2)
  return vc2_;
}
 void CurrencyNot::set_vc2(::google::protobuf::uint32 value) {
  set_has_vc2();
  vc2_ = value;
  // @@protoc_insertion_point(field_set:MSG.CurrencyNot.vc2)
}

// required uint32 vc3 = 3;
bool CurrencyNot::has_vc3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CurrencyNot::set_has_vc3() {
  _has_bits_[0] |= 0x00000004u;
}
void CurrencyNot::clear_has_vc3() {
  _has_bits_[0] &= ~0x00000004u;
}
void CurrencyNot::clear_vc3() {
  vc3_ = 0u;
  clear_has_vc3();
}
 ::google::protobuf::uint32 CurrencyNot::vc3() const {
  // @@protoc_insertion_point(field_get:MSG.CurrencyNot.vc3)
  return vc3_;
}
 void CurrencyNot::set_vc3(::google::protobuf::uint32 value) {
  set_has_vc3();
  vc3_ = value;
  // @@protoc_insertion_point(field_set:MSG.CurrencyNot.vc3)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayDungeonReq::kDungeonNoFieldNumber;
const int PlayDungeonReq::kTierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayDungeonReq::PlayDungeonReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.PlayDungeonReq)
}

void PlayDungeonReq::InitAsDefaultInstance() {
}

PlayDungeonReq::PlayDungeonReq(const PlayDungeonReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.PlayDungeonReq)
}

void PlayDungeonReq::SharedCtor() {
  _cached_size_ = 0;
  dungeonno_ = 0u;
  tier_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PlayDungeonReq::~PlayDungeonReq() {
  // @@protoc_insertion_point(destructor:MSG.PlayDungeonReq)
  SharedDtor();
}

void PlayDungeonReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PlayDungeonReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayDungeonReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayDungeonReq_descriptor_;
}

const PlayDungeonReq& PlayDungeonReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_2eproto();
  return *default_instance_;
}

PlayDungeonReq* PlayDungeonReq::default_instance_ = NULL;

PlayDungeonReq* PlayDungeonReq::New(::google::protobuf::Arena* arena) const {
  PlayDungeonReq* n = new PlayDungeonReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayDungeonReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.PlayDungeonReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PlayDungeonReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PlayDungeonReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(dungeonno_, tier_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PlayDungeonReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.PlayDungeonReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 dungeonNo = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dungeonno_)));
          set_has_dungeonno();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_tier;
        break;
      }

      // required uint32 tier = 2;
      case 2: {
        if (tag == 16) {
         parse_tier:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tier_)));
          set_has_tier();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.PlayDungeonReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.PlayDungeonReq)
  return false;
#undef DO_
}

void PlayDungeonReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.PlayDungeonReq)
  // required uint32 dungeonNo = 1;
  if (has_dungeonno()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dungeonno(), output);
  }

  // required uint32 tier = 2;
  if (has_tier()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->tier(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.PlayDungeonReq)
}

::google::protobuf::uint8* PlayDungeonReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.PlayDungeonReq)
  // required uint32 dungeonNo = 1;
  if (has_dungeonno()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dungeonno(), target);
  }

  // required uint32 tier = 2;
  if (has_tier()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->tier(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.PlayDungeonReq)
  return target;
}

int PlayDungeonReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.PlayDungeonReq)
  int total_size = 0;

  if (has_dungeonno()) {
    // required uint32 dungeonNo = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dungeonno());
  }

  if (has_tier()) {
    // required uint32 tier = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tier());
  }

  return total_size;
}
int PlayDungeonReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.PlayDungeonReq)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 dungeonNo = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dungeonno());

    // required uint32 tier = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tier());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayDungeonReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.PlayDungeonReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PlayDungeonReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayDungeonReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.PlayDungeonReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.PlayDungeonReq)
    MergeFrom(*source);
  }
}

void PlayDungeonReq::MergeFrom(const PlayDungeonReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.PlayDungeonReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dungeonno()) {
      set_dungeonno(from.dungeonno());
    }
    if (from.has_tier()) {
      set_tier(from.tier());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PlayDungeonReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.PlayDungeonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayDungeonReq::CopyFrom(const PlayDungeonReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.PlayDungeonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayDungeonReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PlayDungeonReq::Swap(PlayDungeonReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayDungeonReq::InternalSwap(PlayDungeonReq* other) {
  std::swap(dungeonno_, other->dungeonno_);
  std::swap(tier_, other->tier_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayDungeonReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayDungeonReq_descriptor_;
  metadata.reflection = PlayDungeonReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayDungeonReq

// required uint32 dungeonNo = 1;
bool PlayDungeonReq::has_dungeonno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PlayDungeonReq::set_has_dungeonno() {
  _has_bits_[0] |= 0x00000001u;
}
void PlayDungeonReq::clear_has_dungeonno() {
  _has_bits_[0] &= ~0x00000001u;
}
void PlayDungeonReq::clear_dungeonno() {
  dungeonno_ = 0u;
  clear_has_dungeonno();
}
 ::google::protobuf::uint32 PlayDungeonReq::dungeonno() const {
  // @@protoc_insertion_point(field_get:MSG.PlayDungeonReq.dungeonNo)
  return dungeonno_;
}
 void PlayDungeonReq::set_dungeonno(::google::protobuf::uint32 value) {
  set_has_dungeonno();
  dungeonno_ = value;
  // @@protoc_insertion_point(field_set:MSG.PlayDungeonReq.dungeonNo)
}

// required uint32 tier = 2;
bool PlayDungeonReq::has_tier() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PlayDungeonReq::set_has_tier() {
  _has_bits_[0] |= 0x00000002u;
}
void PlayDungeonReq::clear_has_tier() {
  _has_bits_[0] &= ~0x00000002u;
}
void PlayDungeonReq::clear_tier() {
  tier_ = 0u;
  clear_has_tier();
}
 ::google::protobuf::uint32 PlayDungeonReq::tier() const {
  // @@protoc_insertion_point(field_get:MSG.PlayDungeonReq.tier)
  return tier_;
}
 void PlayDungeonReq::set_tier(::google::protobuf::uint32 value) {
  set_has_tier();
  tier_ = value;
  // @@protoc_insertion_point(field_set:MSG.PlayDungeonReq.tier)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayDungeonAns::kErrFieldNumber;
const int PlayDungeonAns::kBattlesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayDungeonAns::PlayDungeonAns()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.PlayDungeonAns)
}

void PlayDungeonAns::InitAsDefaultInstance() {
}

PlayDungeonAns::PlayDungeonAns(const PlayDungeonAns& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.PlayDungeonAns)
}

void PlayDungeonAns::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PlayDungeonAns::~PlayDungeonAns() {
  // @@protoc_insertion_point(destructor:MSG.PlayDungeonAns)
  SharedDtor();
}

void PlayDungeonAns::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PlayDungeonAns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayDungeonAns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayDungeonAns_descriptor_;
}

const PlayDungeonAns& PlayDungeonAns::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_2eproto();
  return *default_instance_;
}

PlayDungeonAns* PlayDungeonAns::default_instance_ = NULL;

PlayDungeonAns* PlayDungeonAns::New(::google::protobuf::Arena* arena) const {
  PlayDungeonAns* n = new PlayDungeonAns;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayDungeonAns::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.PlayDungeonAns)
  err_ = 0;
  battles_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PlayDungeonAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.PlayDungeonAns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MSG.ErrorCode err = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MSG::ErrorCode_IsValid(value)) {
            set_err(static_cast< ::MSG::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_battles;
        break;
      }

      // repeated .MSG.BattleData_ battles = 2;
      case 2: {
        if (tag == 18) {
         parse_battles:
          DO_(input->IncrementRecursionDepth());
         parse_loop_battles:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_battles()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_battles;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.PlayDungeonAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.PlayDungeonAns)
  return false;
#undef DO_
}

void PlayDungeonAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.PlayDungeonAns)
  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->err(), output);
  }

  // repeated .MSG.BattleData_ battles = 2;
  for (unsigned int i = 0, n = this->battles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->battles(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.PlayDungeonAns)
}

::google::protobuf::uint8* PlayDungeonAns::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.PlayDungeonAns)
  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->err(), target);
  }

  // repeated .MSG.BattleData_ battles = 2;
  for (unsigned int i = 0, n = this->battles_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->battles(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.PlayDungeonAns)
  return target;
}

int PlayDungeonAns::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.PlayDungeonAns)
  int total_size = 0;

  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->err());
  }
  // repeated .MSG.BattleData_ battles = 2;
  total_size += 1 * this->battles_size();
  for (int i = 0; i < this->battles_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->battles(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayDungeonAns::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.PlayDungeonAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PlayDungeonAns* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayDungeonAns>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.PlayDungeonAns)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.PlayDungeonAns)
    MergeFrom(*source);
  }
}

void PlayDungeonAns::MergeFrom(const PlayDungeonAns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.PlayDungeonAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  battles_.MergeFrom(from.battles_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PlayDungeonAns::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.PlayDungeonAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayDungeonAns::CopyFrom(const PlayDungeonAns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.PlayDungeonAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayDungeonAns::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->battles())) return false;
  return true;
}

void PlayDungeonAns::Swap(PlayDungeonAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayDungeonAns::InternalSwap(PlayDungeonAns* other) {
  std::swap(err_, other->err_);
  battles_.UnsafeArenaSwap(&other->battles_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayDungeonAns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayDungeonAns_descriptor_;
  metadata.reflection = PlayDungeonAns_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayDungeonAns

// required .MSG.ErrorCode err = 1;
bool PlayDungeonAns::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PlayDungeonAns::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
void PlayDungeonAns::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
void PlayDungeonAns::clear_err() {
  err_ = 0;
  clear_has_err();
}
 ::MSG::ErrorCode PlayDungeonAns::err() const {
  // @@protoc_insertion_point(field_get:MSG.PlayDungeonAns.err)
  return static_cast< ::MSG::ErrorCode >(err_);
}
 void PlayDungeonAns::set_err(::MSG::ErrorCode value) {
  assert(::MSG::ErrorCode_IsValid(value));
  set_has_err();
  err_ = value;
  // @@protoc_insertion_point(field_set:MSG.PlayDungeonAns.err)
}

// repeated .MSG.BattleData_ battles = 2;
int PlayDungeonAns::battles_size() const {
  return battles_.size();
}
void PlayDungeonAns::clear_battles() {
  battles_.Clear();
}
const ::MSG::BattleData_& PlayDungeonAns::battles(int index) const {
  // @@protoc_insertion_point(field_get:MSG.PlayDungeonAns.battles)
  return battles_.Get(index);
}
::MSG::BattleData_* PlayDungeonAns::mutable_battles(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.PlayDungeonAns.battles)
  return battles_.Mutable(index);
}
::MSG::BattleData_* PlayDungeonAns::add_battles() {
  // @@protoc_insertion_point(field_add:MSG.PlayDungeonAns.battles)
  return battles_.Add();
}
::google::protobuf::RepeatedPtrField< ::MSG::BattleData_ >*
PlayDungeonAns::mutable_battles() {
  // @@protoc_insertion_point(field_mutable_list:MSG.PlayDungeonAns.battles)
  return &battles_;
}
const ::google::protobuf::RepeatedPtrField< ::MSG::BattleData_ >&
PlayDungeonAns::battles() const {
  // @@protoc_insertion_point(field_list:MSG.PlayDungeonAns.battles)
  return battles_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace MSG

// @@protoc_insertion_point(global_scope)
