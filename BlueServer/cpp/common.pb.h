// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#ifndef PROTOBUF_common_2eproto__INCLUDED
#define PROTOBUF_common_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace MSG {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_common_2eproto();
void protobuf_AssignDesc_common_2eproto();
void protobuf_ShutdownFile_common_2eproto();

class BattleData_;
class BattleData__Attack;
class CharData_;
class ChatChannel_;
class ChatData_;
class ChatRoom_;
class Contents_;
class DungeonData_;
class GMember_;
class Group_;
class UserData_;

enum Contents__ContentType {
  Contents__ContentType_CT_INGAME = 1,
  Contents__ContentType_CT_OUTGAME = 2,
  Contents__ContentType_CT_INAPPBUY = 3
};
bool Contents__ContentType_IsValid(int value);
const Contents__ContentType Contents__ContentType_ContentType_MIN = Contents__ContentType_CT_INGAME;
const Contents__ContentType Contents__ContentType_ContentType_MAX = Contents__ContentType_CT_INAPPBUY;
const int Contents__ContentType_ContentType_ARRAYSIZE = Contents__ContentType_ContentType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Contents__ContentType_descriptor();
inline const ::std::string& Contents__ContentType_Name(Contents__ContentType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Contents__ContentType_descriptor(), value);
}
inline bool Contents__ContentType_Parse(
    const ::std::string& name, Contents__ContentType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Contents__ContentType>(
    Contents__ContentType_descriptor(), name, value);
}
enum GMember__GradeType {
  GMember__GradeType_Grade_1 = 1,
  GMember__GradeType_Grade_2 = 2,
  GMember__GradeType_Grade_3 = 3,
  GMember__GradeType_Grade_4 = 4,
  GMember__GradeType_Grade_5 = 5
};
bool GMember__GradeType_IsValid(int value);
const GMember__GradeType GMember__GradeType_GradeType_MIN = GMember__GradeType_Grade_1;
const GMember__GradeType GMember__GradeType_GradeType_MAX = GMember__GradeType_Grade_5;
const int GMember__GradeType_GradeType_ARRAYSIZE = GMember__GradeType_GradeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GMember__GradeType_descriptor();
inline const ::std::string& GMember__GradeType_Name(GMember__GradeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GMember__GradeType_descriptor(), value);
}
inline bool GMember__GradeType_Parse(
    const ::std::string& name, GMember__GradeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GMember__GradeType>(
    GMember__GradeType_descriptor(), name, value);
}
enum BattleData__AttackResult {
  BattleData__AttackResult_ALIVE = 0,
  BattleData__AttackResult_DEAD = 1
};
bool BattleData__AttackResult_IsValid(int value);
const BattleData__AttackResult BattleData__AttackResult_AttackResult_MIN = BattleData__AttackResult_ALIVE;
const BattleData__AttackResult BattleData__AttackResult_AttackResult_MAX = BattleData__AttackResult_DEAD;
const int BattleData__AttackResult_AttackResult_ARRAYSIZE = BattleData__AttackResult_AttackResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* BattleData__AttackResult_descriptor();
inline const ::std::string& BattleData__AttackResult_Name(BattleData__AttackResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    BattleData__AttackResult_descriptor(), value);
}
inline bool BattleData__AttackResult_Parse(
    const ::std::string& name, BattleData__AttackResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BattleData__AttackResult>(
    BattleData__AttackResult_descriptor(), name, value);
}
enum BattleData__Team {
  BattleData__Team_ALLY = 0,
  BattleData__Team_ENEMY = 1
};
bool BattleData__Team_IsValid(int value);
const BattleData__Team BattleData__Team_Team_MIN = BattleData__Team_ALLY;
const BattleData__Team BattleData__Team_Team_MAX = BattleData__Team_ENEMY;
const int BattleData__Team_Team_ARRAYSIZE = BattleData__Team_Team_MAX + 1;

const ::google::protobuf::EnumDescriptor* BattleData__Team_descriptor();
inline const ::std::string& BattleData__Team_Name(BattleData__Team value) {
  return ::google::protobuf::internal::NameOfEnum(
    BattleData__Team_descriptor(), value);
}
inline bool BattleData__Team_Parse(
    const ::std::string& name, BattleData__Team* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BattleData__Team>(
    BattleData__Team_descriptor(), name, value);
}
enum MsgId {
  CLOSED = 10000,
  LOGIN_REQ = 10101,
  LOGIN_ANS = 10102,
  PING_REQ = 10103,
  PONG_ANS = 10104,
  REGIST_REQ = 10105,
  REGIST_ANS = 10106,
  VERSION_REQ = 10107,
  VERSION_ANS = 10108,
  CHAT_REQ = 20101,
  CHAT_ANS = 20102,
  CHAT_NOT = 20103,
  CREATECHATROOM_REQ = 20111,
  CREATECHATROOM_ANS = 20112,
  CREATECHATROOM_NOT = 20113,
  INVITECHATROOM_REQ = 20121,
  INVITECHATROOM_ANS = 20122,
  INVITECHATROOM_NOT = 20123,
  ENTERCHATROOM_REQ = 20131,
  ENTERCHATROOM_ANS = 20132,
  ENTERCHATROOM_NOT = 20133,
  LEAVECHATROOM_REQ = 20141,
  LEAVECHATROOM_ANS = 20142,
  LEAVECHATROOM_NOT = 20143,
  CREATECHAR_REQ = 20151,
  CREATECHAR_ANS = 20152,
  CONTENTS_NOT = 20161,
  CURRENCY_NOT = 20163,
  PLAYDUNGEON_REQ = 20171,
  PLAYDUNGEON_ANS = 20172,
  PLAYDUNGEON_NOT = 20173,
  LEVELUPCHAR_REQ = 20181,
  LEVELUPCHAR_ANS = 20182,
  TIERUPCHAR_REQ = 20191,
  TIERUPCHAR_ANS = 20192
};
bool MsgId_IsValid(int value);
const MsgId MsgId_MIN = CLOSED;
const MsgId MsgId_MAX = TIERUPCHAR_ANS;
const int MsgId_ARRAYSIZE = MsgId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgId_descriptor();
inline const ::std::string& MsgId_Name(MsgId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgId_descriptor(), value);
}
inline bool MsgId_Parse(
    const ::std::string& name, MsgId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgId>(
    MsgId_descriptor(), name, value);
}
enum ErrorCode {
  ERR_SUCCESS = 0,
  ERR_LOGIN_FAIL = 1,
  ERR_ARGUMENT_FAIL = 2,
  ERR_AUTHORITY_FAIL = 3,
  ERR_SESSIONKEY_FAIL = 4
};
bool ErrorCode_IsValid(int value);
const ErrorCode ErrorCode_MIN = ERR_SUCCESS;
const ErrorCode ErrorCode_MAX = ERR_SESSIONKEY_FAIL;
const int ErrorCode_ARRAYSIZE = ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor();
inline const ::std::string& ErrorCode_Name(ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorCode_descriptor(), value);
}
inline bool ErrorCode_Parse(
    const ::std::string& name, ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorCode>(
    ErrorCode_descriptor(), name, value);
}
enum PlatForm {
  IOS = 0,
  ANDROID = 1
};
bool PlatForm_IsValid(int value);
const PlatForm PlatForm_MIN = IOS;
const PlatForm PlatForm_MAX = ANDROID;
const int PlatForm_ARRAYSIZE = PlatForm_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlatForm_descriptor();
inline const ::std::string& PlatForm_Name(PlatForm value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlatForm_descriptor(), value);
}
inline bool PlatForm_Parse(
    const ::std::string& name, PlatForm* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlatForm>(
    PlatForm_descriptor(), name, value);
}
enum ChatType {
  CHAT_CHANNEL = 1,
  CHAT_GROUP = 2,
  CHAT_ROOM = 3
};
bool ChatType_IsValid(int value);
const ChatType ChatType_MIN = CHAT_CHANNEL;
const ChatType ChatType_MAX = CHAT_ROOM;
const int ChatType_ARRAYSIZE = ChatType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChatType_descriptor();
inline const ::std::string& ChatType_Name(ChatType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChatType_descriptor(), value);
}
inline bool ChatType_Parse(
    const ::std::string& name, ChatType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChatType>(
    ChatType_descriptor(), name, value);
}
// ===================================================================

class UserData_ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.UserData_) */ {
 public:
  UserData_();
  virtual ~UserData_();

  UserData_(const UserData_& from);

  inline UserData_& operator=(const UserData_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserData_& default_instance();

  void Swap(UserData_* other);

  // implements Message ----------------------------------------------

  inline UserData_* New() const { return New(NULL); }

  UserData_* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserData_& from);
  void MergeFrom(const UserData_& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserData_* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string did = 3;
  bool has_did() const;
  void clear_did();
  static const int kDidFieldNumber = 3;
  const ::std::string& did() const;
  void set_did(const ::std::string& value);
  void set_did(const char* value);
  void set_did(const char* value, size_t size);
  ::std::string* mutable_did();
  ::std::string* release_did();
  void set_allocated_did(::std::string* did);

  // optional .MSG.PlatForm platform = 4;
  bool has_platform() const;
  void clear_platform();
  static const int kPlatformFieldNumber = 4;
  ::MSG::PlatForm platform() const;
  void set_platform(::MSG::PlatForm value);

  // optional string loginDate = 5;
  bool has_logindate() const;
  void clear_logindate();
  static const int kLoginDateFieldNumber = 5;
  const ::std::string& logindate() const;
  void set_logindate(const ::std::string& value);
  void set_logindate(const char* value);
  void set_logindate(const char* value, size_t size);
  ::std::string* mutable_logindate();
  ::std::string* release_logindate();
  void set_allocated_logindate(::std::string* logindate);

  // optional string logoutDate = 6;
  bool has_logoutdate() const;
  void clear_logoutdate();
  static const int kLogoutDateFieldNumber = 6;
  const ::std::string& logoutdate() const;
  void set_logoutdate(const ::std::string& value);
  void set_logoutdate(const char* value);
  void set_logoutdate(const char* value, size_t size);
  ::std::string* mutable_logoutdate();
  ::std::string* release_logoutdate();
  void set_allocated_logoutdate(::std::string* logoutdate);

  // optional string regDate = 7;
  bool has_regdate() const;
  void clear_regdate();
  static const int kRegDateFieldNumber = 7;
  const ::std::string& regdate() const;
  void set_regdate(const ::std::string& value);
  void set_regdate(const char* value);
  void set_regdate(const char* value, size_t size);
  ::std::string* mutable_regdate();
  ::std::string* release_regdate();
  void set_allocated_regdate(::std::string* regdate);

  // optional uint32 vc1 = 8;
  bool has_vc1() const;
  void clear_vc1();
  static const int kVc1FieldNumber = 8;
  ::google::protobuf::uint32 vc1() const;
  void set_vc1(::google::protobuf::uint32 value);

  // optional uint32 vc2 = 9;
  bool has_vc2() const;
  void clear_vc2();
  static const int kVc2FieldNumber = 9;
  ::google::protobuf::uint32 vc2() const;
  void set_vc2(::google::protobuf::uint32 value);

  // optional uint32 vc3 = 10;
  bool has_vc3() const;
  void clear_vc3();
  static const int kVc3FieldNumber = 10;
  ::google::protobuf::uint32 vc3() const;
  void set_vc3(::google::protobuf::uint32 value);

  // optional string groupName = 11;
  bool has_groupname() const;
  void clear_groupname();
  static const int kGroupNameFieldNumber = 11;
  const ::std::string& groupname() const;
  void set_groupname(const ::std::string& value);
  void set_groupname(const char* value);
  void set_groupname(const char* value, size_t size);
  ::std::string* mutable_groupname();
  ::std::string* release_groupname();
  void set_allocated_groupname(::std::string* groupname);

  // optional string language = 12;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 12;
  const ::std::string& language() const;
  void set_language(const ::std::string& value);
  void set_language(const char* value);
  void set_language(const char* value, size_t size);
  ::std::string* mutable_language();
  ::std::string* release_language();
  void set_allocated_language(::std::string* language);

  // repeated .MSG.CharData_ chars = 13;
  int chars_size() const;
  void clear_chars();
  static const int kCharsFieldNumber = 13;
  const ::MSG::CharData_& chars(int index) const;
  ::MSG::CharData_* mutable_chars(int index);
  ::MSG::CharData_* add_chars();
  ::google::protobuf::RepeatedPtrField< ::MSG::CharData_ >*
      mutable_chars();
  const ::google::protobuf::RepeatedPtrField< ::MSG::CharData_ >&
      chars() const;

  // @@protoc_insertion_point(class_scope:MSG.UserData_)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_did();
  inline void clear_has_did();
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_logindate();
  inline void clear_has_logindate();
  inline void set_has_logoutdate();
  inline void clear_has_logoutdate();
  inline void set_has_regdate();
  inline void clear_has_regdate();
  inline void set_has_vc1();
  inline void clear_has_vc1();
  inline void set_has_vc2();
  inline void clear_has_vc2();
  inline void set_has_vc3();
  inline void clear_has_vc3();
  inline void set_has_groupname();
  inline void clear_has_groupname();
  inline void set_has_language();
  inline void clear_has_language();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr did_;
  ::google::protobuf::internal::ArenaStringPtr logindate_;
  ::google::protobuf::internal::ArenaStringPtr logoutdate_;
  int platform_;
  ::google::protobuf::uint32 vc1_;
  ::google::protobuf::internal::ArenaStringPtr regdate_;
  ::google::protobuf::uint32 vc2_;
  ::google::protobuf::uint32 vc3_;
  ::google::protobuf::internal::ArenaStringPtr groupname_;
  ::google::protobuf::internal::ArenaStringPtr language_;
  ::google::protobuf::RepeatedPtrField< ::MSG::CharData_ > chars_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static UserData_* default_instance_;
};
// -------------------------------------------------------------------

class Contents_ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.Contents_) */ {
 public:
  Contents_();
  virtual ~Contents_();

  Contents_(const Contents_& from);

  inline Contents_& operator=(const Contents_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Contents_& default_instance();

  void Swap(Contents_* other);

  // implements Message ----------------------------------------------

  inline Contents_* New() const { return New(NULL); }

  Contents_* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Contents_& from);
  void MergeFrom(const Contents_& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Contents_* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Contents__ContentType ContentType;
  static const ContentType CT_INGAME =
    Contents__ContentType_CT_INGAME;
  static const ContentType CT_OUTGAME =
    Contents__ContentType_CT_OUTGAME;
  static const ContentType CT_INAPPBUY =
    Contents__ContentType_CT_INAPPBUY;
  static inline bool ContentType_IsValid(int value) {
    return Contents__ContentType_IsValid(value);
  }
  static const ContentType ContentType_MIN =
    Contents__ContentType_ContentType_MIN;
  static const ContentType ContentType_MAX =
    Contents__ContentType_ContentType_MAX;
  static const int ContentType_ARRAYSIZE =
    Contents__ContentType_ContentType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ContentType_descriptor() {
    return Contents__ContentType_descriptor();
  }
  static inline const ::std::string& ContentType_Name(ContentType value) {
    return Contents__ContentType_Name(value);
  }
  static inline bool ContentType_Parse(const ::std::string& name,
      ContentType* value) {
    return Contents__ContentType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .MSG.Contents_.ContentType type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::MSG::Contents__ContentType type() const;
  void set_type(::MSG::Contents__ContentType value);

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:MSG.Contents_)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_name();
  inline void clear_has_name();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int type_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static Contents_* default_instance_;
};
// -------------------------------------------------------------------

class GMember_ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.GMember_) */ {
 public:
  GMember_();
  virtual ~GMember_();

  GMember_(const GMember_& from);

  inline GMember_& operator=(const GMember_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMember_& default_instance();

  void Swap(GMember_* other);

  // implements Message ----------------------------------------------

  inline GMember_* New() const { return New(NULL); }

  GMember_* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMember_& from);
  void MergeFrom(const GMember_& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GMember_* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GMember__GradeType GradeType;
  static const GradeType Grade_1 =
    GMember__GradeType_Grade_1;
  static const GradeType Grade_2 =
    GMember__GradeType_Grade_2;
  static const GradeType Grade_3 =
    GMember__GradeType_Grade_3;
  static const GradeType Grade_4 =
    GMember__GradeType_Grade_4;
  static const GradeType Grade_5 =
    GMember__GradeType_Grade_5;
  static inline bool GradeType_IsValid(int value) {
    return GMember__GradeType_IsValid(value);
  }
  static const GradeType GradeType_MIN =
    GMember__GradeType_GradeType_MIN;
  static const GradeType GradeType_MAX =
    GMember__GradeType_GradeType_MAX;
  static const int GradeType_ARRAYSIZE =
    GMember__GradeType_GradeType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  GradeType_descriptor() {
    return GMember__GradeType_descriptor();
  }
  static inline const ::std::string& GradeType_Name(GradeType value) {
    return GMember__GradeType_Name(value);
  }
  static inline bool GradeType_Parse(const ::std::string& name,
      GradeType* value) {
    return GMember__GradeType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required .MSG.GMember_.GradeType grade = 3;
  bool has_grade() const;
  void clear_grade();
  static const int kGradeFieldNumber = 3;
  ::MSG::GMember__GradeType grade() const;
  void set_grade(::MSG::GMember__GradeType value);

  // @@protoc_insertion_point(class_scope:MSG.GMember_)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_grade();
  inline void clear_has_grade();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int grade_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static GMember_* default_instance_;
};
// -------------------------------------------------------------------

class Group_ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.Group_) */ {
 public:
  Group_();
  virtual ~Group_();

  Group_(const Group_& from);

  inline Group_& operator=(const Group_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Group_& default_instance();

  void Swap(Group_* other);

  // implements Message ----------------------------------------------

  inline Group_* New() const { return New(NULL); }

  Group_* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Group_& from);
  void MergeFrom(const Group_& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Group_* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 gid = 1;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 1;
  ::google::protobuf::uint64 gid() const;
  void set_gid(::google::protobuf::uint64 value);

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string country = 3;
  bool has_country() const;
  void clear_country();
  static const int kCountryFieldNumber = 3;
  const ::std::string& country() const;
  void set_country(const ::std::string& value);
  void set_country(const char* value);
  void set_country(const char* value, size_t size);
  ::std::string* mutable_country();
  ::std::string* release_country();
  void set_allocated_country(::std::string* country);

  // required uint64 leader = 4;
  bool has_leader() const;
  void clear_leader();
  static const int kLeaderFieldNumber = 4;
  ::google::protobuf::uint64 leader() const;
  void set_leader(::google::protobuf::uint64 value);

  // required uint32 limit = 5;
  bool has_limit() const;
  void clear_limit();
  static const int kLimitFieldNumber = 5;
  ::google::protobuf::uint32 limit() const;
  void set_limit(::google::protobuf::uint32 value);

  // repeated .MSG.GMember_ members = 6;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 6;
  const ::MSG::GMember_& members(int index) const;
  ::MSG::GMember_* mutable_members(int index);
  ::MSG::GMember_* add_members();
  ::google::protobuf::RepeatedPtrField< ::MSG::GMember_ >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::MSG::GMember_ >&
      members() const;

  // @@protoc_insertion_point(class_scope:MSG.Group_)
 private:
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_country();
  inline void clear_has_country();
  inline void set_has_leader();
  inline void clear_has_leader();
  inline void set_has_limit();
  inline void clear_has_limit();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 gid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr country_;
  ::google::protobuf::uint64 leader_;
  ::google::protobuf::RepeatedPtrField< ::MSG::GMember_ > members_;
  ::google::protobuf::uint32 limit_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static Group_* default_instance_;
};
// -------------------------------------------------------------------

class ChatData_ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.ChatData_) */ {
 public:
  ChatData_();
  virtual ~ChatData_();

  ChatData_(const ChatData_& from);

  inline ChatData_& operator=(const ChatData_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatData_& default_instance();

  void Swap(ChatData_* other);

  // implements Message ----------------------------------------------

  inline ChatData_* New() const { return New(NULL); }

  ChatData_* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatData_& from);
  void MergeFrom(const ChatData_& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChatData_* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string groupName = 3;
  bool has_groupname() const;
  void clear_groupname();
  static const int kGroupNameFieldNumber = 3;
  const ::std::string& groupname() const;
  void set_groupname(const ::std::string& value);
  void set_groupname(const char* value);
  void set_groupname(const char* value, size_t size);
  ::std::string* mutable_groupname();
  ::std::string* release_groupname();
  void set_allocated_groupname(::std::string* groupname);

  // required string language = 4;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  const ::std::string& language() const;
  void set_language(const ::std::string& value);
  void set_language(const char* value);
  void set_language(const char* value, size_t size);
  ::std::string* mutable_language();
  ::std::string* release_language();
  void set_allocated_language(::std::string* language);

  // required string chat = 5;
  bool has_chat() const;
  void clear_chat();
  static const int kChatFieldNumber = 5;
  const ::std::string& chat() const;
  void set_chat(const ::std::string& value);
  void set_chat(const char* value);
  void set_chat(const char* value, size_t size);
  ::std::string* mutable_chat();
  ::std::string* release_chat();
  void set_allocated_chat(::std::string* chat);

  // required uint64 regDate = 6;
  bool has_regdate() const;
  void clear_regdate();
  static const int kRegDateFieldNumber = 6;
  ::google::protobuf::uint64 regdate() const;
  void set_regdate(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MSG.ChatData_)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_groupname();
  inline void clear_has_groupname();
  inline void set_has_language();
  inline void clear_has_language();
  inline void set_has_chat();
  inline void clear_has_chat();
  inline void set_has_regdate();
  inline void clear_has_regdate();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr groupname_;
  ::google::protobuf::internal::ArenaStringPtr language_;
  ::google::protobuf::internal::ArenaStringPtr chat_;
  ::google::protobuf::uint64 regdate_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ChatData_* default_instance_;
};
// -------------------------------------------------------------------

class ChatRoom_ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.ChatRoom_) */ {
 public:
  ChatRoom_();
  virtual ~ChatRoom_();

  ChatRoom_(const ChatRoom_& from);

  inline ChatRoom_& operator=(const ChatRoom_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatRoom_& default_instance();

  void Swap(ChatRoom_* other);

  // implements Message ----------------------------------------------

  inline ChatRoom_* New() const { return New(NULL); }

  ChatRoom_* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatRoom_& from);
  void MergeFrom(const ChatRoom_& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChatRoom_* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 rid = 1;
  bool has_rid() const;
  void clear_rid();
  static const int kRidFieldNumber = 1;
  ::google::protobuf::uint64 rid() const;
  void set_rid(::google::protobuf::uint64 value);

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // repeated .MSG.ChatData_ chats = 3;
  int chats_size() const;
  void clear_chats();
  static const int kChatsFieldNumber = 3;
  const ::MSG::ChatData_& chats(int index) const;
  ::MSG::ChatData_* mutable_chats(int index);
  ::MSG::ChatData_* add_chats();
  ::google::protobuf::RepeatedPtrField< ::MSG::ChatData_ >*
      mutable_chats();
  const ::google::protobuf::RepeatedPtrField< ::MSG::ChatData_ >&
      chats() const;

  // @@protoc_insertion_point(class_scope:MSG.ChatRoom_)
 private:
  inline void set_has_rid();
  inline void clear_has_rid();
  inline void set_has_name();
  inline void clear_has_name();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 rid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::RepeatedPtrField< ::MSG::ChatData_ > chats_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ChatRoom_* default_instance_;
};
// -------------------------------------------------------------------

class ChatChannel_ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.ChatChannel_) */ {
 public:
  ChatChannel_();
  virtual ~ChatChannel_();

  ChatChannel_(const ChatChannel_& from);

  inline ChatChannel_& operator=(const ChatChannel_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatChannel_& default_instance();

  void Swap(ChatChannel_* other);

  // implements Message ----------------------------------------------

  inline ChatChannel_* New() const { return New(NULL); }

  ChatChannel_* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatChannel_& from);
  void MergeFrom(const ChatChannel_& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChatChannel_* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cid = 1;
  bool has_cid() const;
  void clear_cid();
  static const int kCidFieldNumber = 1;
  ::google::protobuf::uint64 cid() const;
  void set_cid(::google::protobuf::uint64 value);

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // repeated .MSG.ChatData_ chats = 3;
  int chats_size() const;
  void clear_chats();
  static const int kChatsFieldNumber = 3;
  const ::MSG::ChatData_& chats(int index) const;
  ::MSG::ChatData_* mutable_chats(int index);
  ::MSG::ChatData_* add_chats();
  ::google::protobuf::RepeatedPtrField< ::MSG::ChatData_ >*
      mutable_chats();
  const ::google::protobuf::RepeatedPtrField< ::MSG::ChatData_ >&
      chats() const;

  // @@protoc_insertion_point(class_scope:MSG.ChatChannel_)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 cid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::RepeatedPtrField< ::MSG::ChatData_ > chats_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ChatChannel_* default_instance_;
};
// -------------------------------------------------------------------

class CharData_ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.CharData_) */ {
 public:
  CharData_();
  virtual ~CharData_();

  CharData_(const CharData_& from);

  inline CharData_& operator=(const CharData_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharData_& default_instance();

  void Swap(CharData_* other);

  // implements Message ----------------------------------------------

  inline CharData_* New() const { return New(NULL); }

  CharData_* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharData_& from);
  void MergeFrom(const CharData_& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CharData_* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cid = 1;
  bool has_cid() const;
  void clear_cid();
  static const int kCidFieldNumber = 1;
  ::google::protobuf::uint64 cid() const;
  void set_cid(::google::protobuf::uint64 value);

  // required uint64 uid = 2;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // optional uint32 slotNo = 3;
  bool has_slotno() const;
  void clear_slotno();
  static const int kSlotNoFieldNumber = 3;
  ::google::protobuf::uint32 slotno() const;
  void set_slotno(::google::protobuf::uint32 value);

  // optional uint32 typeNo = 4;
  bool has_typeno() const;
  void clear_typeno();
  static const int kTypeNoFieldNumber = 4;
  ::google::protobuf::uint32 typeno() const;
  void set_typeno(::google::protobuf::uint32 value);

  // optional uint32 level = 5;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 tier = 6;
  bool has_tier() const;
  void clear_tier();
  static const int kTierFieldNumber = 6;
  ::google::protobuf::uint32 tier() const;
  void set_tier(::google::protobuf::uint32 value);

  // optional string regDate = 7;
  bool has_regdate() const;
  void clear_regdate();
  static const int kRegDateFieldNumber = 7;
  const ::std::string& regdate() const;
  void set_regdate(const ::std::string& value);
  void set_regdate(const char* value);
  void set_regdate(const char* value, size_t size);
  ::std::string* mutable_regdate();
  ::std::string* release_regdate();
  void set_allocated_regdate(::std::string* regdate);

  // @@protoc_insertion_point(class_scope:MSG.CharData_)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_slotno();
  inline void clear_has_slotno();
  inline void set_has_typeno();
  inline void clear_has_typeno();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_tier();
  inline void clear_has_tier();
  inline void set_has_regdate();
  inline void clear_has_regdate();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 slotno_;
  ::google::protobuf::uint32 typeno_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 tier_;
  ::google::protobuf::internal::ArenaStringPtr regdate_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static CharData_* default_instance_;
};
// -------------------------------------------------------------------

class DungeonData_ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.DungeonData_) */ {
 public:
  DungeonData_();
  virtual ~DungeonData_();

  DungeonData_(const DungeonData_& from);

  inline DungeonData_& operator=(const DungeonData_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DungeonData_& default_instance();

  void Swap(DungeonData_* other);

  // implements Message ----------------------------------------------

  inline DungeonData_* New() const { return New(NULL); }

  DungeonData_* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DungeonData_& from);
  void MergeFrom(const DungeonData_& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DungeonData_* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 no = 1;
  bool has_no() const;
  void clear_no();
  static const int kNoFieldNumber = 1;
  ::google::protobuf::uint32 no() const;
  void set_no(::google::protobuf::uint32 value);

  // required uint32 tier = 2;
  bool has_tier() const;
  void clear_tier();
  static const int kTierFieldNumber = 2;
  ::google::protobuf::uint32 tier() const;
  void set_tier(::google::protobuf::uint32 value);

  // repeated .MSG.CharData_ monsters = 3;
  int monsters_size() const;
  void clear_monsters();
  static const int kMonstersFieldNumber = 3;
  const ::MSG::CharData_& monsters(int index) const;
  ::MSG::CharData_* mutable_monsters(int index);
  ::MSG::CharData_* add_monsters();
  ::google::protobuf::RepeatedPtrField< ::MSG::CharData_ >*
      mutable_monsters();
  const ::google::protobuf::RepeatedPtrField< ::MSG::CharData_ >&
      monsters() const;

  // @@protoc_insertion_point(class_scope:MSG.DungeonData_)
 private:
  inline void set_has_no();
  inline void clear_has_no();
  inline void set_has_tier();
  inline void clear_has_tier();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 no_;
  ::google::protobuf::uint32 tier_;
  ::google::protobuf::RepeatedPtrField< ::MSG::CharData_ > monsters_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static DungeonData_* default_instance_;
};
// -------------------------------------------------------------------

class BattleData__Attack : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.BattleData_.Attack) */ {
 public:
  BattleData__Attack();
  virtual ~BattleData__Attack();

  BattleData__Attack(const BattleData__Attack& from);

  inline BattleData__Attack& operator=(const BattleData__Attack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleData__Attack& default_instance();

  void Swap(BattleData__Attack* other);

  // implements Message ----------------------------------------------

  inline BattleData__Attack* New() const { return New(NULL); }

  BattleData__Attack* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleData__Attack& from);
  void MergeFrom(const BattleData__Attack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BattleData__Attack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 no = 1;
  bool has_no() const;
  void clear_no();
  static const int kNoFieldNumber = 1;
  ::google::protobuf::uint32 no() const;
  void set_no(::google::protobuf::uint32 value);

  // required uint32 damage = 2;
  bool has_damage() const;
  void clear_damage();
  static const int kDamageFieldNumber = 2;
  ::google::protobuf::uint32 damage() const;
  void set_damage(::google::protobuf::uint32 value);

  // required .MSG.BattleData_.AttackResult result = 3;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::MSG::BattleData__AttackResult result() const;
  void set_result(::MSG::BattleData__AttackResult value);

  // @@protoc_insertion_point(class_scope:MSG.BattleData_.Attack)
 private:
  inline void set_has_no();
  inline void clear_has_no();
  inline void set_has_damage();
  inline void clear_has_damage();
  inline void set_has_result();
  inline void clear_has_result();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 no_;
  ::google::protobuf::uint32 damage_;
  int result_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static BattleData__Attack* default_instance_;
};
// -------------------------------------------------------------------

class BattleData_ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MSG.BattleData_) */ {
 public:
  BattleData_();
  virtual ~BattleData_();

  BattleData_(const BattleData_& from);

  inline BattleData_& operator=(const BattleData_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleData_& default_instance();

  void Swap(BattleData_* other);

  // implements Message ----------------------------------------------

  inline BattleData_* New() const { return New(NULL); }

  BattleData_* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleData_& from);
  void MergeFrom(const BattleData_& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BattleData_* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BattleData__Attack Attack;

  typedef BattleData__AttackResult AttackResult;
  static const AttackResult ALIVE =
    BattleData__AttackResult_ALIVE;
  static const AttackResult DEAD =
    BattleData__AttackResult_DEAD;
  static inline bool AttackResult_IsValid(int value) {
    return BattleData__AttackResult_IsValid(value);
  }
  static const AttackResult AttackResult_MIN =
    BattleData__AttackResult_AttackResult_MIN;
  static const AttackResult AttackResult_MAX =
    BattleData__AttackResult_AttackResult_MAX;
  static const int AttackResult_ARRAYSIZE =
    BattleData__AttackResult_AttackResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AttackResult_descriptor() {
    return BattleData__AttackResult_descriptor();
  }
  static inline const ::std::string& AttackResult_Name(AttackResult value) {
    return BattleData__AttackResult_Name(value);
  }
  static inline bool AttackResult_Parse(const ::std::string& name,
      AttackResult* value) {
    return BattleData__AttackResult_Parse(name, value);
  }

  typedef BattleData__Team Team;
  static const Team ALLY =
    BattleData__Team_ALLY;
  static const Team ENEMY =
    BattleData__Team_ENEMY;
  static inline bool Team_IsValid(int value) {
    return BattleData__Team_IsValid(value);
  }
  static const Team Team_MIN =
    BattleData__Team_Team_MIN;
  static const Team Team_MAX =
    BattleData__Team_Team_MAX;
  static const int Team_ARRAYSIZE =
    BattleData__Team_Team_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Team_descriptor() {
    return BattleData__Team_descriptor();
  }
  static inline const ::std::string& Team_Name(Team value) {
    return BattleData__Team_Name(value);
  }
  static inline bool Team_Parse(const ::std::string& name,
      Team* value) {
    return BattleData__Team_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 srcNo = 1;
  bool has_srcno() const;
  void clear_srcno();
  static const int kSrcNoFieldNumber = 1;
  ::google::protobuf::uint32 srcno() const;
  void set_srcno(::google::protobuf::uint32 value);

  // repeated .MSG.BattleData_.Attack targets = 2;
  int targets_size() const;
  void clear_targets();
  static const int kTargetsFieldNumber = 2;
  const ::MSG::BattleData__Attack& targets(int index) const;
  ::MSG::BattleData__Attack* mutable_targets(int index);
  ::MSG::BattleData__Attack* add_targets();
  ::google::protobuf::RepeatedPtrField< ::MSG::BattleData__Attack >*
      mutable_targets();
  const ::google::protobuf::RepeatedPtrField< ::MSG::BattleData__Attack >&
      targets() const;

  // required .MSG.BattleData_.Team team = 3;
  bool has_team() const;
  void clear_team();
  static const int kTeamFieldNumber = 3;
  ::MSG::BattleData__Team team() const;
  void set_team(::MSG::BattleData__Team value);

  // @@protoc_insertion_point(class_scope:MSG.BattleData_)
 private:
  inline void set_has_srcno();
  inline void clear_has_srcno();
  inline void set_has_team();
  inline void clear_has_team();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MSG::BattleData__Attack > targets_;
  ::google::protobuf::uint32 srcno_;
  int team_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static BattleData_* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// UserData_

// required uint64 uid = 1;
inline bool UserData_::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserData_::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserData_::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserData_::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 UserData_::uid() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.uid)
  return uid_;
}
inline void UserData_::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:MSG.UserData_.uid)
}

// required string name = 2;
inline bool UserData_::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserData_::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserData_::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserData_::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& UserData_::name() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserData_::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.UserData_.name)
}
inline void UserData_::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.UserData_.name)
}
inline void UserData_::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.UserData_.name)
}
inline ::std::string* UserData_::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MSG.UserData_.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserData_::release_name() {
  // @@protoc_insertion_point(field_release:MSG.UserData_.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserData_::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.UserData_.name)
}

// optional string did = 3;
inline bool UserData_::has_did() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserData_::set_has_did() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserData_::clear_has_did() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserData_::clear_did() {
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_did();
}
inline const ::std::string& UserData_::did() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.did)
  return did_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserData_::set_did(const ::std::string& value) {
  set_has_did();
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.UserData_.did)
}
inline void UserData_::set_did(const char* value) {
  set_has_did();
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.UserData_.did)
}
inline void UserData_::set_did(const char* value, size_t size) {
  set_has_did();
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.UserData_.did)
}
inline ::std::string* UserData_::mutable_did() {
  set_has_did();
  // @@protoc_insertion_point(field_mutable:MSG.UserData_.did)
  return did_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserData_::release_did() {
  // @@protoc_insertion_point(field_release:MSG.UserData_.did)
  clear_has_did();
  return did_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserData_::set_allocated_did(::std::string* did) {
  if (did != NULL) {
    set_has_did();
  } else {
    clear_has_did();
  }
  did_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), did);
  // @@protoc_insertion_point(field_set_allocated:MSG.UserData_.did)
}

// optional .MSG.PlatForm platform = 4;
inline bool UserData_::has_platform() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserData_::set_has_platform() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserData_::clear_has_platform() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserData_::clear_platform() {
  platform_ = 0;
  clear_has_platform();
}
inline ::MSG::PlatForm UserData_::platform() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.platform)
  return static_cast< ::MSG::PlatForm >(platform_);
}
inline void UserData_::set_platform(::MSG::PlatForm value) {
  assert(::MSG::PlatForm_IsValid(value));
  set_has_platform();
  platform_ = value;
  // @@protoc_insertion_point(field_set:MSG.UserData_.platform)
}

// optional string loginDate = 5;
inline bool UserData_::has_logindate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserData_::set_has_logindate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserData_::clear_has_logindate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserData_::clear_logindate() {
  logindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_logindate();
}
inline const ::std::string& UserData_::logindate() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.loginDate)
  return logindate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserData_::set_logindate(const ::std::string& value) {
  set_has_logindate();
  logindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.UserData_.loginDate)
}
inline void UserData_::set_logindate(const char* value) {
  set_has_logindate();
  logindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.UserData_.loginDate)
}
inline void UserData_::set_logindate(const char* value, size_t size) {
  set_has_logindate();
  logindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.UserData_.loginDate)
}
inline ::std::string* UserData_::mutable_logindate() {
  set_has_logindate();
  // @@protoc_insertion_point(field_mutable:MSG.UserData_.loginDate)
  return logindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserData_::release_logindate() {
  // @@protoc_insertion_point(field_release:MSG.UserData_.loginDate)
  clear_has_logindate();
  return logindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserData_::set_allocated_logindate(::std::string* logindate) {
  if (logindate != NULL) {
    set_has_logindate();
  } else {
    clear_has_logindate();
  }
  logindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logindate);
  // @@protoc_insertion_point(field_set_allocated:MSG.UserData_.loginDate)
}

// optional string logoutDate = 6;
inline bool UserData_::has_logoutdate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserData_::set_has_logoutdate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserData_::clear_has_logoutdate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserData_::clear_logoutdate() {
  logoutdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_logoutdate();
}
inline const ::std::string& UserData_::logoutdate() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.logoutDate)
  return logoutdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserData_::set_logoutdate(const ::std::string& value) {
  set_has_logoutdate();
  logoutdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.UserData_.logoutDate)
}
inline void UserData_::set_logoutdate(const char* value) {
  set_has_logoutdate();
  logoutdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.UserData_.logoutDate)
}
inline void UserData_::set_logoutdate(const char* value, size_t size) {
  set_has_logoutdate();
  logoutdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.UserData_.logoutDate)
}
inline ::std::string* UserData_::mutable_logoutdate() {
  set_has_logoutdate();
  // @@protoc_insertion_point(field_mutable:MSG.UserData_.logoutDate)
  return logoutdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserData_::release_logoutdate() {
  // @@protoc_insertion_point(field_release:MSG.UserData_.logoutDate)
  clear_has_logoutdate();
  return logoutdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserData_::set_allocated_logoutdate(::std::string* logoutdate) {
  if (logoutdate != NULL) {
    set_has_logoutdate();
  } else {
    clear_has_logoutdate();
  }
  logoutdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logoutdate);
  // @@protoc_insertion_point(field_set_allocated:MSG.UserData_.logoutDate)
}

// optional string regDate = 7;
inline bool UserData_::has_regdate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserData_::set_has_regdate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserData_::clear_has_regdate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserData_::clear_regdate() {
  regdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_regdate();
}
inline const ::std::string& UserData_::regdate() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.regDate)
  return regdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserData_::set_regdate(const ::std::string& value) {
  set_has_regdate();
  regdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.UserData_.regDate)
}
inline void UserData_::set_regdate(const char* value) {
  set_has_regdate();
  regdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.UserData_.regDate)
}
inline void UserData_::set_regdate(const char* value, size_t size) {
  set_has_regdate();
  regdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.UserData_.regDate)
}
inline ::std::string* UserData_::mutable_regdate() {
  set_has_regdate();
  // @@protoc_insertion_point(field_mutable:MSG.UserData_.regDate)
  return regdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserData_::release_regdate() {
  // @@protoc_insertion_point(field_release:MSG.UserData_.regDate)
  clear_has_regdate();
  return regdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserData_::set_allocated_regdate(::std::string* regdate) {
  if (regdate != NULL) {
    set_has_regdate();
  } else {
    clear_has_regdate();
  }
  regdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regdate);
  // @@protoc_insertion_point(field_set_allocated:MSG.UserData_.regDate)
}

// optional uint32 vc1 = 8;
inline bool UserData_::has_vc1() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserData_::set_has_vc1() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserData_::clear_has_vc1() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserData_::clear_vc1() {
  vc1_ = 0u;
  clear_has_vc1();
}
inline ::google::protobuf::uint32 UserData_::vc1() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.vc1)
  return vc1_;
}
inline void UserData_::set_vc1(::google::protobuf::uint32 value) {
  set_has_vc1();
  vc1_ = value;
  // @@protoc_insertion_point(field_set:MSG.UserData_.vc1)
}

// optional uint32 vc2 = 9;
inline bool UserData_::has_vc2() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UserData_::set_has_vc2() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UserData_::clear_has_vc2() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UserData_::clear_vc2() {
  vc2_ = 0u;
  clear_has_vc2();
}
inline ::google::protobuf::uint32 UserData_::vc2() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.vc2)
  return vc2_;
}
inline void UserData_::set_vc2(::google::protobuf::uint32 value) {
  set_has_vc2();
  vc2_ = value;
  // @@protoc_insertion_point(field_set:MSG.UserData_.vc2)
}

// optional uint32 vc3 = 10;
inline bool UserData_::has_vc3() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UserData_::set_has_vc3() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UserData_::clear_has_vc3() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UserData_::clear_vc3() {
  vc3_ = 0u;
  clear_has_vc3();
}
inline ::google::protobuf::uint32 UserData_::vc3() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.vc3)
  return vc3_;
}
inline void UserData_::set_vc3(::google::protobuf::uint32 value) {
  set_has_vc3();
  vc3_ = value;
  // @@protoc_insertion_point(field_set:MSG.UserData_.vc3)
}

// optional string groupName = 11;
inline bool UserData_::has_groupname() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UserData_::set_has_groupname() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UserData_::clear_has_groupname() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UserData_::clear_groupname() {
  groupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupname();
}
inline const ::std::string& UserData_::groupname() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.groupName)
  return groupname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserData_::set_groupname(const ::std::string& value) {
  set_has_groupname();
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.UserData_.groupName)
}
inline void UserData_::set_groupname(const char* value) {
  set_has_groupname();
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.UserData_.groupName)
}
inline void UserData_::set_groupname(const char* value, size_t size) {
  set_has_groupname();
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.UserData_.groupName)
}
inline ::std::string* UserData_::mutable_groupname() {
  set_has_groupname();
  // @@protoc_insertion_point(field_mutable:MSG.UserData_.groupName)
  return groupname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserData_::release_groupname() {
  // @@protoc_insertion_point(field_release:MSG.UserData_.groupName)
  clear_has_groupname();
  return groupname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserData_::set_allocated_groupname(::std::string* groupname) {
  if (groupname != NULL) {
    set_has_groupname();
  } else {
    clear_has_groupname();
  }
  groupname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), groupname);
  // @@protoc_insertion_point(field_set_allocated:MSG.UserData_.groupName)
}

// optional string language = 12;
inline bool UserData_::has_language() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void UserData_::set_has_language() {
  _has_bits_[0] |= 0x00000800u;
}
inline void UserData_::clear_has_language() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void UserData_::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_language();
}
inline const ::std::string& UserData_::language() const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.language)
  return language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserData_::set_language(const ::std::string& value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.UserData_.language)
}
inline void UserData_::set_language(const char* value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.UserData_.language)
}
inline void UserData_::set_language(const char* value, size_t size) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.UserData_.language)
}
inline ::std::string* UserData_::mutable_language() {
  set_has_language();
  // @@protoc_insertion_point(field_mutable:MSG.UserData_.language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserData_::release_language() {
  // @@protoc_insertion_point(field_release:MSG.UserData_.language)
  clear_has_language();
  return language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserData_::set_allocated_language(::std::string* language) {
  if (language != NULL) {
    set_has_language();
  } else {
    clear_has_language();
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:MSG.UserData_.language)
}

// repeated .MSG.CharData_ chars = 13;
inline int UserData_::chars_size() const {
  return chars_.size();
}
inline void UserData_::clear_chars() {
  chars_.Clear();
}
inline const ::MSG::CharData_& UserData_::chars(int index) const {
  // @@protoc_insertion_point(field_get:MSG.UserData_.chars)
  return chars_.Get(index);
}
inline ::MSG::CharData_* UserData_::mutable_chars(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.UserData_.chars)
  return chars_.Mutable(index);
}
inline ::MSG::CharData_* UserData_::add_chars() {
  // @@protoc_insertion_point(field_add:MSG.UserData_.chars)
  return chars_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MSG::CharData_ >*
UserData_::mutable_chars() {
  // @@protoc_insertion_point(field_mutable_list:MSG.UserData_.chars)
  return &chars_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG::CharData_ >&
UserData_::chars() const {
  // @@protoc_insertion_point(field_list:MSG.UserData_.chars)
  return chars_;
}

// -------------------------------------------------------------------

// Contents_

// required .MSG.Contents_.ContentType type = 1;
inline bool Contents_::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Contents_::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Contents_::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Contents_::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::MSG::Contents__ContentType Contents_::type() const {
  // @@protoc_insertion_point(field_get:MSG.Contents_.type)
  return static_cast< ::MSG::Contents__ContentType >(type_);
}
inline void Contents_::set_type(::MSG::Contents__ContentType value) {
  assert(::MSG::Contents__ContentType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:MSG.Contents_.type)
}

// required string name = 2;
inline bool Contents_::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Contents_::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Contents_::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Contents_::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Contents_::name() const {
  // @@protoc_insertion_point(field_get:MSG.Contents_.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Contents_::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Contents_.name)
}
inline void Contents_::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Contents_.name)
}
inline void Contents_::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Contents_.name)
}
inline ::std::string* Contents_::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MSG.Contents_.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Contents_::release_name() {
  // @@protoc_insertion_point(field_release:MSG.Contents_.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Contents_::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.Contents_.name)
}

// -------------------------------------------------------------------

// GMember_

// required uint64 uid = 1;
inline bool GMember_::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMember_::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMember_::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMember_::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 GMember_::uid() const {
  // @@protoc_insertion_point(field_get:MSG.GMember_.uid)
  return uid_;
}
inline void GMember_::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:MSG.GMember_.uid)
}

// required string name = 2;
inline bool GMember_::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMember_::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMember_::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMember_::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& GMember_::name() const {
  // @@protoc_insertion_point(field_get:MSG.GMember_.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GMember_::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.GMember_.name)
}
inline void GMember_::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.GMember_.name)
}
inline void GMember_::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.GMember_.name)
}
inline ::std::string* GMember_::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MSG.GMember_.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GMember_::release_name() {
  // @@protoc_insertion_point(field_release:MSG.GMember_.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GMember_::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.GMember_.name)
}

// required .MSG.GMember_.GradeType grade = 3;
inline bool GMember_::has_grade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMember_::set_has_grade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMember_::clear_has_grade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMember_::clear_grade() {
  grade_ = 1;
  clear_has_grade();
}
inline ::MSG::GMember__GradeType GMember_::grade() const {
  // @@protoc_insertion_point(field_get:MSG.GMember_.grade)
  return static_cast< ::MSG::GMember__GradeType >(grade_);
}
inline void GMember_::set_grade(::MSG::GMember__GradeType value) {
  assert(::MSG::GMember__GradeType_IsValid(value));
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:MSG.GMember_.grade)
}

// -------------------------------------------------------------------

// Group_

// required uint64 gid = 1;
inline bool Group_::has_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Group_::set_has_gid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Group_::clear_has_gid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Group_::clear_gid() {
  gid_ = GOOGLE_ULONGLONG(0);
  clear_has_gid();
}
inline ::google::protobuf::uint64 Group_::gid() const {
  // @@protoc_insertion_point(field_get:MSG.Group_.gid)
  return gid_;
}
inline void Group_::set_gid(::google::protobuf::uint64 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:MSG.Group_.gid)
}

// required string name = 2;
inline bool Group_::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Group_::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Group_::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Group_::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Group_::name() const {
  // @@protoc_insertion_point(field_get:MSG.Group_.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Group_::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Group_.name)
}
inline void Group_::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Group_.name)
}
inline void Group_::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Group_.name)
}
inline ::std::string* Group_::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MSG.Group_.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Group_::release_name() {
  // @@protoc_insertion_point(field_release:MSG.Group_.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Group_::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.Group_.name)
}

// required string country = 3;
inline bool Group_::has_country() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Group_::set_has_country() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Group_::clear_has_country() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Group_::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
inline const ::std::string& Group_::country() const {
  // @@protoc_insertion_point(field_get:MSG.Group_.country)
  return country_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Group_::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.Group_.country)
}
inline void Group_::set_country(const char* value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.Group_.country)
}
inline void Group_::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.Group_.country)
}
inline ::std::string* Group_::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:MSG.Group_.country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Group_::release_country() {
  // @@protoc_insertion_point(field_release:MSG.Group_.country)
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Group_::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:MSG.Group_.country)
}

// required uint64 leader = 4;
inline bool Group_::has_leader() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Group_::set_has_leader() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Group_::clear_has_leader() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Group_::clear_leader() {
  leader_ = GOOGLE_ULONGLONG(0);
  clear_has_leader();
}
inline ::google::protobuf::uint64 Group_::leader() const {
  // @@protoc_insertion_point(field_get:MSG.Group_.leader)
  return leader_;
}
inline void Group_::set_leader(::google::protobuf::uint64 value) {
  set_has_leader();
  leader_ = value;
  // @@protoc_insertion_point(field_set:MSG.Group_.leader)
}

// required uint32 limit = 5;
inline bool Group_::has_limit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Group_::set_has_limit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Group_::clear_has_limit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Group_::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 Group_::limit() const {
  // @@protoc_insertion_point(field_get:MSG.Group_.limit)
  return limit_;
}
inline void Group_::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:MSG.Group_.limit)
}

// repeated .MSG.GMember_ members = 6;
inline int Group_::members_size() const {
  return members_.size();
}
inline void Group_::clear_members() {
  members_.Clear();
}
inline const ::MSG::GMember_& Group_::members(int index) const {
  // @@protoc_insertion_point(field_get:MSG.Group_.members)
  return members_.Get(index);
}
inline ::MSG::GMember_* Group_::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.Group_.members)
  return members_.Mutable(index);
}
inline ::MSG::GMember_* Group_::add_members() {
  // @@protoc_insertion_point(field_add:MSG.Group_.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MSG::GMember_ >*
Group_::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:MSG.Group_.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG::GMember_ >&
Group_::members() const {
  // @@protoc_insertion_point(field_list:MSG.Group_.members)
  return members_;
}

// -------------------------------------------------------------------

// ChatData_

// required uint64 uid = 1;
inline bool ChatData_::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatData_::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatData_::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatData_::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 ChatData_::uid() const {
  // @@protoc_insertion_point(field_get:MSG.ChatData_.uid)
  return uid_;
}
inline void ChatData_::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:MSG.ChatData_.uid)
}

// required string name = 2;
inline bool ChatData_::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatData_::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatData_::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatData_::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ChatData_::name() const {
  // @@protoc_insertion_point(field_get:MSG.ChatData_.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatData_::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.ChatData_.name)
}
inline void ChatData_::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.ChatData_.name)
}
inline void ChatData_::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.ChatData_.name)
}
inline ::std::string* ChatData_::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MSG.ChatData_.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatData_::release_name() {
  // @@protoc_insertion_point(field_release:MSG.ChatData_.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatData_::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.ChatData_.name)
}

// required string groupName = 3;
inline bool ChatData_::has_groupname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatData_::set_has_groupname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatData_::clear_has_groupname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatData_::clear_groupname() {
  groupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupname();
}
inline const ::std::string& ChatData_::groupname() const {
  // @@protoc_insertion_point(field_get:MSG.ChatData_.groupName)
  return groupname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatData_::set_groupname(const ::std::string& value) {
  set_has_groupname();
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.ChatData_.groupName)
}
inline void ChatData_::set_groupname(const char* value) {
  set_has_groupname();
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.ChatData_.groupName)
}
inline void ChatData_::set_groupname(const char* value, size_t size) {
  set_has_groupname();
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.ChatData_.groupName)
}
inline ::std::string* ChatData_::mutable_groupname() {
  set_has_groupname();
  // @@protoc_insertion_point(field_mutable:MSG.ChatData_.groupName)
  return groupname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatData_::release_groupname() {
  // @@protoc_insertion_point(field_release:MSG.ChatData_.groupName)
  clear_has_groupname();
  return groupname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatData_::set_allocated_groupname(::std::string* groupname) {
  if (groupname != NULL) {
    set_has_groupname();
  } else {
    clear_has_groupname();
  }
  groupname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), groupname);
  // @@protoc_insertion_point(field_set_allocated:MSG.ChatData_.groupName)
}

// required string language = 4;
inline bool ChatData_::has_language() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChatData_::set_has_language() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChatData_::clear_has_language() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChatData_::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_language();
}
inline const ::std::string& ChatData_::language() const {
  // @@protoc_insertion_point(field_get:MSG.ChatData_.language)
  return language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatData_::set_language(const ::std::string& value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.ChatData_.language)
}
inline void ChatData_::set_language(const char* value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.ChatData_.language)
}
inline void ChatData_::set_language(const char* value, size_t size) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.ChatData_.language)
}
inline ::std::string* ChatData_::mutable_language() {
  set_has_language();
  // @@protoc_insertion_point(field_mutable:MSG.ChatData_.language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatData_::release_language() {
  // @@protoc_insertion_point(field_release:MSG.ChatData_.language)
  clear_has_language();
  return language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatData_::set_allocated_language(::std::string* language) {
  if (language != NULL) {
    set_has_language();
  } else {
    clear_has_language();
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:MSG.ChatData_.language)
}

// required string chat = 5;
inline bool ChatData_::has_chat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChatData_::set_has_chat() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChatData_::clear_has_chat() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChatData_::clear_chat() {
  chat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat();
}
inline const ::std::string& ChatData_::chat() const {
  // @@protoc_insertion_point(field_get:MSG.ChatData_.chat)
  return chat_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatData_::set_chat(const ::std::string& value) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.ChatData_.chat)
}
inline void ChatData_::set_chat(const char* value) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.ChatData_.chat)
}
inline void ChatData_::set_chat(const char* value, size_t size) {
  set_has_chat();
  chat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.ChatData_.chat)
}
inline ::std::string* ChatData_::mutable_chat() {
  set_has_chat();
  // @@protoc_insertion_point(field_mutable:MSG.ChatData_.chat)
  return chat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatData_::release_chat() {
  // @@protoc_insertion_point(field_release:MSG.ChatData_.chat)
  clear_has_chat();
  return chat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatData_::set_allocated_chat(::std::string* chat) {
  if (chat != NULL) {
    set_has_chat();
  } else {
    clear_has_chat();
  }
  chat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat);
  // @@protoc_insertion_point(field_set_allocated:MSG.ChatData_.chat)
}

// required uint64 regDate = 6;
inline bool ChatData_::has_regdate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChatData_::set_has_regdate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChatData_::clear_has_regdate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChatData_::clear_regdate() {
  regdate_ = GOOGLE_ULONGLONG(0);
  clear_has_regdate();
}
inline ::google::protobuf::uint64 ChatData_::regdate() const {
  // @@protoc_insertion_point(field_get:MSG.ChatData_.regDate)
  return regdate_;
}
inline void ChatData_::set_regdate(::google::protobuf::uint64 value) {
  set_has_regdate();
  regdate_ = value;
  // @@protoc_insertion_point(field_set:MSG.ChatData_.regDate)
}

// -------------------------------------------------------------------

// ChatRoom_

// required uint64 rid = 1;
inline bool ChatRoom_::has_rid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatRoom_::set_has_rid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatRoom_::clear_has_rid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatRoom_::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
  clear_has_rid();
}
inline ::google::protobuf::uint64 ChatRoom_::rid() const {
  // @@protoc_insertion_point(field_get:MSG.ChatRoom_.rid)
  return rid_;
}
inline void ChatRoom_::set_rid(::google::protobuf::uint64 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:MSG.ChatRoom_.rid)
}

// required string name = 2;
inline bool ChatRoom_::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatRoom_::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatRoom_::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatRoom_::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ChatRoom_::name() const {
  // @@protoc_insertion_point(field_get:MSG.ChatRoom_.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatRoom_::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.ChatRoom_.name)
}
inline void ChatRoom_::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.ChatRoom_.name)
}
inline void ChatRoom_::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.ChatRoom_.name)
}
inline ::std::string* ChatRoom_::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MSG.ChatRoom_.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatRoom_::release_name() {
  // @@protoc_insertion_point(field_release:MSG.ChatRoom_.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatRoom_::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.ChatRoom_.name)
}

// repeated .MSG.ChatData_ chats = 3;
inline int ChatRoom_::chats_size() const {
  return chats_.size();
}
inline void ChatRoom_::clear_chats() {
  chats_.Clear();
}
inline const ::MSG::ChatData_& ChatRoom_::chats(int index) const {
  // @@protoc_insertion_point(field_get:MSG.ChatRoom_.chats)
  return chats_.Get(index);
}
inline ::MSG::ChatData_* ChatRoom_::mutable_chats(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.ChatRoom_.chats)
  return chats_.Mutable(index);
}
inline ::MSG::ChatData_* ChatRoom_::add_chats() {
  // @@protoc_insertion_point(field_add:MSG.ChatRoom_.chats)
  return chats_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MSG::ChatData_ >*
ChatRoom_::mutable_chats() {
  // @@protoc_insertion_point(field_mutable_list:MSG.ChatRoom_.chats)
  return &chats_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG::ChatData_ >&
ChatRoom_::chats() const {
  // @@protoc_insertion_point(field_list:MSG.ChatRoom_.chats)
  return chats_;
}

// -------------------------------------------------------------------

// ChatChannel_

// required uint64 cid = 1;
inline bool ChatChannel_::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatChannel_::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatChannel_::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatChannel_::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 ChatChannel_::cid() const {
  // @@protoc_insertion_point(field_get:MSG.ChatChannel_.cid)
  return cid_;
}
inline void ChatChannel_::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:MSG.ChatChannel_.cid)
}

// required string name = 2;
inline bool ChatChannel_::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatChannel_::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatChannel_::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatChannel_::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ChatChannel_::name() const {
  // @@protoc_insertion_point(field_get:MSG.ChatChannel_.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatChannel_::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.ChatChannel_.name)
}
inline void ChatChannel_::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.ChatChannel_.name)
}
inline void ChatChannel_::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.ChatChannel_.name)
}
inline ::std::string* ChatChannel_::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MSG.ChatChannel_.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatChannel_::release_name() {
  // @@protoc_insertion_point(field_release:MSG.ChatChannel_.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatChannel_::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.ChatChannel_.name)
}

// repeated .MSG.ChatData_ chats = 3;
inline int ChatChannel_::chats_size() const {
  return chats_.size();
}
inline void ChatChannel_::clear_chats() {
  chats_.Clear();
}
inline const ::MSG::ChatData_& ChatChannel_::chats(int index) const {
  // @@protoc_insertion_point(field_get:MSG.ChatChannel_.chats)
  return chats_.Get(index);
}
inline ::MSG::ChatData_* ChatChannel_::mutable_chats(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.ChatChannel_.chats)
  return chats_.Mutable(index);
}
inline ::MSG::ChatData_* ChatChannel_::add_chats() {
  // @@protoc_insertion_point(field_add:MSG.ChatChannel_.chats)
  return chats_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MSG::ChatData_ >*
ChatChannel_::mutable_chats() {
  // @@protoc_insertion_point(field_mutable_list:MSG.ChatChannel_.chats)
  return &chats_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG::ChatData_ >&
ChatChannel_::chats() const {
  // @@protoc_insertion_point(field_list:MSG.ChatChannel_.chats)
  return chats_;
}

// -------------------------------------------------------------------

// CharData_

// required uint64 cid = 1;
inline bool CharData_::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharData_::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharData_::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharData_::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 CharData_::cid() const {
  // @@protoc_insertion_point(field_get:MSG.CharData_.cid)
  return cid_;
}
inline void CharData_::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:MSG.CharData_.cid)
}

// required uint64 uid = 2;
inline bool CharData_::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharData_::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharData_::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharData_::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 CharData_::uid() const {
  // @@protoc_insertion_point(field_get:MSG.CharData_.uid)
  return uid_;
}
inline void CharData_::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:MSG.CharData_.uid)
}

// optional uint32 slotNo = 3;
inline bool CharData_::has_slotno() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharData_::set_has_slotno() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharData_::clear_has_slotno() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharData_::clear_slotno() {
  slotno_ = 0u;
  clear_has_slotno();
}
inline ::google::protobuf::uint32 CharData_::slotno() const {
  // @@protoc_insertion_point(field_get:MSG.CharData_.slotNo)
  return slotno_;
}
inline void CharData_::set_slotno(::google::protobuf::uint32 value) {
  set_has_slotno();
  slotno_ = value;
  // @@protoc_insertion_point(field_set:MSG.CharData_.slotNo)
}

// optional uint32 typeNo = 4;
inline bool CharData_::has_typeno() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharData_::set_has_typeno() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharData_::clear_has_typeno() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharData_::clear_typeno() {
  typeno_ = 0u;
  clear_has_typeno();
}
inline ::google::protobuf::uint32 CharData_::typeno() const {
  // @@protoc_insertion_point(field_get:MSG.CharData_.typeNo)
  return typeno_;
}
inline void CharData_::set_typeno(::google::protobuf::uint32 value) {
  set_has_typeno();
  typeno_ = value;
  // @@protoc_insertion_point(field_set:MSG.CharData_.typeNo)
}

// optional uint32 level = 5;
inline bool CharData_::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharData_::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharData_::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharData_::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CharData_::level() const {
  // @@protoc_insertion_point(field_get:MSG.CharData_.level)
  return level_;
}
inline void CharData_::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:MSG.CharData_.level)
}

// optional uint32 tier = 6;
inline bool CharData_::has_tier() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharData_::set_has_tier() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharData_::clear_has_tier() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharData_::clear_tier() {
  tier_ = 0u;
  clear_has_tier();
}
inline ::google::protobuf::uint32 CharData_::tier() const {
  // @@protoc_insertion_point(field_get:MSG.CharData_.tier)
  return tier_;
}
inline void CharData_::set_tier(::google::protobuf::uint32 value) {
  set_has_tier();
  tier_ = value;
  // @@protoc_insertion_point(field_set:MSG.CharData_.tier)
}

// optional string regDate = 7;
inline bool CharData_::has_regdate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharData_::set_has_regdate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharData_::clear_has_regdate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharData_::clear_regdate() {
  regdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_regdate();
}
inline const ::std::string& CharData_::regdate() const {
  // @@protoc_insertion_point(field_get:MSG.CharData_.regDate)
  return regdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharData_::set_regdate(const ::std::string& value) {
  set_has_regdate();
  regdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.CharData_.regDate)
}
inline void CharData_::set_regdate(const char* value) {
  set_has_regdate();
  regdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.CharData_.regDate)
}
inline void CharData_::set_regdate(const char* value, size_t size) {
  set_has_regdate();
  regdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.CharData_.regDate)
}
inline ::std::string* CharData_::mutable_regdate() {
  set_has_regdate();
  // @@protoc_insertion_point(field_mutable:MSG.CharData_.regDate)
  return regdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CharData_::release_regdate() {
  // @@protoc_insertion_point(field_release:MSG.CharData_.regDate)
  clear_has_regdate();
  return regdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharData_::set_allocated_regdate(::std::string* regdate) {
  if (regdate != NULL) {
    set_has_regdate();
  } else {
    clear_has_regdate();
  }
  regdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regdate);
  // @@protoc_insertion_point(field_set_allocated:MSG.CharData_.regDate)
}

// -------------------------------------------------------------------

// DungeonData_

// required uint32 no = 1;
inline bool DungeonData_::has_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DungeonData_::set_has_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DungeonData_::clear_has_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DungeonData_::clear_no() {
  no_ = 0u;
  clear_has_no();
}
inline ::google::protobuf::uint32 DungeonData_::no() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonData_.no)
  return no_;
}
inline void DungeonData_::set_no(::google::protobuf::uint32 value) {
  set_has_no();
  no_ = value;
  // @@protoc_insertion_point(field_set:MSG.DungeonData_.no)
}

// required uint32 tier = 2;
inline bool DungeonData_::has_tier() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DungeonData_::set_has_tier() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DungeonData_::clear_has_tier() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DungeonData_::clear_tier() {
  tier_ = 0u;
  clear_has_tier();
}
inline ::google::protobuf::uint32 DungeonData_::tier() const {
  // @@protoc_insertion_point(field_get:MSG.DungeonData_.tier)
  return tier_;
}
inline void DungeonData_::set_tier(::google::protobuf::uint32 value) {
  set_has_tier();
  tier_ = value;
  // @@protoc_insertion_point(field_set:MSG.DungeonData_.tier)
}

// repeated .MSG.CharData_ monsters = 3;
inline int DungeonData_::monsters_size() const {
  return monsters_.size();
}
inline void DungeonData_::clear_monsters() {
  monsters_.Clear();
}
inline const ::MSG::CharData_& DungeonData_::monsters(int index) const {
  // @@protoc_insertion_point(field_get:MSG.DungeonData_.monsters)
  return monsters_.Get(index);
}
inline ::MSG::CharData_* DungeonData_::mutable_monsters(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.DungeonData_.monsters)
  return monsters_.Mutable(index);
}
inline ::MSG::CharData_* DungeonData_::add_monsters() {
  // @@protoc_insertion_point(field_add:MSG.DungeonData_.monsters)
  return monsters_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MSG::CharData_ >*
DungeonData_::mutable_monsters() {
  // @@protoc_insertion_point(field_mutable_list:MSG.DungeonData_.monsters)
  return &monsters_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG::CharData_ >&
DungeonData_::monsters() const {
  // @@protoc_insertion_point(field_list:MSG.DungeonData_.monsters)
  return monsters_;
}

// -------------------------------------------------------------------

// BattleData__Attack

// required uint32 no = 1;
inline bool BattleData__Attack::has_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleData__Attack::set_has_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleData__Attack::clear_has_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleData__Attack::clear_no() {
  no_ = 0u;
  clear_has_no();
}
inline ::google::protobuf::uint32 BattleData__Attack::no() const {
  // @@protoc_insertion_point(field_get:MSG.BattleData_.Attack.no)
  return no_;
}
inline void BattleData__Attack::set_no(::google::protobuf::uint32 value) {
  set_has_no();
  no_ = value;
  // @@protoc_insertion_point(field_set:MSG.BattleData_.Attack.no)
}

// required uint32 damage = 2;
inline bool BattleData__Attack::has_damage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleData__Attack::set_has_damage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleData__Attack::clear_has_damage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleData__Attack::clear_damage() {
  damage_ = 0u;
  clear_has_damage();
}
inline ::google::protobuf::uint32 BattleData__Attack::damage() const {
  // @@protoc_insertion_point(field_get:MSG.BattleData_.Attack.damage)
  return damage_;
}
inline void BattleData__Attack::set_damage(::google::protobuf::uint32 value) {
  set_has_damage();
  damage_ = value;
  // @@protoc_insertion_point(field_set:MSG.BattleData_.Attack.damage)
}

// required .MSG.BattleData_.AttackResult result = 3;
inline bool BattleData__Attack::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleData__Attack::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleData__Attack::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleData__Attack::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::MSG::BattleData__AttackResult BattleData__Attack::result() const {
  // @@protoc_insertion_point(field_get:MSG.BattleData_.Attack.result)
  return static_cast< ::MSG::BattleData__AttackResult >(result_);
}
inline void BattleData__Attack::set_result(::MSG::BattleData__AttackResult value) {
  assert(::MSG::BattleData__AttackResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:MSG.BattleData_.Attack.result)
}

// -------------------------------------------------------------------

// BattleData_

// required uint32 srcNo = 1;
inline bool BattleData_::has_srcno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleData_::set_has_srcno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleData_::clear_has_srcno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleData_::clear_srcno() {
  srcno_ = 0u;
  clear_has_srcno();
}
inline ::google::protobuf::uint32 BattleData_::srcno() const {
  // @@protoc_insertion_point(field_get:MSG.BattleData_.srcNo)
  return srcno_;
}
inline void BattleData_::set_srcno(::google::protobuf::uint32 value) {
  set_has_srcno();
  srcno_ = value;
  // @@protoc_insertion_point(field_set:MSG.BattleData_.srcNo)
}

// repeated .MSG.BattleData_.Attack targets = 2;
inline int BattleData_::targets_size() const {
  return targets_.size();
}
inline void BattleData_::clear_targets() {
  targets_.Clear();
}
inline const ::MSG::BattleData__Attack& BattleData_::targets(int index) const {
  // @@protoc_insertion_point(field_get:MSG.BattleData_.targets)
  return targets_.Get(index);
}
inline ::MSG::BattleData__Attack* BattleData_::mutable_targets(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.BattleData_.targets)
  return targets_.Mutable(index);
}
inline ::MSG::BattleData__Attack* BattleData_::add_targets() {
  // @@protoc_insertion_point(field_add:MSG.BattleData_.targets)
  return targets_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MSG::BattleData__Attack >*
BattleData_::mutable_targets() {
  // @@protoc_insertion_point(field_mutable_list:MSG.BattleData_.targets)
  return &targets_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG::BattleData__Attack >&
BattleData_::targets() const {
  // @@protoc_insertion_point(field_list:MSG.BattleData_.targets)
  return targets_;
}

// required .MSG.BattleData_.Team team = 3;
inline bool BattleData_::has_team() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleData_::set_has_team() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleData_::clear_has_team() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleData_::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::MSG::BattleData__Team BattleData_::team() const {
  // @@protoc_insertion_point(field_get:MSG.BattleData_.team)
  return static_cast< ::MSG::BattleData__Team >(team_);
}
inline void BattleData_::set_team(::MSG::BattleData__Team value) {
  assert(::MSG::BattleData__Team_IsValid(value));
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:MSG.BattleData_.team)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace MSG

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MSG::Contents__ContentType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MSG::Contents__ContentType>() {
  return ::MSG::Contents__ContentType_descriptor();
}
template <> struct is_proto_enum< ::MSG::GMember__GradeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MSG::GMember__GradeType>() {
  return ::MSG::GMember__GradeType_descriptor();
}
template <> struct is_proto_enum< ::MSG::BattleData__AttackResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MSG::BattleData__AttackResult>() {
  return ::MSG::BattleData__AttackResult_descriptor();
}
template <> struct is_proto_enum< ::MSG::BattleData__Team> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MSG::BattleData__Team>() {
  return ::MSG::BattleData__Team_descriptor();
}
template <> struct is_proto_enum< ::MSG::MsgId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MSG::MsgId>() {
  return ::MSG::MsgId_descriptor();
}
template <> struct is_proto_enum< ::MSG::ErrorCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MSG::ErrorCode>() {
  return ::MSG::ErrorCode_descriptor();
}
template <> struct is_proto_enum< ::MSG::PlatForm> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MSG::PlatForm>() {
  return ::MSG::PlatForm_descriptor();
}
template <> struct is_proto_enum< ::MSG::ChatType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MSG::ChatType>() {
  return ::MSG::ChatType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_common_2eproto__INCLUDED
