// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MSG {

namespace {

const ::google::protobuf::Descriptor* PingReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PingReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PongAns_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PongAns_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginAns_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginAns_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegistReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegistReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegistAns_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegistAns_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_login_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_login_2eproto() {
  protobuf_AddDesc_login_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "login.proto");
  GOOGLE_CHECK(file != NULL);
  PingReq_descriptor_ = file->message_type(0);
  static const int PingReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingReq, session_key_),
  };
  PingReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PingReq_descriptor_,
      PingReq::default_instance_,
      PingReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PingReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingReq, _internal_metadata_),
      -1);
  PongAns_descriptor_ = file->message_type(1);
  static const int PongAns_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PongAns, err_),
  };
  PongAns_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PongAns_descriptor_,
      PongAns::default_instance_,
      PongAns_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PongAns, _has_bits_[0]),
      -1,
      -1,
      sizeof(PongAns),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PongAns, _internal_metadata_),
      -1);
  LoginReq_descriptor_ = file->message_type(2);
  static const int LoginReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, name_),
  };
  LoginReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginReq_descriptor_,
      LoginReq::default_instance_,
      LoginReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(LoginReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, _internal_metadata_),
      -1);
  LoginAns_descriptor_ = file->message_type(3);
  static const int LoginAns_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAns, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAns, session_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAns, data_),
  };
  LoginAns_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginAns_descriptor_,
      LoginAns::default_instance_,
      LoginAns_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAns, _has_bits_[0]),
      -1,
      -1,
      sizeof(LoginAns),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAns, _internal_metadata_),
      -1);
  RegistReq_descriptor_ = file->message_type(4);
  static const int RegistReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistReq, data_),
  };
  RegistReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RegistReq_descriptor_,
      RegistReq::default_instance_,
      RegistReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(RegistReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistReq, _internal_metadata_),
      -1);
  RegistAns_descriptor_ = file->message_type(5);
  static const int RegistAns_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistAns, err_),
  };
  RegistAns_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RegistAns_descriptor_,
      RegistAns::default_instance_,
      RegistAns_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistAns, _has_bits_[0]),
      -1,
      -1,
      sizeof(RegistAns),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistAns, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_login_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PingReq_descriptor_, &PingReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PongAns_descriptor_, &PongAns::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginReq_descriptor_, &LoginReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginAns_descriptor_, &LoginAns::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RegistReq_descriptor_, &RegistReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RegistAns_descriptor_, &RegistAns::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_login_2eproto() {
  delete PingReq::default_instance_;
  delete PingReq_reflection_;
  delete PongAns::default_instance_;
  delete PongAns_reflection_;
  delete LoginReq::default_instance_;
  delete LoginReq_reflection_;
  delete LoginAns::default_instance_;
  delete LoginAns_reflection_;
  delete RegistReq::default_instance_;
  delete RegistReq_reflection_;
  delete RegistAns::default_instance_;
  delete RegistAns_reflection_;
}

void protobuf_AddDesc_login_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_login_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::MSG::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013login.proto\022\003MSG\032\014common.proto\"\036\n\007Ping"
    "Req\022\023\n\013session_key\030\001 \002(\t\"&\n\007PongAns\022\033\n\003e"
    "rr\030\001 \002(\0162\016.MSG.ErrorCode\"\030\n\010LoginReq\022\014\n\004"
    "name\030\001 \002(\t\"Z\n\010LoginAns\022\033\n\003err\030\001 \002(\0162\016.MS"
    "G.ErrorCode\022\023\n\013session_key\030\002 \002(\t\022\034\n\004data"
    "\030\003 \001(\0132\016.MSG.UserData_\")\n\tRegistReq\022\034\n\004d"
    "ata\030\001 \002(\0132\016.MSG.UserData_\"(\n\tRegistAns\022\033"
    "\n\003err\030\001 \002(\0162\016.MSG.ErrorCode", 307);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "login.proto", &protobuf_RegisterTypes);
  PingReq::default_instance_ = new PingReq();
  PongAns::default_instance_ = new PongAns();
  LoginReq::default_instance_ = new LoginReq();
  LoginAns::default_instance_ = new LoginAns();
  RegistReq::default_instance_ = new RegistReq();
  RegistAns::default_instance_ = new RegistAns();
  PingReq::default_instance_->InitAsDefaultInstance();
  PongAns::default_instance_->InitAsDefaultInstance();
  LoginReq::default_instance_->InitAsDefaultInstance();
  LoginAns::default_instance_->InitAsDefaultInstance();
  RegistReq::default_instance_->InitAsDefaultInstance();
  RegistAns::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_login_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_login_2eproto {
  StaticDescriptorInitializer_login_2eproto() {
    protobuf_AddDesc_login_2eproto();
  }
} static_descriptor_initializer_login_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PingReq::kSessionKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PingReq::PingReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.PingReq)
}

void PingReq::InitAsDefaultInstance() {
}

PingReq::PingReq(const PingReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.PingReq)
}

void PingReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  session_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PingReq::~PingReq() {
  // @@protoc_insertion_point(destructor:MSG.PingReq)
  SharedDtor();
}

void PingReq::SharedDtor() {
  session_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PingReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PingReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PingReq_descriptor_;
}

const PingReq& PingReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

PingReq* PingReq::default_instance_ = NULL;

PingReq* PingReq::New(::google::protobuf::Arena* arena) const {
  PingReq* n = new PingReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PingReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.PingReq)
  if (has_session_key()) {
    session_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PingReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.PingReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string session_key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->session_key().data(), this->session_key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.PingReq.session_key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.PingReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.PingReq)
  return false;
#undef DO_
}

void PingReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.PingReq)
  // required string session_key = 1;
  if (has_session_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->session_key().data(), this->session_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.PingReq.session_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->session_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.PingReq)
}

::google::protobuf::uint8* PingReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.PingReq)
  // required string session_key = 1;
  if (has_session_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->session_key().data(), this->session_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.PingReq.session_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->session_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.PingReq)
  return target;
}

int PingReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.PingReq)
  int total_size = 0;

  // required string session_key = 1;
  if (has_session_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_key());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PingReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.PingReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PingReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PingReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.PingReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.PingReq)
    MergeFrom(*source);
  }
}

void PingReq::MergeFrom(const PingReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.PingReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_session_key()) {
      set_has_session_key();
      session_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_key_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PingReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.PingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingReq::CopyFrom(const PingReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.PingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PingReq::Swap(PingReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PingReq::InternalSwap(PingReq* other) {
  session_key_.Swap(&other->session_key_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PingReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PingReq_descriptor_;
  metadata.reflection = PingReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PingReq

// required string session_key = 1;
bool PingReq::has_session_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PingReq::set_has_session_key() {
  _has_bits_[0] |= 0x00000001u;
}
void PingReq::clear_has_session_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void PingReq::clear_session_key() {
  session_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_session_key();
}
 const ::std::string& PingReq::session_key() const {
  // @@protoc_insertion_point(field_get:MSG.PingReq.session_key)
  return session_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PingReq::set_session_key(const ::std::string& value) {
  set_has_session_key();
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.PingReq.session_key)
}
 void PingReq::set_session_key(const char* value) {
  set_has_session_key();
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.PingReq.session_key)
}
 void PingReq::set_session_key(const char* value, size_t size) {
  set_has_session_key();
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.PingReq.session_key)
}
 ::std::string* PingReq::mutable_session_key() {
  set_has_session_key();
  // @@protoc_insertion_point(field_mutable:MSG.PingReq.session_key)
  return session_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PingReq::release_session_key() {
  // @@protoc_insertion_point(field_release:MSG.PingReq.session_key)
  clear_has_session_key();
  return session_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PingReq::set_allocated_session_key(::std::string* session_key) {
  if (session_key != NULL) {
    set_has_session_key();
  } else {
    clear_has_session_key();
  }
  session_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_key);
  // @@protoc_insertion_point(field_set_allocated:MSG.PingReq.session_key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PongAns::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PongAns::PongAns()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.PongAns)
}

void PongAns::InitAsDefaultInstance() {
}

PongAns::PongAns(const PongAns& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.PongAns)
}

void PongAns::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PongAns::~PongAns() {
  // @@protoc_insertion_point(destructor:MSG.PongAns)
  SharedDtor();
}

void PongAns::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PongAns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PongAns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PongAns_descriptor_;
}

const PongAns& PongAns::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

PongAns* PongAns::default_instance_ = NULL;

PongAns* PongAns::New(::google::protobuf::Arena* arena) const {
  PongAns* n = new PongAns;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PongAns::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.PongAns)
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PongAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.PongAns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MSG.ErrorCode err = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MSG::ErrorCode_IsValid(value)) {
            set_err(static_cast< ::MSG::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.PongAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.PongAns)
  return false;
#undef DO_
}

void PongAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.PongAns)
  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.PongAns)
}

::google::protobuf::uint8* PongAns::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.PongAns)
  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.PongAns)
  return target;
}

int PongAns::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.PongAns)
  int total_size = 0;

  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->err());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PongAns::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.PongAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PongAns* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PongAns>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.PongAns)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.PongAns)
    MergeFrom(*source);
  }
}

void PongAns::MergeFrom(const PongAns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.PongAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PongAns::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.PongAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PongAns::CopyFrom(const PongAns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.PongAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PongAns::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PongAns::Swap(PongAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PongAns::InternalSwap(PongAns* other) {
  std::swap(err_, other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PongAns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PongAns_descriptor_;
  metadata.reflection = PongAns_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PongAns

// required .MSG.ErrorCode err = 1;
bool PongAns::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PongAns::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
void PongAns::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
void PongAns::clear_err() {
  err_ = 0;
  clear_has_err();
}
 ::MSG::ErrorCode PongAns::err() const {
  // @@protoc_insertion_point(field_get:MSG.PongAns.err)
  return static_cast< ::MSG::ErrorCode >(err_);
}
 void PongAns::set_err(::MSG::ErrorCode value) {
  assert(::MSG::ErrorCode_IsValid(value));
  set_has_err();
  err_ = value;
  // @@protoc_insertion_point(field_set:MSG.PongAns.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginReq::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginReq::LoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.LoginReq)
}

void LoginReq::InitAsDefaultInstance() {
}

LoginReq::LoginReq(const LoginReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.LoginReq)
}

void LoginReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginReq::~LoginReq() {
  // @@protoc_insertion_point(destructor:MSG.LoginReq)
  SharedDtor();
}

void LoginReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginReq_descriptor_;
}

const LoginReq& LoginReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

LoginReq* LoginReq::default_instance_ = NULL;

LoginReq* LoginReq::New(::google::protobuf::Arena* arena) const {
  LoginReq* n = new LoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.LoginReq)
  if (has_name()) {
    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.LoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.LoginReq.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.LoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.LoginReq)
  return false;
#undef DO_
}

void LoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.LoginReq)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.LoginReq.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.LoginReq)
}

::google::protobuf::uint8* LoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.LoginReq)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.LoginReq.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.LoginReq)
  return target;
}

int LoginReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.LoginReq)
  int total_size = 0;

  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.LoginReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LoginReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.LoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.LoginReq)
    MergeFrom(*source);
  }
}

void LoginReq::MergeFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.LoginReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReq::CopyFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void LoginReq::Swap(LoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReq::InternalSwap(LoginReq* other) {
  name_.Swap(&other->name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginReq_descriptor_;
  metadata.reflection = LoginReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginReq

// required string name = 1;
bool LoginReq::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LoginReq::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void LoginReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void LoginReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& LoginReq::name() const {
  // @@protoc_insertion_point(field_get:MSG.LoginReq.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginReq::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.LoginReq.name)
}
 void LoginReq::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.LoginReq.name)
}
 void LoginReq::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.LoginReq.name)
}
 ::std::string* LoginReq::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MSG.LoginReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginReq::release_name() {
  // @@protoc_insertion_point(field_release:MSG.LoginReq.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MSG.LoginReq.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginAns::kErrFieldNumber;
const int LoginAns::kSessionKeyFieldNumber;
const int LoginAns::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginAns::LoginAns()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.LoginAns)
}

void LoginAns::InitAsDefaultInstance() {
  data_ = const_cast< ::MSG::UserData_*>(&::MSG::UserData_::default_instance());
}

LoginAns::LoginAns(const LoginAns& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.LoginAns)
}

void LoginAns::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  err_ = 0;
  session_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginAns::~LoginAns() {
  // @@protoc_insertion_point(destructor:MSG.LoginAns)
  SharedDtor();
}

void LoginAns::SharedDtor() {
  session_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete data_;
  }
}

void LoginAns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginAns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginAns_descriptor_;
}

const LoginAns& LoginAns::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

LoginAns* LoginAns::default_instance_ = NULL;

LoginAns* LoginAns::New(::google::protobuf::Arena* arena) const {
  LoginAns* n = new LoginAns;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginAns::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.LoginAns)
  if (_has_bits_[0 / 32] & 7u) {
    err_ = 0;
    if (has_session_key()) {
      session_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_data()) {
      if (data_ != NULL) data_->::MSG::UserData_::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LoginAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.LoginAns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MSG.ErrorCode err = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MSG::ErrorCode_IsValid(value)) {
            set_err(static_cast< ::MSG::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_session_key;
        break;
      }

      // required string session_key = 2;
      case 2: {
        if (tag == 18) {
         parse_session_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->session_key().data(), this->session_key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MSG.LoginAns.session_key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // optional .MSG.UserData_ data = 3;
      case 3: {
        if (tag == 26) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.LoginAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.LoginAns)
  return false;
#undef DO_
}

void LoginAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.LoginAns)
  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->err(), output);
  }

  // required string session_key = 2;
  if (has_session_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->session_key().data(), this->session_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.LoginAns.session_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->session_key(), output);
  }

  // optional .MSG.UserData_ data = 3;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.LoginAns)
}

::google::protobuf::uint8* LoginAns::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.LoginAns)
  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->err(), target);
  }

  // required string session_key = 2;
  if (has_session_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->session_key().data(), this->session_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MSG.LoginAns.session_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->session_key(), target);
  }

  // optional .MSG.UserData_ data = 3;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->data_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.LoginAns)
  return target;
}

int LoginAns::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MSG.LoginAns)
  int total_size = 0;

  if (has_err()) {
    // required .MSG.ErrorCode err = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->err());
  }

  if (has_session_key()) {
    // required string session_key = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_key());
  }

  return total_size;
}
int LoginAns::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.LoginAns)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .MSG.ErrorCode err = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->err());

    // required string session_key = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_key());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .MSG.UserData_ data = 3;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginAns::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.LoginAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LoginAns* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginAns>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.LoginAns)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.LoginAns)
    MergeFrom(*source);
  }
}

void LoginAns::MergeFrom(const LoginAns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.LoginAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
    if (from.has_session_key()) {
      set_has_session_key();
      session_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_key_);
    }
    if (from.has_data()) {
      mutable_data()->::MSG::UserData_::MergeFrom(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LoginAns::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.LoginAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginAns::CopyFrom(const LoginAns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.LoginAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginAns::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_data()) {
    if (!this->data_->IsInitialized()) return false;
  }
  return true;
}

void LoginAns::Swap(LoginAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginAns::InternalSwap(LoginAns* other) {
  std::swap(err_, other->err_);
  session_key_.Swap(&other->session_key_);
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginAns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginAns_descriptor_;
  metadata.reflection = LoginAns_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginAns

// required .MSG.ErrorCode err = 1;
bool LoginAns::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LoginAns::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
void LoginAns::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
void LoginAns::clear_err() {
  err_ = 0;
  clear_has_err();
}
 ::MSG::ErrorCode LoginAns::err() const {
  // @@protoc_insertion_point(field_get:MSG.LoginAns.err)
  return static_cast< ::MSG::ErrorCode >(err_);
}
 void LoginAns::set_err(::MSG::ErrorCode value) {
  assert(::MSG::ErrorCode_IsValid(value));
  set_has_err();
  err_ = value;
  // @@protoc_insertion_point(field_set:MSG.LoginAns.err)
}

// required string session_key = 2;
bool LoginAns::has_session_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LoginAns::set_has_session_key() {
  _has_bits_[0] |= 0x00000002u;
}
void LoginAns::clear_has_session_key() {
  _has_bits_[0] &= ~0x00000002u;
}
void LoginAns::clear_session_key() {
  session_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_session_key();
}
 const ::std::string& LoginAns::session_key() const {
  // @@protoc_insertion_point(field_get:MSG.LoginAns.session_key)
  return session_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginAns::set_session_key(const ::std::string& value) {
  set_has_session_key();
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.LoginAns.session_key)
}
 void LoginAns::set_session_key(const char* value) {
  set_has_session_key();
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.LoginAns.session_key)
}
 void LoginAns::set_session_key(const char* value, size_t size) {
  set_has_session_key();
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.LoginAns.session_key)
}
 ::std::string* LoginAns::mutable_session_key() {
  set_has_session_key();
  // @@protoc_insertion_point(field_mutable:MSG.LoginAns.session_key)
  return session_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginAns::release_session_key() {
  // @@protoc_insertion_point(field_release:MSG.LoginAns.session_key)
  clear_has_session_key();
  return session_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginAns::set_allocated_session_key(::std::string* session_key) {
  if (session_key != NULL) {
    set_has_session_key();
  } else {
    clear_has_session_key();
  }
  session_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_key);
  // @@protoc_insertion_point(field_set_allocated:MSG.LoginAns.session_key)
}

// optional .MSG.UserData_ data = 3;
bool LoginAns::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LoginAns::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
void LoginAns::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
void LoginAns::clear_data() {
  if (data_ != NULL) data_->::MSG::UserData_::Clear();
  clear_has_data();
}
const ::MSG::UserData_& LoginAns::data() const {
  // @@protoc_insertion_point(field_get:MSG.LoginAns.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
::MSG::UserData_* LoginAns::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::MSG::UserData_;
  }
  // @@protoc_insertion_point(field_mutable:MSG.LoginAns.data)
  return data_;
}
::MSG::UserData_* LoginAns::release_data() {
  // @@protoc_insertion_point(field_release:MSG.LoginAns.data)
  clear_has_data();
  ::MSG::UserData_* temp = data_;
  data_ = NULL;
  return temp;
}
void LoginAns::set_allocated_data(::MSG::UserData_* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:MSG.LoginAns.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegistReq::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegistReq::RegistReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.RegistReq)
}

void RegistReq::InitAsDefaultInstance() {
  data_ = const_cast< ::MSG::UserData_*>(&::MSG::UserData_::default_instance());
}

RegistReq::RegistReq(const RegistReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.RegistReq)
}

void RegistReq::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RegistReq::~RegistReq() {
  // @@protoc_insertion_point(destructor:MSG.RegistReq)
  SharedDtor();
}

void RegistReq::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void RegistReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegistReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegistReq_descriptor_;
}

const RegistReq& RegistReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

RegistReq* RegistReq::default_instance_ = NULL;

RegistReq* RegistReq::New(::google::protobuf::Arena* arena) const {
  RegistReq* n = new RegistReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegistReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.RegistReq)
  if (has_data()) {
    if (data_ != NULL) data_->::MSG::UserData_::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RegistReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.RegistReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MSG.UserData_ data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.RegistReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.RegistReq)
  return false;
#undef DO_
}

void RegistReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.RegistReq)
  // required .MSG.UserData_ data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.RegistReq)
}

::google::protobuf::uint8* RegistReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.RegistReq)
  // required .MSG.UserData_ data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->data_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.RegistReq)
  return target;
}

int RegistReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.RegistReq)
  int total_size = 0;

  // required .MSG.UserData_ data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegistReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.RegistReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RegistReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RegistReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.RegistReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.RegistReq)
    MergeFrom(*source);
  }
}

void RegistReq::MergeFrom(const RegistReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.RegistReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::MSG::UserData_::MergeFrom(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RegistReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.RegistReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegistReq::CopyFrom(const RegistReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.RegistReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegistReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_data()) {
    if (!this->data_->IsInitialized()) return false;
  }
  return true;
}

void RegistReq::Swap(RegistReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegistReq::InternalSwap(RegistReq* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegistReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegistReq_descriptor_;
  metadata.reflection = RegistReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegistReq

// required .MSG.UserData_ data = 1;
bool RegistReq::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RegistReq::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void RegistReq::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void RegistReq::clear_data() {
  if (data_ != NULL) data_->::MSG::UserData_::Clear();
  clear_has_data();
}
const ::MSG::UserData_& RegistReq::data() const {
  // @@protoc_insertion_point(field_get:MSG.RegistReq.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
::MSG::UserData_* RegistReq::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::MSG::UserData_;
  }
  // @@protoc_insertion_point(field_mutable:MSG.RegistReq.data)
  return data_;
}
::MSG::UserData_* RegistReq::release_data() {
  // @@protoc_insertion_point(field_release:MSG.RegistReq.data)
  clear_has_data();
  ::MSG::UserData_* temp = data_;
  data_ = NULL;
  return temp;
}
void RegistReq::set_allocated_data(::MSG::UserData_* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:MSG.RegistReq.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegistAns::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegistAns::RegistAns()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.RegistAns)
}

void RegistAns::InitAsDefaultInstance() {
}

RegistAns::RegistAns(const RegistAns& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.RegistAns)
}

void RegistAns::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RegistAns::~RegistAns() {
  // @@protoc_insertion_point(destructor:MSG.RegistAns)
  SharedDtor();
}

void RegistAns::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RegistAns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegistAns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegistAns_descriptor_;
}

const RegistAns& RegistAns::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

RegistAns* RegistAns::default_instance_ = NULL;

RegistAns* RegistAns::New(::google::protobuf::Arena* arena) const {
  RegistAns* n = new RegistAns;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegistAns::Clear() {
// @@protoc_insertion_point(message_clear_start:MSG.RegistAns)
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RegistAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.RegistAns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MSG.ErrorCode err = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MSG::ErrorCode_IsValid(value)) {
            set_err(static_cast< ::MSG::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.RegistAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.RegistAns)
  return false;
#undef DO_
}

void RegistAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.RegistAns)
  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.RegistAns)
}

::google::protobuf::uint8* RegistAns::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.RegistAns)
  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.RegistAns)
  return target;
}

int RegistAns::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MSG.RegistAns)
  int total_size = 0;

  // required .MSG.ErrorCode err = 1;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->err());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegistAns::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MSG.RegistAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RegistAns* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RegistAns>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MSG.RegistAns)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MSG.RegistAns)
    MergeFrom(*source);
  }
}

void RegistAns::MergeFrom(const RegistAns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MSG.RegistAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RegistAns::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MSG.RegistAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegistAns::CopyFrom(const RegistAns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MSG.RegistAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegistAns::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RegistAns::Swap(RegistAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegistAns::InternalSwap(RegistAns* other) {
  std::swap(err_, other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegistAns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegistAns_descriptor_;
  metadata.reflection = RegistAns_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegistAns

// required .MSG.ErrorCode err = 1;
bool RegistAns::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RegistAns::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
void RegistAns::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
void RegistAns::clear_err() {
  err_ = 0;
  clear_has_err();
}
 ::MSG::ErrorCode RegistAns::err() const {
  // @@protoc_insertion_point(field_get:MSG.RegistAns.err)
  return static_cast< ::MSG::ErrorCode >(err_);
}
 void RegistAns::set_err(::MSG::ErrorCode value) {
  assert(::MSG::ErrorCode_IsValid(value));
  set_has_err();
  err_ = value;
  // @@protoc_insertion_point(field_set:MSG.RegistAns.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace MSG

// @@protoc_insertion_point(global_scope)
